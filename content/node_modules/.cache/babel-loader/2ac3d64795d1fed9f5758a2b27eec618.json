{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SmartWeaveGlobal = void 0;\n\nconst contract_read_1 = require(\"./contract-read\");\n/**\n *\n * This class is be exposed as a global for contracts\n * as 'SmartWeave' and provides an API for getting further\n * information or using utility and crypto functions from\n * inside the contracts execution.\n *\n * It provides an api:\n *\n * - SmartWeave.transaction.id\n * - SmartWeave.transaction.reward\n * - SmartWeave.block.height\n * - SmartWeave.block.timestamp\n * - etc\n *\n * and access to some of the arweave utils:\n * - SmartWeave.arweave.utils\n * - SmartWeave.arweave.crypto\n * - SmartWeave.arweave.wallets\n * - SmartWeave.arweave.ar\n *\n * as well as access to the potentially non-deterministic full client:\n * - SmartWeave.unsafeClient\n *\n */\n\n\nclass SmartWeaveGlobal {\n  constructor(arweave, contract) {\n    this.unsafeClient = arweave;\n    this.arweave = {\n      ar: arweave.ar,\n      utils: arweave.utils,\n      wallets: arweave.wallets,\n      crypto: arweave.crypto\n    };\n    this.contract = contract;\n    this.transaction = new Transaction(this);\n    this.block = new Block(this);\n    this.contracts = {\n      readContractState: (contractId, height, returnValidity) => contract_read_1.readContract(arweave, contractId, height || (this._isDryRunning ? Number.POSITIVE_INFINITY : this.block.height), returnValidity)\n    };\n  }\n\n  get _isDryRunning() {\n    return !this._activeTx;\n  }\n\n}\n\nexports.SmartWeaveGlobal = SmartWeaveGlobal; // tslint:disable-next-line: max-classes-per-file\n\nclass Transaction {\n  constructor(global) {\n    this.global = global;\n  }\n\n  get id() {\n    if (!this.global._activeTx) {\n      throw new Error('No current Tx');\n    }\n\n    return this.global._activeTx.id;\n  }\n\n  get owner() {\n    if (!this.global._activeTx) {\n      throw new Error('No current Tx');\n    }\n\n    return this.global._activeTx.owner.address;\n  }\n\n  get target() {\n    if (!this.global._activeTx) {\n      throw new Error('No current Tx');\n    }\n\n    return this.global._activeTx.recipient;\n  }\n\n  get tags() {\n    if (!this.global._activeTx) {\n      throw new Error('No current Tx');\n    }\n\n    return this.global._activeTx.tags;\n  }\n\n  get quantity() {\n    if (!this.global._activeTx) {\n      throw new Error('No current Tx');\n    }\n\n    return this.global._activeTx.quantity.winston;\n  }\n\n  get reward() {\n    if (!this.global._activeTx) {\n      throw new Error('No current Tx');\n    }\n\n    return this.global._activeTx.fee.winston;\n  }\n\n} // tslint:disable-next-line: max-classes-per-file\n\n\nclass Block {\n  constructor(global) {\n    this.global = global;\n  }\n\n  get height() {\n    if (!this.global._activeTx) {\n      throw new Error('No current Tx');\n    }\n\n    return this.global._activeTx.block.height;\n  }\n\n  get indep_hash() {\n    if (!this.global._activeTx) {\n      throw new Error('No current Tx');\n    }\n\n    return this.global._activeTx.block.id;\n  }\n\n  get timestamp() {\n    if (!this.global._activeTx) {\n      throw new Error('No current tx');\n    }\n\n    return this.global._activeTx.block.timestamp;\n  }\n\n}","map":{"version":3,"sources":["/home/al/Desktop/koi/narcissus/content/node_modules/smartweave/lib/smartweave-global.js"],"names":["Object","defineProperty","exports","value","SmartWeaveGlobal","contract_read_1","require","constructor","arweave","contract","unsafeClient","ar","utils","wallets","crypto","transaction","Transaction","block","Block","contracts","readContractState","contractId","height","returnValidity","readContract","_isDryRunning","Number","POSITIVE_INFINITY","_activeTx","global","id","Error","owner","address","target","recipient","tags","quantity","winston","reward","fee","indep_hash","timestamp"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SmartWeaveGlobal = void 0;\nconst contract_read_1 = require(\"./contract-read\");\n/**\n *\n * This class is be exposed as a global for contracts\n * as 'SmartWeave' and provides an API for getting further\n * information or using utility and crypto functions from\n * inside the contracts execution.\n *\n * It provides an api:\n *\n * - SmartWeave.transaction.id\n * - SmartWeave.transaction.reward\n * - SmartWeave.block.height\n * - SmartWeave.block.timestamp\n * - etc\n *\n * and access to some of the arweave utils:\n * - SmartWeave.arweave.utils\n * - SmartWeave.arweave.crypto\n * - SmartWeave.arweave.wallets\n * - SmartWeave.arweave.ar\n *\n * as well as access to the potentially non-deterministic full client:\n * - SmartWeave.unsafeClient\n *\n */\nclass SmartWeaveGlobal {\n    constructor(arweave, contract) {\n        this.unsafeClient = arweave;\n        this.arweave = {\n            ar: arweave.ar,\n            utils: arweave.utils,\n            wallets: arweave.wallets,\n            crypto: arweave.crypto,\n        };\n        this.contract = contract;\n        this.transaction = new Transaction(this);\n        this.block = new Block(this);\n        this.contracts = {\n            readContractState: (contractId, height, returnValidity) => contract_read_1.readContract(arweave, contractId, height || (this._isDryRunning ? Number.POSITIVE_INFINITY : this.block.height), returnValidity),\n        };\n    }\n    get _isDryRunning() {\n        return !this._activeTx;\n    }\n}\nexports.SmartWeaveGlobal = SmartWeaveGlobal;\n// tslint:disable-next-line: max-classes-per-file\nclass Transaction {\n    constructor(global) {\n        this.global = global;\n    }\n    get id() {\n        if (!this.global._activeTx) {\n            throw new Error('No current Tx');\n        }\n        return this.global._activeTx.id;\n    }\n    get owner() {\n        if (!this.global._activeTx) {\n            throw new Error('No current Tx');\n        }\n        return this.global._activeTx.owner.address;\n    }\n    get target() {\n        if (!this.global._activeTx) {\n            throw new Error('No current Tx');\n        }\n        return this.global._activeTx.recipient;\n    }\n    get tags() {\n        if (!this.global._activeTx) {\n            throw new Error('No current Tx');\n        }\n        return this.global._activeTx.tags;\n    }\n    get quantity() {\n        if (!this.global._activeTx) {\n            throw new Error('No current Tx');\n        }\n        return this.global._activeTx.quantity.winston;\n    }\n    get reward() {\n        if (!this.global._activeTx) {\n            throw new Error('No current Tx');\n        }\n        return this.global._activeTx.fee.winston;\n    }\n}\n// tslint:disable-next-line: max-classes-per-file\nclass Block {\n    constructor(global) {\n        this.global = global;\n    }\n    get height() {\n        if (!this.global._activeTx) {\n            throw new Error('No current Tx');\n        }\n        return this.global._activeTx.block.height;\n    }\n    get indep_hash() {\n        if (!this.global._activeTx) {\n            throw new Error('No current Tx');\n        }\n        return this.global._activeTx.block.id;\n    }\n    get timestamp() {\n        if (!this.global._activeTx) {\n            throw new Error('No current tx');\n        }\n        return this.global._activeTx.block.timestamp;\n    }\n}\n"]},"metadata":{},"sourceType":"script"}