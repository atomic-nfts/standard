{"ast":null,"code":"'use strict';\n\nvar hasSyncZlib = true;\n\nvar zlib = require('zlib');\n\nif (!zlib.deflateSync) {\n  hasSyncZlib = false;\n}\n\nvar constants = require('./constants');\n\nvar Packer = require('./packer');\n\nmodule.exports = function (metaData, opt) {\n  if (!hasSyncZlib) {\n    throw new Error('To use the sync capability of this library in old node versions, please also add a dependency on node-zlb-backport');\n  }\n\n  var options = opt || {};\n  var packer = new Packer(options);\n  var chunks = []; // Signature\n\n  chunks.push(new Buffer(constants.PNG_SIGNATURE)); // Header\n\n  chunks.push(packer.packIHDR(metaData.width, metaData.height));\n\n  if (metaData.gamma) {\n    chunks.push(packer.packGAMA(metaData.gamma));\n  }\n\n  var filteredData = packer.filterData(metaData.data, metaData.width, metaData.height); // compress it\n\n  var compressedData = zlib.deflateSync(filteredData, packer.getDeflateOptions());\n  filteredData = null;\n\n  if (!compressedData || !compressedData.length) {\n    throw new Error('bad png - invalid compressed data response');\n  }\n\n  chunks.push(packer.packIDAT(compressedData)); // End\n\n  chunks.push(packer.packIEND());\n  return Buffer.concat(chunks);\n};","map":{"version":3,"sources":["/home/al/Desktop/koi/narcissus/content/node_modules/pngjs-nozlib/lib/packer-sync.js"],"names":["hasSyncZlib","zlib","require","deflateSync","constants","Packer","module","exports","metaData","opt","Error","options","packer","chunks","push","Buffer","PNG_SIGNATURE","packIHDR","width","height","gamma","packGAMA","filteredData","filterData","data","compressedData","getDeflateOptions","length","packIDAT","packIEND","concat"],"mappings":"AAAA;;AAEA,IAAIA,WAAW,GAAG,IAAlB;;AACA,IAAIC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAI,CAACD,IAAI,CAACE,WAAV,EAAuB;AACrBH,EAAAA,WAAW,GAAG,KAAd;AACD;;AACD,IAAII,SAAS,GAAGF,OAAO,CAAC,aAAD,CAAvB;;AACA,IAAIG,MAAM,GAAGH,OAAO,CAAC,UAAD,CAApB;;AAEAI,MAAM,CAACC,OAAP,GAAiB,UAASC,QAAT,EAAmBC,GAAnB,EAAwB;AAEvC,MAAI,CAACT,WAAL,EAAkB;AAChB,UAAM,IAAIU,KAAJ,CAAU,oHAAV,CAAN;AACD;;AAED,MAAIC,OAAO,GAAGF,GAAG,IAAI,EAArB;AAEA,MAAIG,MAAM,GAAG,IAAIP,MAAJ,CAAWM,OAAX,CAAb;AAEA,MAAIE,MAAM,GAAG,EAAb,CAVuC,CAYvC;;AACAA,EAAAA,MAAM,CAACC,IAAP,CAAY,IAAIC,MAAJ,CAAWX,SAAS,CAACY,aAArB,CAAZ,EAbuC,CAevC;;AACAH,EAAAA,MAAM,CAACC,IAAP,CAAYF,MAAM,CAACK,QAAP,CAAgBT,QAAQ,CAACU,KAAzB,EAAgCV,QAAQ,CAACW,MAAzC,CAAZ;;AAEA,MAAIX,QAAQ,CAACY,KAAb,EAAoB;AAClBP,IAAAA,MAAM,CAACC,IAAP,CAAYF,MAAM,CAACS,QAAP,CAAgBb,QAAQ,CAACY,KAAzB,CAAZ;AACD;;AAED,MAAIE,YAAY,GAAGV,MAAM,CAACW,UAAP,CAAkBf,QAAQ,CAACgB,IAA3B,EAAiChB,QAAQ,CAACU,KAA1C,EAAiDV,QAAQ,CAACW,MAA1D,CAAnB,CAtBuC,CAwBvC;;AACA,MAAIM,cAAc,GAAGxB,IAAI,CAACE,WAAL,CAAiBmB,YAAjB,EAA+BV,MAAM,CAACc,iBAAP,EAA/B,CAArB;AACAJ,EAAAA,YAAY,GAAG,IAAf;;AAEA,MAAI,CAACG,cAAD,IAAmB,CAACA,cAAc,CAACE,MAAvC,EAA+C;AAC7C,UAAM,IAAIjB,KAAJ,CAAU,4CAAV,CAAN;AACD;;AACDG,EAAAA,MAAM,CAACC,IAAP,CAAYF,MAAM,CAACgB,QAAP,CAAgBH,cAAhB,CAAZ,EA/BuC,CAiCvC;;AACAZ,EAAAA,MAAM,CAACC,IAAP,CAAYF,MAAM,CAACiB,QAAP,EAAZ;AAEA,SAAOd,MAAM,CAACe,MAAP,CAAcjB,MAAd,CAAP;AACD,CArCD","sourcesContent":["'use strict';\n\nvar hasSyncZlib = true;\nvar zlib = require('zlib');\nif (!zlib.deflateSync) {\n  hasSyncZlib = false;\n}\nvar constants = require('./constants');\nvar Packer = require('./packer');\n\nmodule.exports = function(metaData, opt) {\n\n  if (!hasSyncZlib) {\n    throw new Error('To use the sync capability of this library in old node versions, please also add a dependency on node-zlb-backport');\n  }\n\n  var options = opt || {};\n\n  var packer = new Packer(options);\n\n  var chunks = [];\n\n  // Signature\n  chunks.push(new Buffer(constants.PNG_SIGNATURE));\n\n  // Header\n  chunks.push(packer.packIHDR(metaData.width, metaData.height));\n\n  if (metaData.gamma) {\n    chunks.push(packer.packGAMA(metaData.gamma));\n  }\n\n  var filteredData = packer.filterData(metaData.data, metaData.width, metaData.height);\n\n  // compress it\n  var compressedData = zlib.deflateSync(filteredData, packer.getDeflateOptions());\n  filteredData = null;\n\n  if (!compressedData || !compressedData.length) {\n    throw new Error('bad png - invalid compressed data response');\n  }\n  chunks.push(packer.packIDAT(compressedData));\n\n  // End\n  chunks.push(packer.packIEND());\n\n  return Buffer.concat(chunks);\n};\n"]},"metadata":{},"sourceType":"script"}