{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.b64UrlDecode = exports.b64UrlEncode = exports.bufferTob64Url = exports.bufferTob64 = exports.b64UrlToBuffer = exports.stringToB64Url = exports.stringToBuffer = exports.bufferToString = exports.b64UrlToString = exports.concatBuffers = void 0;\n\nconst B64js = require(\"base64-js\");\n\nfunction concatBuffers(buffers) {\n  let total_length = 0;\n\n  for (let i = 0; i < buffers.length; i++) {\n    total_length += buffers[i].byteLength;\n  }\n\n  let temp = new Uint8Array(total_length);\n  let offset = 0;\n  temp.set(new Uint8Array(buffers[0]), offset);\n  offset += buffers[0].byteLength;\n\n  for (let i = 1; i < buffers.length; i++) {\n    temp.set(new Uint8Array(buffers[i]), offset);\n    offset += buffers[i].byteLength;\n  }\n\n  return temp;\n}\n\nexports.concatBuffers = concatBuffers;\n\nfunction b64UrlToString(b64UrlString) {\n  let buffer = b64UrlToBuffer(b64UrlString); // TextEncoder will be available in browsers, but not in node\n\n  if (typeof TextDecoder == \"undefined\") {\n    const TextDecoder = require(\"util\").TextDecoder;\n\n    return new TextDecoder(\"utf-8\", {\n      fatal: true\n    }).decode(buffer);\n  }\n\n  return new TextDecoder(\"utf-8\", {\n    fatal: true\n  }).decode(buffer);\n}\n\nexports.b64UrlToString = b64UrlToString;\n\nfunction bufferToString(buffer) {\n  // TextEncoder will be available in browsers, but not in node\n  if (typeof TextDecoder == \"undefined\") {\n    const TextDecoder = require(\"util\").TextDecoder;\n\n    return new TextDecoder(\"utf-8\", {\n      fatal: true\n    }).decode(buffer);\n  }\n\n  return new TextDecoder(\"utf-8\", {\n    fatal: true\n  }).decode(buffer);\n}\n\nexports.bufferToString = bufferToString;\n\nfunction stringToBuffer(string) {\n  // TextEncoder will be available in browsers, but not in node\n  if (typeof TextEncoder == \"undefined\") {\n    const TextEncoder = require(\"util\").TextEncoder;\n\n    return new TextEncoder().encode(string);\n  }\n\n  return new TextEncoder().encode(string);\n}\n\nexports.stringToBuffer = stringToBuffer;\n\nfunction stringToB64Url(string) {\n  return bufferTob64Url(stringToBuffer(string));\n}\n\nexports.stringToB64Url = stringToB64Url;\n\nfunction b64UrlToBuffer(b64UrlString) {\n  return new Uint8Array(B64js.toByteArray(b64UrlDecode(b64UrlString)));\n}\n\nexports.b64UrlToBuffer = b64UrlToBuffer;\n\nfunction bufferTob64(buffer) {\n  return B64js.fromByteArray(new Uint8Array(buffer));\n}\n\nexports.bufferTob64 = bufferTob64;\n\nfunction bufferTob64Url(buffer) {\n  return b64UrlEncode(bufferTob64(buffer));\n}\n\nexports.bufferTob64Url = bufferTob64Url;\n\nfunction b64UrlEncode(b64UrlString) {\n  return b64UrlString.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/\\=/g, \"\");\n}\n\nexports.b64UrlEncode = b64UrlEncode;\n\nfunction b64UrlDecode(b64UrlString) {\n  b64UrlString = b64UrlString.replace(/\\-/g, \"+\").replace(/\\_/g, \"/\");\n  let padding;\n  b64UrlString.length % 4 == 0 ? padding = 0 : padding = 4 - b64UrlString.length % 4;\n  return b64UrlString.concat(\"=\".repeat(padding));\n}\n\nexports.b64UrlDecode = b64UrlDecode;","map":{"version":3,"sources":["../../../../src/common/lib/utils.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.b64UrlDecode = exports.b64UrlEncode = exports.bufferTob64Url = exports.bufferTob64 = exports.b64UrlToBuffer = exports.stringToB64Url = exports.stringToBuffer = exports.bufferToString = exports.b64UrlToString = exports.concatBuffers = void 0;\nconst B64js = require(\"base64-js\");\nfunction concatBuffers(buffers) {\n    let total_length = 0;\n    for (let i = 0; i < buffers.length; i++) {\n        total_length += buffers[i].byteLength;\n    }\n    let temp = new Uint8Array(total_length);\n    let offset = 0;\n    temp.set(new Uint8Array(buffers[0]), offset);\n    offset += buffers[0].byteLength;\n    for (let i = 1; i < buffers.length; i++) {\n        temp.set(new Uint8Array(buffers[i]), offset);\n        offset += buffers[i].byteLength;\n    }\n    return temp;\n}\nexports.concatBuffers = concatBuffers;\nfunction b64UrlToString(b64UrlString) {\n    let buffer = b64UrlToBuffer(b64UrlString);\n    // TextEncoder will be available in browsers, but not in node\n    if (typeof TextDecoder == \"undefined\") {\n        const TextDecoder = require(\"util\").TextDecoder;\n        return new TextDecoder(\"utf-8\", { fatal: true }).decode(buffer);\n    }\n    return new TextDecoder(\"utf-8\", { fatal: true }).decode(buffer);\n}\nexports.b64UrlToString = b64UrlToString;\nfunction bufferToString(buffer) {\n    // TextEncoder will be available in browsers, but not in node\n    if (typeof TextDecoder == \"undefined\") {\n        const TextDecoder = require(\"util\").TextDecoder;\n        return new TextDecoder(\"utf-8\", { fatal: true }).decode(buffer);\n    }\n    return new TextDecoder(\"utf-8\", { fatal: true }).decode(buffer);\n}\nexports.bufferToString = bufferToString;\nfunction stringToBuffer(string) {\n    // TextEncoder will be available in browsers, but not in node\n    if (typeof TextEncoder == \"undefined\") {\n        const TextEncoder = require(\"util\").TextEncoder;\n        return new TextEncoder().encode(string);\n    }\n    return new TextEncoder().encode(string);\n}\nexports.stringToBuffer = stringToBuffer;\nfunction stringToB64Url(string) {\n    return bufferTob64Url(stringToBuffer(string));\n}\nexports.stringToB64Url = stringToB64Url;\nfunction b64UrlToBuffer(b64UrlString) {\n    return new Uint8Array(B64js.toByteArray(b64UrlDecode(b64UrlString)));\n}\nexports.b64UrlToBuffer = b64UrlToBuffer;\nfunction bufferTob64(buffer) {\n    return B64js.fromByteArray(new Uint8Array(buffer));\n}\nexports.bufferTob64 = bufferTob64;\nfunction bufferTob64Url(buffer) {\n    return b64UrlEncode(bufferTob64(buffer));\n}\nexports.bufferTob64Url = bufferTob64Url;\nfunction b64UrlEncode(b64UrlString) {\n    return b64UrlString\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\")\n        .replace(/\\=/g, \"\");\n}\nexports.b64UrlEncode = b64UrlEncode;\nfunction b64UrlDecode(b64UrlString) {\n    b64UrlString = b64UrlString.replace(/\\-/g, \"+\").replace(/\\_/g, \"/\");\n    let padding;\n    b64UrlString.length % 4 == 0\n        ? (padding = 0)\n        : (padding = 4 - (b64UrlString.length % 4));\n    return b64UrlString.concat(\"=\".repeat(padding));\n}\nexports.b64UrlDecode = b64UrlDecode;\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"script"}