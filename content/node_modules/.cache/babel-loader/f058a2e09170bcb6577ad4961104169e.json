{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/al/Desktop/koi/narcissus/content/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/al/Desktop/koi/narcissus/content/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SmartWeaveGlobal = void 0;\n\nvar contract_read_1 = require(\"./contract-read\");\n/**\n *\n * This class is be exposed as a global for contracts\n * as 'SmartWeave' and provides an API for getting further\n * information or using utility and crypto functions from\n * inside the contracts execution.\n *\n * It provides an api:\n *\n * - SmartWeave.transaction.id\n * - SmartWeave.transaction.reward\n * - SmartWeave.block.height\n * - SmartWeave.block.timestamp\n * - etc\n *\n * and access to some of the arweave utils:\n * - SmartWeave.arweave.utils\n * - SmartWeave.arweave.crypto\n * - SmartWeave.arweave.wallets\n * - SmartWeave.arweave.ar\n *\n * as well as access to the potentially non-deterministic full client:\n * - SmartWeave.unsafeClient\n *\n */\n\n\nvar SmartWeaveGlobal = /*#__PURE__*/function () {\n  function SmartWeaveGlobal(arweave, contract) {\n    var _this = this;\n\n    _classCallCheck(this, SmartWeaveGlobal);\n\n    this.unsafeClient = arweave;\n    this.arweave = {\n      ar: arweave.ar,\n      utils: arweave.utils,\n      wallets: arweave.wallets,\n      crypto: arweave.crypto\n    };\n    this.contract = contract;\n    this.transaction = new Transaction(this);\n    this.block = new Block(this);\n    this.contracts = {\n      readContractState: function readContractState(contractId, height, returnValidity) {\n        return contract_read_1.readContract(arweave, contractId, height || (_this._isDryRunning ? Number.POSITIVE_INFINITY : _this.block.height), returnValidity);\n      }\n    };\n  }\n\n  _createClass(SmartWeaveGlobal, [{\n    key: \"_isDryRunning\",\n    get: function get() {\n      return !this._activeTx;\n    }\n  }]);\n\n  return SmartWeaveGlobal;\n}();\n\nexports.SmartWeaveGlobal = SmartWeaveGlobal; // tslint:disable-next-line: max-classes-per-file\n\nvar Transaction = /*#__PURE__*/function () {\n  function Transaction(global) {\n    _classCallCheck(this, Transaction);\n\n    this.global = global;\n  }\n\n  _createClass(Transaction, [{\n    key: \"id\",\n    get: function get() {\n      if (!this.global._activeTx) {\n        throw new Error('No current Tx');\n      }\n\n      return this.global._activeTx.id;\n    }\n  }, {\n    key: \"owner\",\n    get: function get() {\n      if (!this.global._activeTx) {\n        throw new Error('No current Tx');\n      }\n\n      return this.global._activeTx.owner.address;\n    }\n  }, {\n    key: \"target\",\n    get: function get() {\n      if (!this.global._activeTx) {\n        throw new Error('No current Tx');\n      }\n\n      return this.global._activeTx.recipient;\n    }\n  }, {\n    key: \"tags\",\n    get: function get() {\n      if (!this.global._activeTx) {\n        throw new Error('No current Tx');\n      }\n\n      return this.global._activeTx.tags;\n    }\n  }, {\n    key: \"quantity\",\n    get: function get() {\n      if (!this.global._activeTx) {\n        throw new Error('No current Tx');\n      }\n\n      return this.global._activeTx.quantity.winston;\n    }\n  }, {\n    key: \"reward\",\n    get: function get() {\n      if (!this.global._activeTx) {\n        throw new Error('No current Tx');\n      }\n\n      return this.global._activeTx.fee.winston;\n    }\n  }]);\n\n  return Transaction;\n}(); // tslint:disable-next-line: max-classes-per-file\n\n\nvar Block = /*#__PURE__*/function () {\n  function Block(global) {\n    _classCallCheck(this, Block);\n\n    this.global = global;\n  }\n\n  _createClass(Block, [{\n    key: \"height\",\n    get: function get() {\n      if (!this.global._activeTx) {\n        throw new Error('No current Tx');\n      }\n\n      return this.global._activeTx.block.height;\n    }\n  }, {\n    key: \"indep_hash\",\n    get: function get() {\n      if (!this.global._activeTx) {\n        throw new Error('No current Tx');\n      }\n\n      return this.global._activeTx.block.id;\n    }\n  }, {\n    key: \"timestamp\",\n    get: function get() {\n      if (!this.global._activeTx) {\n        throw new Error('No current tx');\n      }\n\n      return this.global._activeTx.block.timestamp;\n    }\n  }]);\n\n  return Block;\n}();","map":{"version":3,"sources":["/home/al/Desktop/koi/narcissus/content/node_modules/@kyve/contract-lib/node_modules/smartweave/lib/smartweave-global.js"],"names":["Object","defineProperty","exports","value","SmartWeaveGlobal","contract_read_1","require","arweave","contract","unsafeClient","ar","utils","wallets","crypto","transaction","Transaction","block","Block","contracts","readContractState","contractId","height","returnValidity","readContract","_isDryRunning","Number","POSITIVE_INFINITY","_activeTx","global","Error","id","owner","address","recipient","tags","quantity","winston","fee","timestamp"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SmartWeaveGlobal = void 0;\nconst contract_read_1 = require(\"./contract-read\");\n/**\n *\n * This class is be exposed as a global for contracts\n * as 'SmartWeave' and provides an API for getting further\n * information or using utility and crypto functions from\n * inside the contracts execution.\n *\n * It provides an api:\n *\n * - SmartWeave.transaction.id\n * - SmartWeave.transaction.reward\n * - SmartWeave.block.height\n * - SmartWeave.block.timestamp\n * - etc\n *\n * and access to some of the arweave utils:\n * - SmartWeave.arweave.utils\n * - SmartWeave.arweave.crypto\n * - SmartWeave.arweave.wallets\n * - SmartWeave.arweave.ar\n *\n * as well as access to the potentially non-deterministic full client:\n * - SmartWeave.unsafeClient\n *\n */\nclass SmartWeaveGlobal {\n    constructor(arweave, contract) {\n        this.unsafeClient = arweave;\n        this.arweave = {\n            ar: arweave.ar,\n            utils: arweave.utils,\n            wallets: arweave.wallets,\n            crypto: arweave.crypto,\n        };\n        this.contract = contract;\n        this.transaction = new Transaction(this);\n        this.block = new Block(this);\n        this.contracts = {\n            readContractState: (contractId, height, returnValidity) => contract_read_1.readContract(arweave, contractId, height || (this._isDryRunning ? Number.POSITIVE_INFINITY : this.block.height), returnValidity),\n        };\n    }\n    get _isDryRunning() {\n        return !this._activeTx;\n    }\n}\nexports.SmartWeaveGlobal = SmartWeaveGlobal;\n// tslint:disable-next-line: max-classes-per-file\nclass Transaction {\n    constructor(global) {\n        this.global = global;\n    }\n    get id() {\n        if (!this.global._activeTx) {\n            throw new Error('No current Tx');\n        }\n        return this.global._activeTx.id;\n    }\n    get owner() {\n        if (!this.global._activeTx) {\n            throw new Error('No current Tx');\n        }\n        return this.global._activeTx.owner.address;\n    }\n    get target() {\n        if (!this.global._activeTx) {\n            throw new Error('No current Tx');\n        }\n        return this.global._activeTx.recipient;\n    }\n    get tags() {\n        if (!this.global._activeTx) {\n            throw new Error('No current Tx');\n        }\n        return this.global._activeTx.tags;\n    }\n    get quantity() {\n        if (!this.global._activeTx) {\n            throw new Error('No current Tx');\n        }\n        return this.global._activeTx.quantity.winston;\n    }\n    get reward() {\n        if (!this.global._activeTx) {\n            throw new Error('No current Tx');\n        }\n        return this.global._activeTx.fee.winston;\n    }\n}\n// tslint:disable-next-line: max-classes-per-file\nclass Block {\n    constructor(global) {\n        this.global = global;\n    }\n    get height() {\n        if (!this.global._activeTx) {\n            throw new Error('No current Tx');\n        }\n        return this.global._activeTx.block.height;\n    }\n    get indep_hash() {\n        if (!this.global._activeTx) {\n            throw new Error('No current Tx');\n        }\n        return this.global._activeTx.block.id;\n    }\n    get timestamp() {\n        if (!this.global._activeTx) {\n            throw new Error('No current tx');\n        }\n        return this.global._activeTx.block.timestamp;\n    }\n}\n"]},"metadata":{},"sourceType":"script"}