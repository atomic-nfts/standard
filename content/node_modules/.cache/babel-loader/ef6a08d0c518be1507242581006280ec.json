{"ast":null,"code":"/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nexport function throwError(error, scheduler) {\n  if (!scheduler) {\n    return new Observable(function (subscriber) {\n      return subscriber.error(error);\n    });\n  } else {\n    return new Observable(function (subscriber) {\n      return scheduler.schedule(dispatch, 0, {\n        error: error,\n        subscriber: subscriber\n      });\n    });\n  }\n}\n\nfunction dispatch(_a) {\n  var error = _a.error,\n      subscriber = _a.subscriber;\n  subscriber.error(error);\n}","map":{"version":3,"sources":["../../../src/internal/observable/throwError.ts"],"names":[],"mappings":"AAAA;AAoEA,SAAM,UAAN,QAA2B,eAA3B;AACE,OAAA,SAAK,UAAL,CAAgB,KAAhB,EAAgB,SAAhB,EAAgB;MACd,CAAA,S,EAAW;AACZ,WAAA,IAAA,UAAA,CAAA,UAAA,UAAA,EAAA;AAAA,aAAA,UAAA,CAAA,KAAA,CAAA,KAAA,CAAA;AAAA,KAAA,CAAA;AAAM,G,MACL;AACD,WAAA,IAAA,UAAA,CAAA,UAAA,UAAA,EAAA;AAAA,aAAA,SAAA,CAAA,QAAA,CAAA,QAAA,EAAA,CAAA,EAAA;AAAA,QAAA,KAAA,EAAA,KAAA;AAAA,QAAA,UAAA,EAAA;AAAA,OAAA,CAAA;AAAA,KAAA,CAAA;AACF;AAOD;;AAAoB,SAAA,QAAA,CAAA,EAAA,EAAA;AAClB,MAAA,KAAA,GAAW,EAAA,CAAA,KAAX;AAAA,MAAsB,UAAE,GAAA,EAAA,CAAA,UAAxB;AACD,EAAA,UAAA,CAAA,KAAA,CAAA,KAAA","sourcesContent":["/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nexport function throwError(error, scheduler) {\n    if (!scheduler) {\n        return new Observable(function (subscriber) { return subscriber.error(error); });\n    }\n    else {\n        return new Observable(function (subscriber) { return scheduler.schedule(dispatch, 0, { error: error, subscriber: subscriber }); });\n    }\n}\nfunction dispatch(_a) {\n    var error = _a.error, subscriber = _a.subscriber;\n    subscriber.error(error);\n}\n//# sourceMappingURL=throwError.js.map\n"]},"metadata":{},"sourceType":"module"}