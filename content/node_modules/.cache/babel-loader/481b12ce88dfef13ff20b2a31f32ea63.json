{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/al/Desktop/koi/narcissus/content/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/al/Desktop/koi/narcissus/content/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/al/Desktop/koi/narcissus/content/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/al/Desktop/koi/narcissus/content/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar error_1 = require(\"./lib/error\");\n\nrequire(\"arconnect\");\n\nvar Blocks = /*#__PURE__*/function () {\n  function Blocks(api, network) {\n    _classCallCheck(this, Blocks);\n\n    this.api = api;\n    this.network = network;\n  }\n  /**\n   * Gets a block by its \"indep_hash\"\n   */\n\n\n  _createClass(Blocks, [{\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(indepHash) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.api.get(\"\".concat(Blocks.ENDPOINT).concat(indepHash));\n\n              case 2:\n                response = _context.sent;\n\n                if (!(response.status === 200)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", response.data);\n\n              case 7:\n                if (!(response.status === 404)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                throw new error_1.default(\"BLOCK_NOT_FOUND\"\n                /* BLOCK_NOT_FOUND */\n                );\n\n              case 11:\n                throw new Error(\"Error while loading block data: \".concat(response));\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function get(_x) {\n        return _get.apply(this, arguments);\n      }\n\n      return get;\n    }()\n    /**\n     * Gets current block data (ie. block with indep_hash = Network.getInfo().current)\n     */\n\n  }, {\n    key: \"getCurrent\",\n    value: function () {\n      var _getCurrent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _yield$this$network$g, current;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.network.getInfo();\n\n              case 2:\n                _yield$this$network$g = _context2.sent;\n                current = _yield$this$network$g.current;\n                _context2.next = 6;\n                return this.get(current);\n\n              case 6:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getCurrent() {\n        return _getCurrent.apply(this, arguments);\n      }\n\n      return getCurrent;\n    }()\n  }]);\n\n  return Blocks;\n}();\n\nexports.default = Blocks;\nBlocks.ENDPOINT = \"block/hash/\";","map":{"version":3,"sources":["../../../src/common/blocks.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AAEA,OAAA,CAAA,WAAA,CAAA;;IAwBqB,M;AAGnB,kBAA6B,GAA7B,EAAwD,OAAxD,EAAwE;AAAA;;AAA3C,SAAA,GAAA,GAAA,GAAA;AAA2B,SAAA,OAAA,GAAA,OAAA;AAAoB;AAE5E;;AAEG;;;;;;0EACI,iBAAU,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACkB,KAAK,GAAL,CAAS,GAAT,WAClB,MAAM,CAAC,QADW,SACA,SADA,EADlB;;AAAA;AACC,gBAAA,QADD;;AAAA,sBAID,QAAQ,CAAC,MAAT,KAAoB,GAJnB;AAAA;AAAA;AAAA;;AAAA,iDAKI,QAAQ,CAAC,IALb;;AAAA;AAAA,sBAOC,QAAQ,CAAC,MAAT,KAAoB,GAPrB;AAAA;AAAA;AAAA;;AAAA,sBAQK,IAAI,OAAA,CAAA,OAAJ,CAAgB;AAAA;AAAhB,iBARL;;AAAA;AAAA,sBAUK,IAAI,KAAJ,2CAA6C,QAA7C,EAVL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAeP;;AAEG;;;;;iFACI;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACqB,KAAK,OAAL,CAAa,OAAb,EADrB;;AAAA;AAAA;AACG,gBAAA,OADH,yBACG,OADH;AAAA;AAAA,uBAEQ,KAAK,GAAL,CAAS,OAAT,CAFR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;AA1BT,OAAA,CAAA,OAAA,GAAA,MAAA;AAC0B,MAAA,CAAA,QAAA,GAAW,aAAX","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst error_1 = require(\"./lib/error\");\nrequire(\"arconnect\");\nclass Blocks {\n    constructor(api, network) {\n        this.api = api;\n        this.network = network;\n    }\n    /**\n     * Gets a block by its \"indep_hash\"\n     */\n    async get(indepHash) {\n        const response = await this.api.get(`${Blocks.ENDPOINT}${indepHash}`);\n        if (response.status === 200) {\n            return response.data;\n        }\n        else {\n            if (response.status === 404) {\n                throw new error_1.default(\"BLOCK_NOT_FOUND\" /* BLOCK_NOT_FOUND */);\n            }\n            else {\n                throw new Error(`Error while loading block data: ${response}`);\n            }\n        }\n    }\n    /**\n     * Gets current block data (ie. block with indep_hash = Network.getInfo().current)\n     */\n    async getCurrent() {\n        const { current } = await this.network.getInfo();\n        return await this.get(current);\n    }\n}\nexports.default = Blocks;\nBlocks.ENDPOINT = \"block/hash/\";\n//# sourceMappingURL=blocks.js.map"]},"metadata":{},"sourceType":"script"}