{"ast":null,"code":"import _objectWithoutProperties from \"/home/al/Desktop/koi/narcissus/content/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/home/al/Desktop/koi/narcissus/content/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _excluded = [\"id\"];\nimport { getKeyTypeFromAlgorithm } from 'crypto-key-composer';\nimport * as rsa from './keys/rsa';\nimport * as ed25519 from './keys/ed25519';\nimport { UnknownAlgorithmError, UnknownAlgorithmParamError, NilAlgorithmParamError, TypeMismatchAlgorithmParamError } from './utils/errors';\nvar supportedAlgorithms = {\n  rsa: rsa,\n  ed25519: ed25519\n};\n\nvar buildParams = function buildParams(defaultParams, customParams) {\n  return Object.keys(customParams).reduce(function (params, key) {\n    // Do not allow unknown keys (params)\n    if (defaultParams[key] == null) {\n      throw new UnknownAlgorithmParamError(key);\n    } // Do not allow nullish values\n\n\n    if (customParams[key] == null) {\n      throw new NilAlgorithmParamError(key);\n    } // Do not allow different types\n\n\n    if (typeof customParams[key] !== typeof defaultParams[key]) {\n      throw new TypeMismatchAlgorithmParamError(key, typeof defaultParams[key]);\n    }\n\n    params[key] = customParams[key];\n    return params;\n  }, _objectSpread({}, defaultParams));\n};\n\nvar parseAlgorithm = function parseAlgorithm(keyAlgorithm) {\n  var algorithm = typeof keyAlgorithm === 'string' ? {\n    id: keyAlgorithm\n  } : keyAlgorithm;\n  var type = supportedAlgorithms[algorithm.id] ? algorithm.id : getKeyTypeFromAlgorithm(algorithm.id);\n\n  if (!type) {\n    throw new UnknownAlgorithmError(algorithm.id);\n  }\n\n  var _supportedAlgorithms$ = supportedAlgorithms[type],\n      generateKeyPair = _supportedAlgorithms$.generateKeyPair,\n      defaultParams = _supportedAlgorithms$.defaultParams;\n\n  var id = algorithm.id,\n      customParams = _objectWithoutProperties(algorithm, _excluded);\n\n  var params = buildParams(defaultParams, customParams);\n  return {\n    id: id,\n    type: type,\n    params: params,\n    generate: generateKeyPair\n  };\n};\n\nexport default parseAlgorithm;","map":{"version":3,"sources":["/home/al/Desktop/koi/narcissus/content/node_modules/human-crypto-keys/es/algorithm.js"],"names":["getKeyTypeFromAlgorithm","rsa","ed25519","UnknownAlgorithmError","UnknownAlgorithmParamError","NilAlgorithmParamError","TypeMismatchAlgorithmParamError","supportedAlgorithms","buildParams","defaultParams","customParams","Object","keys","reduce","params","key","parseAlgorithm","keyAlgorithm","algorithm","id","type","generateKeyPair","generate"],"mappings":";;;AAAA,SAASA,uBAAT,QAAwC,qBAAxC;AACA,OAAO,KAAKC,GAAZ,MAAqB,YAArB;AACA,OAAO,KAAKC,OAAZ,MAAyB,gBAAzB;AACA,SAASC,qBAAT,EAAgCC,0BAAhC,EAA4DC,sBAA5D,EAAoFC,+BAApF,QAA2H,gBAA3H;AACA,IAAMC,mBAAmB,GAAG;AAC1BN,EAAAA,GAAG,EAAHA,GAD0B;AAE1BC,EAAAA,OAAO,EAAPA;AAF0B,CAA5B;;AAKA,IAAMM,WAAW,GAAG,SAAdA,WAAc,CAACC,aAAD,EAAgBC,YAAhB;AAAA,SAAiCC,MAAM,CAACC,IAAP,CAAYF,YAAZ,EAA0BG,MAA1B,CAAiC,UAACC,MAAD,EAASC,GAAT,EAAiB;AACrG;AACA,QAAIN,aAAa,CAACM,GAAD,CAAb,IAAsB,IAA1B,EAAgC;AAC9B,YAAM,IAAIX,0BAAJ,CAA+BW,GAA/B,CAAN;AACD,KAJoG,CAInG;;;AAGF,QAAIL,YAAY,CAACK,GAAD,CAAZ,IAAqB,IAAzB,EAA+B;AAC7B,YAAM,IAAIV,sBAAJ,CAA2BU,GAA3B,CAAN;AACD,KAToG,CASnG;;;AAGF,QAAI,OAAOL,YAAY,CAACK,GAAD,CAAnB,KAA6B,OAAON,aAAa,CAACM,GAAD,CAArD,EAA4D;AAC1D,YAAM,IAAIT,+BAAJ,CAAoCS,GAApC,EAAyC,OAAON,aAAa,CAACM,GAAD,CAA7D,CAAN;AACD;;AAEDD,IAAAA,MAAM,CAACC,GAAD,CAAN,GAAcL,YAAY,CAACK,GAAD,CAA1B;AACA,WAAOD,MAAP;AACD,GAlBoD,oBAkB7CL,aAlB6C,EAAjC;AAAA,CAApB;;AAqBA,IAAMO,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,YAAY,EAAI;AACrC,MAAMC,SAAS,GAAG,OAAOD,YAAP,KAAwB,QAAxB,GAAmC;AACnDE,IAAAA,EAAE,EAAEF;AAD+C,GAAnC,GAEdA,YAFJ;AAGA,MAAMG,IAAI,GAAGb,mBAAmB,CAACW,SAAS,CAACC,EAAX,CAAnB,GAAoCD,SAAS,CAACC,EAA9C,GAAmDnB,uBAAuB,CAACkB,SAAS,CAACC,EAAX,CAAvF;;AAEA,MAAI,CAACC,IAAL,EAAW;AACT,UAAM,IAAIjB,qBAAJ,CAA0Be,SAAS,CAACC,EAApC,CAAN;AACD;;AAED,8BAGIZ,mBAAmB,CAACa,IAAD,CAHvB;AAAA,MACEC,eADF,yBACEA,eADF;AAAA,MAEEZ,aAFF,yBAEEA,aAFF;;AAIA,MACEU,EADF,GAGID,SAHJ,CACEC,EADF;AAAA,MAEKT,YAFL,4BAGIQ,SAHJ;;AAIA,MAAMJ,MAAM,GAAGN,WAAW,CAACC,aAAD,EAAgBC,YAAhB,CAA1B;AACA,SAAO;AACLS,IAAAA,EAAE,EAAFA,EADK;AAELC,IAAAA,IAAI,EAAJA,IAFK;AAGLN,IAAAA,MAAM,EAANA,MAHK;AAILQ,IAAAA,QAAQ,EAAED;AAJL,GAAP;AAMD,CAzBD;;AA2BA,eAAeL,cAAf","sourcesContent":["import { getKeyTypeFromAlgorithm } from 'crypto-key-composer';\nimport * as rsa from './keys/rsa';\nimport * as ed25519 from './keys/ed25519';\nimport { UnknownAlgorithmError, UnknownAlgorithmParamError, NilAlgorithmParamError, TypeMismatchAlgorithmParamError } from './utils/errors';\nconst supportedAlgorithms = {\n  rsa,\n  ed25519\n};\n\nconst buildParams = (defaultParams, customParams) => Object.keys(customParams).reduce((params, key) => {\n  // Do not allow unknown keys (params)\n  if (defaultParams[key] == null) {\n    throw new UnknownAlgorithmParamError(key);\n  } // Do not allow nullish values\n\n\n  if (customParams[key] == null) {\n    throw new NilAlgorithmParamError(key);\n  } // Do not allow different types\n\n\n  if (typeof customParams[key] !== typeof defaultParams[key]) {\n    throw new TypeMismatchAlgorithmParamError(key, typeof defaultParams[key]);\n  }\n\n  params[key] = customParams[key];\n  return params;\n}, { ...defaultParams\n});\n\nconst parseAlgorithm = keyAlgorithm => {\n  const algorithm = typeof keyAlgorithm === 'string' ? {\n    id: keyAlgorithm\n  } : keyAlgorithm;\n  const type = supportedAlgorithms[algorithm.id] ? algorithm.id : getKeyTypeFromAlgorithm(algorithm.id);\n\n  if (!type) {\n    throw new UnknownAlgorithmError(algorithm.id);\n  }\n\n  const {\n    generateKeyPair,\n    defaultParams\n  } = supportedAlgorithms[type];\n  const {\n    id,\n    ...customParams\n  } = algorithm;\n  const params = buildParams(defaultParams, customParams);\n  return {\n    id,\n    type,\n    params,\n    generate: generateKeyPair\n  };\n};\n\nexport default parseAlgorithm;"]},"metadata":{},"sourceType":"module"}