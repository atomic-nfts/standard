{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst common_1 = require(\"./common\");\n\nconst webcrypto_driver_1 = require(\"./lib/crypto/webcrypto-driver\");\n\ncommon_1.default.crypto = new webcrypto_driver_1.default();\n\ncommon_1.default.init = function (apiConfig = {}) {\n  function getDefaultConfig() {\n    const defaults = {\n      host: \"arweave.net\",\n      port: 443,\n      protocol: \"https\"\n    };\n\n    if (!window || !window.location || !window.location.protocol || !window.location.hostname) {\n      return defaults;\n    } // window.location.protocol has a trailing colon (http:, https:, file: etc)\n\n\n    const currentProtocol = window.location.protocol.replace(\":\", \"\");\n    const currentHost = window.location.hostname;\n    const currentPort = window.location.port ? parseInt(window.location.port) : currentProtocol == \"https\" ? 443 : 80;\n    const isLocal = [\"localhost\", \"127.0.0.1\"].includes(currentHost) || currentProtocol == \"file\"; // If we're running in what looks like a local dev environment\n    // then default to using arweave.net\n\n    if (isLocal) {\n      return defaults;\n    }\n\n    return {\n      host: currentHost,\n      port: currentPort,\n      protocol: currentProtocol\n    };\n  }\n\n  const defaultConfig = getDefaultConfig();\n  const protocol = apiConfig.protocol || defaultConfig.protocol;\n  const host = apiConfig.host || defaultConfig.host;\n  const port = apiConfig.port || defaultConfig.port;\n  return new common_1.default(Object.assign(Object.assign({}, apiConfig), {\n    host,\n    protocol,\n    port\n  }));\n};\n\nwindow.Arweave = common_1.default;\n\n__exportStar(require(\"./common\"), exports);\n\nexports.default = common_1.default;","map":{"version":3,"sources":["../../../src/web/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAEA,MAAA,kBAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;;AAQA,QAAA,CAAA,OAAA,CAAQ,MAAR,GAAiB,IAAI,kBAAA,CAAA,OAAJ,EAAjB;;AAEA,QAAA,CAAA,OAAA,CAAQ,IAAR,GAAe,UAAU,SAAA,GAAuB,EAAjC,EAAmC;AAChD,WAAS,gBAAT,GAAyB;AAKvB,UAAM,QAAQ,GAAG;AACf,MAAA,IAAI,EAAE,aADS;AAEf,MAAA,IAAI,EAAE,GAFS;AAGf,MAAA,QAAQ,EAAE;AAHK,KAAjB;;AAMA,QACE,CAAC,MAAD,IACA,CAAC,MAAM,CAAC,QADR,IAEA,CAAC,MAAM,CAAC,QAAP,CAAgB,QAFjB,IAGA,CAAC,MAAM,CAAC,QAAP,CAAgB,QAJnB,EAKE;AACA,aAAO,QAAP;AACD,KAlBsB,CAoBvB;;;AACA,UAAM,eAAe,GAAG,MAAM,CAAC,QAAP,CAAgB,QAAhB,CAAyB,OAAzB,CAAiC,GAAjC,EAAsC,EAAtC,CAAxB;AACA,UAAM,WAAW,GAAG,MAAM,CAAC,QAAP,CAAgB,QAApC;AACA,UAAM,WAAW,GAAG,MAAM,CAAC,QAAP,CAAgB,IAAhB,GAChB,QAAQ,CAAC,MAAM,CAAC,QAAP,CAAgB,IAAjB,CADQ,GAEhB,eAAe,IAAI,OAAnB,GACA,GADA,GAEA,EAJJ;AAMA,UAAM,OAAO,GACX,CAAC,WAAD,EAAc,WAAd,EAA2B,QAA3B,CAAoC,WAApC,KACA,eAAe,IAAI,MAFrB,CA7BuB,CAiCvB;AACA;;AACA,QAAI,OAAJ,EAAa;AACX,aAAO,QAAP;AACD;;AAED,WAAO;AACL,MAAA,IAAI,EAAE,WADD;AAEL,MAAA,IAAI,EAAE,WAFD;AAGL,MAAA,QAAQ,EAAE;AAHL,KAAP;AAKD;;AAED,QAAM,aAAa,GAAG,gBAAgB,EAAtC;AAEA,QAAM,QAAQ,GAAG,SAAS,CAAC,QAAV,IAAsB,aAAa,CAAC,QAArD;AACA,QAAM,IAAI,GAAG,SAAS,CAAC,IAAV,IAAkB,aAAa,CAAC,IAA7C;AACA,QAAM,IAAI,GAAG,SAAS,CAAC,IAAV,IAAkB,aAAa,CAAC,IAA7C;AAEA,SAAO,IAAI,QAAA,CAAA,OAAJ,CAAW,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACb,SADa,CAAA,EACJ;AACZ,IAAA,IADY;AAEZ,IAAA,QAFY;AAGZ,IAAA;AAHY,GADI,CAAX,CAAP;AAMD,CA3DD;;AA6DA,MAAM,CAAC,OAAP,GAAiB,QAAA,CAAA,OAAjB;;AAEA,YAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA,OAAA,CAAA;;AACA,OAAA,CAAA,OAAA,GAAe,QAAA,CAAA,OAAf","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst common_1 = require(\"./common\");\nconst webcrypto_driver_1 = require(\"./lib/crypto/webcrypto-driver\");\ncommon_1.default.crypto = new webcrypto_driver_1.default();\ncommon_1.default.init = function (apiConfig = {}) {\n    function getDefaultConfig() {\n        const defaults = {\n            host: \"arweave.net\",\n            port: 443,\n            protocol: \"https\",\n        };\n        if (!window ||\n            !window.location ||\n            !window.location.protocol ||\n            !window.location.hostname) {\n            return defaults;\n        }\n        // window.location.protocol has a trailing colon (http:, https:, file: etc)\n        const currentProtocol = window.location.protocol.replace(\":\", \"\");\n        const currentHost = window.location.hostname;\n        const currentPort = window.location.port\n            ? parseInt(window.location.port)\n            : currentProtocol == \"https\"\n                ? 443\n                : 80;\n        const isLocal = [\"localhost\", \"127.0.0.1\"].includes(currentHost) ||\n            currentProtocol == \"file\";\n        // If we're running in what looks like a local dev environment\n        // then default to using arweave.net\n        if (isLocal) {\n            return defaults;\n        }\n        return {\n            host: currentHost,\n            port: currentPort,\n            protocol: currentProtocol,\n        };\n    }\n    const defaultConfig = getDefaultConfig();\n    const protocol = apiConfig.protocol || defaultConfig.protocol;\n    const host = apiConfig.host || defaultConfig.host;\n    const port = apiConfig.port || defaultConfig.port;\n    return new common_1.default(Object.assign(Object.assign({}, apiConfig), { host,\n        protocol,\n        port }));\n};\nwindow.Arweave = common_1.default;\n__exportStar(require(\"./common\"), exports);\nexports.default = common_1.default;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}