{"ast":null,"code":"'use strict';\n\nvar util = require('util');\n\nvar ChunkStream = require('./chunkstream');\n\nvar Filter = require('./filter-parse');\n\nvar FilterAsync = module.exports = function (bitmapInfo) {\n  ChunkStream.call(this);\n  var buffers = [];\n  var that = this;\n  this._filter = new Filter(bitmapInfo, {\n    read: this.read.bind(this),\n    write: function (buffer) {\n      buffers.push(buffer);\n    },\n    complete: function () {\n      that.emit('complete', Buffer.concat(buffers));\n    }\n  });\n\n  this._filter.start();\n};\n\nutil.inherits(FilterAsync, ChunkStream);","map":{"version":3,"sources":["/home/al/Desktop/koi/narcissus/content/node_modules/pngjs-nozlib/lib/filter-parse-async.js"],"names":["util","require","ChunkStream","Filter","FilterAsync","module","exports","bitmapInfo","call","buffers","that","_filter","read","bind","write","buffer","push","complete","emit","Buffer","concat","start","inherits"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,gBAAD,CAApB;;AAGA,IAAIG,WAAW,GAAGC,MAAM,CAACC,OAAP,GAAiB,UAASC,UAAT,EAAqB;AACtDL,EAAAA,WAAW,CAACM,IAAZ,CAAiB,IAAjB;AAEA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,IAAI,GAAG,IAAX;AACA,OAAKC,OAAL,GAAe,IAAIR,MAAJ,CAAWI,UAAX,EAAuB;AACpCK,IAAAA,IAAI,EAAE,KAAKA,IAAL,CAAUC,IAAV,CAAe,IAAf,CAD8B;AAEpCC,IAAAA,KAAK,EAAE,UAASC,MAAT,EAAiB;AACtBN,MAAAA,OAAO,CAACO,IAAR,CAAaD,MAAb;AACD,KAJmC;AAKpCE,IAAAA,QAAQ,EAAE,YAAW;AACnBP,MAAAA,IAAI,CAACQ,IAAL,CAAU,UAAV,EAAsBC,MAAM,CAACC,MAAP,CAAcX,OAAd,CAAtB;AACD;AAPmC,GAAvB,CAAf;;AAUA,OAAKE,OAAL,CAAaU,KAAb;AACD,CAhBD;;AAiBArB,IAAI,CAACsB,QAAL,CAAclB,WAAd,EAA2BF,WAA3B","sourcesContent":["'use strict';\n\nvar util = require('util');\nvar ChunkStream = require('./chunkstream');\nvar Filter = require('./filter-parse');\n\n\nvar FilterAsync = module.exports = function(bitmapInfo) {\n  ChunkStream.call(this);\n\n  var buffers = [];\n  var that = this;\n  this._filter = new Filter(bitmapInfo, {\n    read: this.read.bind(this),\n    write: function(buffer) {\n      buffers.push(buffer);\n    },\n    complete: function() {\n      that.emit('complete', Buffer.concat(buffers));\n    }\n  });\n\n  this._filter.start();\n};\nutil.inherits(FilterAsync, ChunkStream);\n"]},"metadata":{},"sourceType":"script"}