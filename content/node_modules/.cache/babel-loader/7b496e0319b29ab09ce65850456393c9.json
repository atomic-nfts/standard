{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.selectWeightedPstHolder = void 0;\n/**\n * Given an map of address->balance, select one random address\n * weighted by the amount of tokens they hold.\n *\n * @param balances  A balances object, where the key is address and the value is the number of tokens they hold\n */\n\nfunction selectWeightedPstHolder(balances) {\n  // Count the total tokens\n  var totalTokens = 0;\n\n  for (var _i = 0, _Object$keys = Object.keys(balances); _i < _Object$keys.length; _i++) {\n    var address = _Object$keys[_i];\n    totalTokens += balances[address];\n  } // Create a copy of balances where the amount each holder owns is represented\n  // by a value 0-1.\n\n\n  var weighted = {};\n\n  for (var _i2 = 0, _Object$keys2 = Object.keys(balances); _i2 < _Object$keys2.length; _i2++) {\n    var _address = _Object$keys2[_i2];\n    weighted[_address] = balances[_address] / totalTokens;\n  }\n\n  var sum = 0;\n  var r = Math.random();\n\n  for (var _i3 = 0, _Object$keys3 = Object.keys(weighted); _i3 < _Object$keys3.length; _i3++) {\n    var _address2 = _Object$keys3[_i3];\n    sum += weighted[_address2];\n\n    if (r <= sum && weighted[_address2] > 0) {\n      return _address2;\n    }\n  }\n\n  throw new Error('Unable to select token holder');\n}\n\nexports.selectWeightedPstHolder = selectWeightedPstHolder;","map":{"version":3,"sources":["/home/al/Desktop/koi/narcissus/content/node_modules/@kyve/contract-lib/node_modules/smartweave/lib/weighted-pst-holder.js"],"names":["Object","defineProperty","exports","value","selectWeightedPstHolder","balances","totalTokens","keys","address","weighted","sum","r","Math","random","Error"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,uBAAR,GAAkC,KAAK,CAAvC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,uBAAT,CAAiCC,QAAjC,EAA2C;AACvC;AACA,MAAIC,WAAW,GAAG,CAAlB;;AACA,kCAAsBN,MAAM,CAACO,IAAP,CAAYF,QAAZ,CAAtB,kCAA6C;AAAxC,QAAMG,OAAO,mBAAb;AACDF,IAAAA,WAAW,IAAID,QAAQ,CAACG,OAAD,CAAvB;AACH,GALsC,CAMvC;AACA;;;AACA,MAAMC,QAAQ,GAAG,EAAjB;;AACA,oCAAsBT,MAAM,CAACO,IAAP,CAAYF,QAAZ,CAAtB,qCAA6C;AAAxC,QAAMG,QAAO,qBAAb;AACDC,IAAAA,QAAQ,CAACD,QAAD,CAAR,GAAoBH,QAAQ,CAACG,QAAD,CAAR,GAAoBF,WAAxC;AACH;;AACD,MAAII,GAAG,GAAG,CAAV;AACA,MAAMC,CAAC,GAAGC,IAAI,CAACC,MAAL,EAAV;;AACA,oCAAsBb,MAAM,CAACO,IAAP,CAAYE,QAAZ,CAAtB,qCAA6C;AAAxC,QAAMD,SAAO,qBAAb;AACDE,IAAAA,GAAG,IAAID,QAAQ,CAACD,SAAD,CAAf;;AACA,QAAIG,CAAC,IAAID,GAAL,IAAYD,QAAQ,CAACD,SAAD,CAAR,GAAoB,CAApC,EAAuC;AACnC,aAAOA,SAAP;AACH;AACJ;;AACD,QAAM,IAAIM,KAAJ,CAAU,+BAAV,CAAN;AACH;;AACDZ,OAAO,CAACE,uBAAR,GAAkCA,uBAAlC","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.selectWeightedPstHolder = void 0;\n/**\n * Given an map of address->balance, select one random address\n * weighted by the amount of tokens they hold.\n *\n * @param balances  A balances object, where the key is address and the value is the number of tokens they hold\n */\nfunction selectWeightedPstHolder(balances) {\n    // Count the total tokens\n    let totalTokens = 0;\n    for (const address of Object.keys(balances)) {\n        totalTokens += balances[address];\n    }\n    // Create a copy of balances where the amount each holder owns is represented\n    // by a value 0-1.\n    const weighted = {};\n    for (const address of Object.keys(balances)) {\n        weighted[address] = balances[address] / totalTokens;\n    }\n    let sum = 0;\n    const r = Math.random();\n    for (const address of Object.keys(weighted)) {\n        sum += weighted[address];\n        if (r <= sum && weighted[address] > 0) {\n            return address;\n        }\n    }\n    throw new Error('Unable to select token holder');\n}\nexports.selectWeightedPstHolder = selectWeightedPstHolder;\n"]},"metadata":{},"sourceType":"script"}