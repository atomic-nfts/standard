{"ast":null,"code":"/*\n  Copyright (c) 2008, Adobe Systems Incorporated\n  All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without \n  modification, are permitted provided that the following conditions are\n  met:\n\n  * Redistributions of source code must retain the above copyright notice, \n    this list of conditions and the following disclaimer.\n  \n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the \n    documentation and/or other materials provided with the distribution.\n  \n  * Neither the name of Adobe Systems Incorporated nor the names of its \n    contributors may be used to endorse or promote products derived from \n    this software without specific prior written permission.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n  IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR \n  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/*\nJPEG encoder ported to JavaScript and optimized by Andreas Ritter, www.bytestrom.eu, 11/2009\n\nBasic GUI blocking jpeg encoder\n*/\nvar btoa = btoa || function (buf) {\n  return new Buffer(buf).toString('base64');\n};\n\nfunction JPEGEncoder(quality) {\n  var self = this;\n  var fround = Math.round;\n  var ffloor = Math.floor;\n  var YTable = new Array(64);\n  var UVTable = new Array(64);\n  var fdtbl_Y = new Array(64);\n  var fdtbl_UV = new Array(64);\n  var YDC_HT;\n  var UVDC_HT;\n  var YAC_HT;\n  var UVAC_HT;\n  var bitcode = new Array(65535);\n  var category = new Array(65535);\n  var outputfDCTQuant = new Array(64);\n  var DU = new Array(64);\n  var byteout = [];\n  var bytenew = 0;\n  var bytepos = 7;\n  var YDU = new Array(64);\n  var UDU = new Array(64);\n  var VDU = new Array(64);\n  var clt = new Array(256);\n  var RGB_YUV_TABLE = new Array(2048);\n  var currentQuality;\n  var ZigZag = [0, 1, 5, 6, 14, 15, 27, 28, 2, 4, 7, 13, 16, 26, 29, 42, 3, 8, 12, 17, 25, 30, 41, 43, 9, 11, 18, 24, 31, 40, 44, 53, 10, 19, 23, 32, 39, 45, 52, 54, 20, 22, 33, 38, 46, 51, 55, 60, 21, 34, 37, 47, 50, 56, 59, 61, 35, 36, 48, 49, 57, 58, 62, 63];\n  var std_dc_luminance_nrcodes = [0, 0, 1, 5, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0];\n  var std_dc_luminance_values = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n  var std_ac_luminance_nrcodes = [0, 0, 2, 1, 3, 3, 2, 4, 3, 5, 5, 4, 4, 0, 0, 1, 0x7d];\n  var std_ac_luminance_values = [0x01, 0x02, 0x03, 0x00, 0x04, 0x11, 0x05, 0x12, 0x21, 0x31, 0x41, 0x06, 0x13, 0x51, 0x61, 0x07, 0x22, 0x71, 0x14, 0x32, 0x81, 0x91, 0xa1, 0x08, 0x23, 0x42, 0xb1, 0xc1, 0x15, 0x52, 0xd1, 0xf0, 0x24, 0x33, 0x62, 0x72, 0x82, 0x09, 0x0a, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8a, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9a, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa];\n  var std_dc_chrominance_nrcodes = [0, 0, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0];\n  var std_dc_chrominance_values = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n  var std_ac_chrominance_nrcodes = [0, 0, 2, 1, 2, 4, 4, 3, 4, 7, 5, 4, 4, 0, 1, 2, 0x77];\n  var std_ac_chrominance_values = [0x00, 0x01, 0x02, 0x03, 0x11, 0x04, 0x05, 0x21, 0x31, 0x06, 0x12, 0x41, 0x51, 0x07, 0x61, 0x71, 0x13, 0x22, 0x32, 0x81, 0x08, 0x14, 0x42, 0x91, 0xa1, 0xb1, 0xc1, 0x09, 0x23, 0x33, 0x52, 0xf0, 0x15, 0x62, 0x72, 0xd1, 0x0a, 0x16, 0x24, 0x34, 0xe1, 0x25, 0xf1, 0x17, 0x18, 0x19, 0x1a, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8a, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9a, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa];\n\n  function initQuantTables(sf) {\n    var YQT = [16, 11, 10, 16, 24, 40, 51, 61, 12, 12, 14, 19, 26, 58, 60, 55, 14, 13, 16, 24, 40, 57, 69, 56, 14, 17, 22, 29, 51, 87, 80, 62, 18, 22, 37, 56, 68, 109, 103, 77, 24, 35, 55, 64, 81, 104, 113, 92, 49, 64, 78, 87, 103, 121, 120, 101, 72, 92, 95, 98, 112, 100, 103, 99];\n\n    for (var i = 0; i < 64; i++) {\n      var t = ffloor((YQT[i] * sf + 50) / 100);\n\n      if (t < 1) {\n        t = 1;\n      } else if (t > 255) {\n        t = 255;\n      }\n\n      YTable[ZigZag[i]] = t;\n    }\n\n    var UVQT = [17, 18, 24, 47, 99, 99, 99, 99, 18, 21, 26, 66, 99, 99, 99, 99, 24, 26, 56, 99, 99, 99, 99, 99, 47, 66, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99];\n\n    for (var j = 0; j < 64; j++) {\n      var u = ffloor((UVQT[j] * sf + 50) / 100);\n\n      if (u < 1) {\n        u = 1;\n      } else if (u > 255) {\n        u = 255;\n      }\n\n      UVTable[ZigZag[j]] = u;\n    }\n\n    var aasf = [1.0, 1.387039845, 1.306562965, 1.175875602, 1.0, 0.785694958, 0.541196100, 0.275899379];\n    var k = 0;\n\n    for (var row = 0; row < 8; row++) {\n      for (var col = 0; col < 8; col++) {\n        fdtbl_Y[k] = 1.0 / (YTable[ZigZag[k]] * aasf[row] * aasf[col] * 8.0);\n        fdtbl_UV[k] = 1.0 / (UVTable[ZigZag[k]] * aasf[row] * aasf[col] * 8.0);\n        k++;\n      }\n    }\n  }\n\n  function computeHuffmanTbl(nrcodes, std_table) {\n    var codevalue = 0;\n    var pos_in_table = 0;\n    var HT = new Array();\n\n    for (var k = 1; k <= 16; k++) {\n      for (var j = 1; j <= nrcodes[k]; j++) {\n        HT[std_table[pos_in_table]] = [];\n        HT[std_table[pos_in_table]][0] = codevalue;\n        HT[std_table[pos_in_table]][1] = k;\n        pos_in_table++;\n        codevalue++;\n      }\n\n      codevalue *= 2;\n    }\n\n    return HT;\n  }\n\n  function initHuffmanTbl() {\n    YDC_HT = computeHuffmanTbl(std_dc_luminance_nrcodes, std_dc_luminance_values);\n    UVDC_HT = computeHuffmanTbl(std_dc_chrominance_nrcodes, std_dc_chrominance_values);\n    YAC_HT = computeHuffmanTbl(std_ac_luminance_nrcodes, std_ac_luminance_values);\n    UVAC_HT = computeHuffmanTbl(std_ac_chrominance_nrcodes, std_ac_chrominance_values);\n  }\n\n  function initCategoryNumber() {\n    var nrlower = 1;\n    var nrupper = 2;\n\n    for (var cat = 1; cat <= 15; cat++) {\n      //Positive numbers\n      for (var nr = nrlower; nr < nrupper; nr++) {\n        category[32767 + nr] = cat;\n        bitcode[32767 + nr] = [];\n        bitcode[32767 + nr][1] = cat;\n        bitcode[32767 + nr][0] = nr;\n      } //Negative numbers\n\n\n      for (var nrneg = -(nrupper - 1); nrneg <= -nrlower; nrneg++) {\n        category[32767 + nrneg] = cat;\n        bitcode[32767 + nrneg] = [];\n        bitcode[32767 + nrneg][1] = cat;\n        bitcode[32767 + nrneg][0] = nrupper - 1 + nrneg;\n      }\n\n      nrlower <<= 1;\n      nrupper <<= 1;\n    }\n  }\n\n  function initRGBYUVTable() {\n    for (var i = 0; i < 256; i++) {\n      RGB_YUV_TABLE[i] = 19595 * i;\n      RGB_YUV_TABLE[i + 256 >> 0] = 38470 * i;\n      RGB_YUV_TABLE[i + 512 >> 0] = 7471 * i + 0x8000;\n      RGB_YUV_TABLE[i + 768 >> 0] = -11059 * i;\n      RGB_YUV_TABLE[i + 1024 >> 0] = -21709 * i;\n      RGB_YUV_TABLE[i + 1280 >> 0] = 32768 * i + 0x807FFF;\n      RGB_YUV_TABLE[i + 1536 >> 0] = -27439 * i;\n      RGB_YUV_TABLE[i + 1792 >> 0] = -5329 * i;\n    }\n  } // IO functions\n\n\n  function writeBits(bs) {\n    var value = bs[0];\n    var posval = bs[1] - 1;\n\n    while (posval >= 0) {\n      if (value & 1 << posval) {\n        bytenew |= 1 << bytepos;\n      }\n\n      posval--;\n      bytepos--;\n\n      if (bytepos < 0) {\n        if (bytenew == 0xFF) {\n          writeByte(0xFF);\n          writeByte(0);\n        } else {\n          writeByte(bytenew);\n        }\n\n        bytepos = 7;\n        bytenew = 0;\n      }\n    }\n  }\n\n  function writeByte(value) {\n    //byteout.push(clt[value]); // write char directly instead of converting later\n    byteout.push(value);\n  }\n\n  function writeWord(value) {\n    writeByte(value >> 8 & 0xFF);\n    writeByte(value & 0xFF);\n  } // DCT & quantization core\n\n\n  function fDCTQuant(data, fdtbl) {\n    var d0, d1, d2, d3, d4, d5, d6, d7;\n    /* Pass 1: process rows. */\n\n    var dataOff = 0;\n    var i;\n    var I8 = 8;\n    var I64 = 64;\n\n    for (i = 0; i < I8; ++i) {\n      d0 = data[dataOff];\n      d1 = data[dataOff + 1];\n      d2 = data[dataOff + 2];\n      d3 = data[dataOff + 3];\n      d4 = data[dataOff + 4];\n      d5 = data[dataOff + 5];\n      d6 = data[dataOff + 6];\n      d7 = data[dataOff + 7];\n      var tmp0 = d0 + d7;\n      var tmp7 = d0 - d7;\n      var tmp1 = d1 + d6;\n      var tmp6 = d1 - d6;\n      var tmp2 = d2 + d5;\n      var tmp5 = d2 - d5;\n      var tmp3 = d3 + d4;\n      var tmp4 = d3 - d4;\n      /* Even part */\n\n      var tmp10 = tmp0 + tmp3;\n      /* phase 2 */\n\n      var tmp13 = tmp0 - tmp3;\n      var tmp11 = tmp1 + tmp2;\n      var tmp12 = tmp1 - tmp2;\n      data[dataOff] = tmp10 + tmp11;\n      /* phase 3 */\n\n      data[dataOff + 4] = tmp10 - tmp11;\n      var z1 = (tmp12 + tmp13) * 0.707106781;\n      /* c4 */\n\n      data[dataOff + 2] = tmp13 + z1;\n      /* phase 5 */\n\n      data[dataOff + 6] = tmp13 - z1;\n      /* Odd part */\n\n      tmp10 = tmp4 + tmp5;\n      /* phase 2 */\n\n      tmp11 = tmp5 + tmp6;\n      tmp12 = tmp6 + tmp7;\n      /* The rotator is modified from fig 4-8 to avoid extra negations. */\n\n      var z5 = (tmp10 - tmp12) * 0.382683433;\n      /* c6 */\n\n      var z2 = 0.541196100 * tmp10 + z5;\n      /* c2-c6 */\n\n      var z4 = 1.306562965 * tmp12 + z5;\n      /* c2+c6 */\n\n      var z3 = tmp11 * 0.707106781;\n      /* c4 */\n\n      var z11 = tmp7 + z3;\n      /* phase 5 */\n\n      var z13 = tmp7 - z3;\n      data[dataOff + 5] = z13 + z2;\n      /* phase 6 */\n\n      data[dataOff + 3] = z13 - z2;\n      data[dataOff + 1] = z11 + z4;\n      data[dataOff + 7] = z11 - z4;\n      dataOff += 8;\n      /* advance pointer to next row */\n    }\n    /* Pass 2: process columns. */\n\n\n    dataOff = 0;\n\n    for (i = 0; i < I8; ++i) {\n      d0 = data[dataOff];\n      d1 = data[dataOff + 8];\n      d2 = data[dataOff + 16];\n      d3 = data[dataOff + 24];\n      d4 = data[dataOff + 32];\n      d5 = data[dataOff + 40];\n      d6 = data[dataOff + 48];\n      d7 = data[dataOff + 56];\n      var tmp0p2 = d0 + d7;\n      var tmp7p2 = d0 - d7;\n      var tmp1p2 = d1 + d6;\n      var tmp6p2 = d1 - d6;\n      var tmp2p2 = d2 + d5;\n      var tmp5p2 = d2 - d5;\n      var tmp3p2 = d3 + d4;\n      var tmp4p2 = d3 - d4;\n      /* Even part */\n\n      var tmp10p2 = tmp0p2 + tmp3p2;\n      /* phase 2 */\n\n      var tmp13p2 = tmp0p2 - tmp3p2;\n      var tmp11p2 = tmp1p2 + tmp2p2;\n      var tmp12p2 = tmp1p2 - tmp2p2;\n      data[dataOff] = tmp10p2 + tmp11p2;\n      /* phase 3 */\n\n      data[dataOff + 32] = tmp10p2 - tmp11p2;\n      var z1p2 = (tmp12p2 + tmp13p2) * 0.707106781;\n      /* c4 */\n\n      data[dataOff + 16] = tmp13p2 + z1p2;\n      /* phase 5 */\n\n      data[dataOff + 48] = tmp13p2 - z1p2;\n      /* Odd part */\n\n      tmp10p2 = tmp4p2 + tmp5p2;\n      /* phase 2 */\n\n      tmp11p2 = tmp5p2 + tmp6p2;\n      tmp12p2 = tmp6p2 + tmp7p2;\n      /* The rotator is modified from fig 4-8 to avoid extra negations. */\n\n      var z5p2 = (tmp10p2 - tmp12p2) * 0.382683433;\n      /* c6 */\n\n      var z2p2 = 0.541196100 * tmp10p2 + z5p2;\n      /* c2-c6 */\n\n      var z4p2 = 1.306562965 * tmp12p2 + z5p2;\n      /* c2+c6 */\n\n      var z3p2 = tmp11p2 * 0.707106781;\n      /* c4 */\n\n      var z11p2 = tmp7p2 + z3p2;\n      /* phase 5 */\n\n      var z13p2 = tmp7p2 - z3p2;\n      data[dataOff + 40] = z13p2 + z2p2;\n      /* phase 6 */\n\n      data[dataOff + 24] = z13p2 - z2p2;\n      data[dataOff + 8] = z11p2 + z4p2;\n      data[dataOff + 56] = z11p2 - z4p2;\n      dataOff++;\n      /* advance pointer to next column */\n    } // Quantize/descale the coefficients\n\n\n    var fDCTQuant;\n\n    for (i = 0; i < I64; ++i) {\n      // Apply the quantization and scaling factor & Round to nearest integer\n      fDCTQuant = data[i] * fdtbl[i];\n      outputfDCTQuant[i] = fDCTQuant > 0.0 ? fDCTQuant + 0.5 | 0 : fDCTQuant - 0.5 | 0; //outputfDCTQuant[i] = fround(fDCTQuant);\n    }\n\n    return outputfDCTQuant;\n  }\n\n  function writeAPP0() {\n    writeWord(0xFFE0); // marker\n\n    writeWord(16); // length\n\n    writeByte(0x4A); // J\n\n    writeByte(0x46); // F\n\n    writeByte(0x49); // I\n\n    writeByte(0x46); // F\n\n    writeByte(0); // = \"JFIF\",'\\0'\n\n    writeByte(1); // versionhi\n\n    writeByte(1); // versionlo\n\n    writeByte(0); // xyunits\n\n    writeWord(1); // xdensity\n\n    writeWord(1); // ydensity\n\n    writeByte(0); // thumbnwidth\n\n    writeByte(0); // thumbnheight\n  }\n\n  function writeSOF0(width, height) {\n    writeWord(0xFFC0); // marker\n\n    writeWord(17); // length, truecolor YUV JPG\n\n    writeByte(8); // precision\n\n    writeWord(height);\n    writeWord(width);\n    writeByte(3); // nrofcomponents\n\n    writeByte(1); // IdY\n\n    writeByte(0x11); // HVY\n\n    writeByte(0); // QTY\n\n    writeByte(2); // IdU\n\n    writeByte(0x11); // HVU\n\n    writeByte(1); // QTU\n\n    writeByte(3); // IdV\n\n    writeByte(0x11); // HVV\n\n    writeByte(1); // QTV\n  }\n\n  function writeDQT() {\n    writeWord(0xFFDB); // marker\n\n    writeWord(132); // length\n\n    writeByte(0);\n\n    for (var i = 0; i < 64; i++) {\n      writeByte(YTable[i]);\n    }\n\n    writeByte(1);\n\n    for (var j = 0; j < 64; j++) {\n      writeByte(UVTable[j]);\n    }\n  }\n\n  function writeDHT() {\n    writeWord(0xFFC4); // marker\n\n    writeWord(0x01A2); // length\n\n    writeByte(0); // HTYDCinfo\n\n    for (var i = 0; i < 16; i++) {\n      writeByte(std_dc_luminance_nrcodes[i + 1]);\n    }\n\n    for (var j = 0; j <= 11; j++) {\n      writeByte(std_dc_luminance_values[j]);\n    }\n\n    writeByte(0x10); // HTYACinfo\n\n    for (var k = 0; k < 16; k++) {\n      writeByte(std_ac_luminance_nrcodes[k + 1]);\n    }\n\n    for (var l = 0; l <= 161; l++) {\n      writeByte(std_ac_luminance_values[l]);\n    }\n\n    writeByte(1); // HTUDCinfo\n\n    for (var m = 0; m < 16; m++) {\n      writeByte(std_dc_chrominance_nrcodes[m + 1]);\n    }\n\n    for (var n = 0; n <= 11; n++) {\n      writeByte(std_dc_chrominance_values[n]);\n    }\n\n    writeByte(0x11); // HTUACinfo\n\n    for (var o = 0; o < 16; o++) {\n      writeByte(std_ac_chrominance_nrcodes[o + 1]);\n    }\n\n    for (var p = 0; p <= 161; p++) {\n      writeByte(std_ac_chrominance_values[p]);\n    }\n  }\n\n  function writeSOS() {\n    writeWord(0xFFDA); // marker\n\n    writeWord(12); // length\n\n    writeByte(3); // nrofcomponents\n\n    writeByte(1); // IdY\n\n    writeByte(0); // HTY\n\n    writeByte(2); // IdU\n\n    writeByte(0x11); // HTU\n\n    writeByte(3); // IdV\n\n    writeByte(0x11); // HTV\n\n    writeByte(0); // Ss\n\n    writeByte(0x3f); // Se\n\n    writeByte(0); // Bf\n  }\n\n  function processDU(CDU, fdtbl, DC, HTDC, HTAC) {\n    var EOB = HTAC[0x00];\n    var M16zeroes = HTAC[0xF0];\n    var pos;\n    var I16 = 16;\n    var I63 = 63;\n    var I64 = 64;\n    var DU_DCT = fDCTQuant(CDU, fdtbl); //ZigZag reorder\n\n    for (var j = 0; j < I64; ++j) {\n      DU[ZigZag[j]] = DU_DCT[j];\n    }\n\n    var Diff = DU[0] - DC;\n    DC = DU[0]; //Encode DC\n\n    if (Diff == 0) {\n      writeBits(HTDC[0]); // Diff might be 0\n    } else {\n      pos = 32767 + Diff;\n      writeBits(HTDC[category[pos]]);\n      writeBits(bitcode[pos]);\n    } //Encode ACs\n\n\n    var end0pos = 63; // was const... which is crazy\n\n    for (; end0pos > 0 && DU[end0pos] == 0; end0pos--) {}\n\n    ; //end0pos = first element in reverse order !=0\n\n    if (end0pos == 0) {\n      writeBits(EOB);\n      return DC;\n    }\n\n    var i = 1;\n    var lng;\n\n    while (i <= end0pos) {\n      var startpos = i;\n\n      for (; DU[i] == 0 && i <= end0pos; ++i) {}\n\n      var nrzeroes = i - startpos;\n\n      if (nrzeroes >= I16) {\n        lng = nrzeroes >> 4;\n\n        for (var nrmarker = 1; nrmarker <= lng; ++nrmarker) {\n          writeBits(M16zeroes);\n        }\n\n        nrzeroes = nrzeroes & 0xF;\n      }\n\n      pos = 32767 + DU[i];\n      writeBits(HTAC[(nrzeroes << 4) + category[pos]]);\n      writeBits(bitcode[pos]);\n      i++;\n    }\n\n    if (end0pos != I63) {\n      writeBits(EOB);\n    }\n\n    return DC;\n  }\n\n  function initCharLookupTable() {\n    var sfcc = String.fromCharCode;\n\n    for (var i = 0; i < 256; i++) {\n      ///// ACHTUNG // 255\n      clt[i] = sfcc(i);\n    }\n  }\n\n  this.encode = function (image, quality) // image data object\n  {\n    var time_start = new Date().getTime();\n    if (quality) setQuality(quality); // Initialize bit writer\n\n    byteout = new Array();\n    bytenew = 0;\n    bytepos = 7; // Add JPEG headers\n\n    writeWord(0xFFD8); // SOI\n\n    writeAPP0();\n    writeDQT();\n    writeSOF0(image.width, image.height);\n    writeDHT();\n    writeSOS(); // Encode 8x8 macroblocks\n\n    var DCY = 0;\n    var DCU = 0;\n    var DCV = 0;\n    bytenew = 0;\n    bytepos = 7;\n    this.encode.displayName = \"_encode_\";\n    var imageData = image.data;\n    var width = image.width;\n    var height = image.height;\n    var quadWidth = width * 4;\n    var tripleWidth = width * 3;\n    var x,\n        y = 0;\n    var r, g, b;\n    var start, p, col, row, pos;\n\n    while (y < height) {\n      x = 0;\n\n      while (x < quadWidth) {\n        start = quadWidth * y + x;\n        p = start;\n        col = -1;\n        row = 0;\n\n        for (pos = 0; pos < 64; pos++) {\n          row = pos >> 3; // /8\n\n          col = (pos & 7) * 4; // %8\n\n          p = start + row * quadWidth + col;\n\n          if (y + row >= height) {\n            // padding bottom\n            p -= quadWidth * (y + 1 + row - height);\n          }\n\n          if (x + col >= quadWidth) {\n            // padding right\t\n            p -= x + col - quadWidth + 4;\n          }\n\n          r = imageData[p++];\n          g = imageData[p++];\n          b = imageData[p++];\n          /* // calculate YUV values dynamically\n          YDU[pos]=((( 0.29900)*r+( 0.58700)*g+( 0.11400)*b))-128; //-0x80\n          UDU[pos]=(((-0.16874)*r+(-0.33126)*g+( 0.50000)*b));\n          VDU[pos]=((( 0.50000)*r+(-0.41869)*g+(-0.08131)*b));\n          */\n          // use lookup table (slightly faster)\n\n          YDU[pos] = (RGB_YUV_TABLE[r] + RGB_YUV_TABLE[g + 256 >> 0] + RGB_YUV_TABLE[b + 512 >> 0] >> 16) - 128;\n          UDU[pos] = (RGB_YUV_TABLE[r + 768 >> 0] + RGB_YUV_TABLE[g + 1024 >> 0] + RGB_YUV_TABLE[b + 1280 >> 0] >> 16) - 128;\n          VDU[pos] = (RGB_YUV_TABLE[r + 1280 >> 0] + RGB_YUV_TABLE[g + 1536 >> 0] + RGB_YUV_TABLE[b + 1792 >> 0] >> 16) - 128;\n        }\n\n        DCY = processDU(YDU, fdtbl_Y, DCY, YDC_HT, YAC_HT);\n        DCU = processDU(UDU, fdtbl_UV, DCU, UVDC_HT, UVAC_HT);\n        DCV = processDU(VDU, fdtbl_UV, DCV, UVDC_HT, UVAC_HT);\n        x += 32;\n      }\n\n      y += 8;\n    } ////////////////////////////////////////////////////////////////\n    // Do the bit alignment of the EOI marker\n\n\n    if (bytepos >= 0) {\n      var fillbits = [];\n      fillbits[1] = bytepos + 1;\n      fillbits[0] = (1 << bytepos + 1) - 1;\n      writeBits(fillbits);\n    }\n\n    writeWord(0xFFD9); //EOI\n    //return new Uint8Array(byteout);\n\n    return new Buffer(byteout);\n    var jpegDataUri = 'data:image/jpeg;base64,' + btoa(byteout.join(''));\n    byteout = []; // benchmarking\n\n    var duration = new Date().getTime() - time_start; //console.log('Encoding time: '+ duration + 'ms');\n    //\n\n    return jpegDataUri;\n  };\n\n  function setQuality(quality) {\n    if (quality <= 0) {\n      quality = 1;\n    }\n\n    if (quality > 100) {\n      quality = 100;\n    }\n\n    if (currentQuality == quality) return; // don't recalc if unchanged\n\n    var sf = 0;\n\n    if (quality < 50) {\n      sf = Math.floor(5000 / quality);\n    } else {\n      sf = Math.floor(200 - quality * 2);\n    }\n\n    initQuantTables(sf);\n    currentQuality = quality; //console.log('Quality set to: '+quality +'%');\n  }\n\n  function init() {\n    var time_start = new Date().getTime();\n    if (!quality) quality = 50; // Create tables\n\n    initCharLookupTable();\n    initHuffmanTbl();\n    initCategoryNumber();\n    initRGBYUVTable();\n    setQuality(quality);\n    var duration = new Date().getTime() - time_start; //console.log('Initialization '+ duration + 'ms');\n  }\n\n  init();\n}\n\n;\n\nif (typeof module !== undefined) {\n  module.exports = encode;\n}\n\nfunction encode(imgData, qu) {\n  if (typeof qu === 'undefined') qu = 50;\n  var encoder = new JPEGEncoder(qu);\n  var data = encoder.encode(imgData, qu);\n  return {\n    data: data,\n    width: imgData.width,\n    height: imgData.height\n  };\n} // helper function to get the imageData of an existing image on the current page.\n\n\nfunction getImageDataFromImage(idOrElement) {\n  var theImg = typeof idOrElement == 'string' ? document.getElementById(idOrElement) : idOrElement;\n  var cvs = document.createElement('canvas');\n  cvs.width = theImg.width;\n  cvs.height = theImg.height;\n  var ctx = cvs.getContext(\"2d\");\n  ctx.drawImage(theImg, 0, 0);\n  return ctx.getImageData(0, 0, cvs.width, cvs.height);\n}","map":{"version":3,"sources":["/home/al/Desktop/koi/narcissus/content/node_modules/jpeg-js/lib/encoder.js"],"names":["btoa","buf","Buffer","toString","JPEGEncoder","quality","self","fround","Math","round","ffloor","floor","YTable","Array","UVTable","fdtbl_Y","fdtbl_UV","YDC_HT","UVDC_HT","YAC_HT","UVAC_HT","bitcode","category","outputfDCTQuant","DU","byteout","bytenew","bytepos","YDU","UDU","VDU","clt","RGB_YUV_TABLE","currentQuality","ZigZag","std_dc_luminance_nrcodes","std_dc_luminance_values","std_ac_luminance_nrcodes","std_ac_luminance_values","std_dc_chrominance_nrcodes","std_dc_chrominance_values","std_ac_chrominance_nrcodes","std_ac_chrominance_values","initQuantTables","sf","YQT","i","t","UVQT","j","u","aasf","k","row","col","computeHuffmanTbl","nrcodes","std_table","codevalue","pos_in_table","HT","initHuffmanTbl","initCategoryNumber","nrlower","nrupper","cat","nr","nrneg","initRGBYUVTable","writeBits","bs","value","posval","writeByte","push","writeWord","fDCTQuant","data","fdtbl","d0","d1","d2","d3","d4","d5","d6","d7","dataOff","I8","I64","tmp0","tmp7","tmp1","tmp6","tmp2","tmp5","tmp3","tmp4","tmp10","tmp13","tmp11","tmp12","z1","z5","z2","z4","z3","z11","z13","tmp0p2","tmp7p2","tmp1p2","tmp6p2","tmp2p2","tmp5p2","tmp3p2","tmp4p2","tmp10p2","tmp13p2","tmp11p2","tmp12p2","z1p2","z5p2","z2p2","z4p2","z3p2","z11p2","z13p2","writeAPP0","writeSOF0","width","height","writeDQT","writeDHT","l","m","n","o","p","writeSOS","processDU","CDU","DC","HTDC","HTAC","EOB","M16zeroes","pos","I16","I63","DU_DCT","Diff","end0pos","lng","startpos","nrzeroes","nrmarker","initCharLookupTable","sfcc","String","fromCharCode","encode","image","time_start","Date","getTime","setQuality","DCY","DCU","DCV","displayName","imageData","quadWidth","tripleWidth","x","y","r","g","b","start","fillbits","jpegDataUri","join","duration","init","module","undefined","exports","imgData","qu","encoder","getImageDataFromImage","idOrElement","theImg","document","getElementById","cvs","createElement","ctx","getContext","drawImage","getImageData"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,IAAI,GAAGA,IAAI,IAAI,UAASC,GAAT,EAAc;AAC/B,SAAO,IAAIC,MAAJ,CAAWD,GAAX,EAAgBE,QAAhB,CAAyB,QAAzB,CAAP;AACD,CAFD;;AAIA,SAASC,WAAT,CAAqBC,OAArB,EAA8B;AAC5B,MAAIC,IAAI,GAAG,IAAX;AACD,MAAIC,MAAM,GAAGC,IAAI,CAACC,KAAlB;AACA,MAAIC,MAAM,GAAGF,IAAI,CAACG,KAAlB;AACA,MAAIC,MAAM,GAAG,IAAIC,KAAJ,CAAU,EAAV,CAAb;AACA,MAAIC,OAAO,GAAG,IAAID,KAAJ,CAAU,EAAV,CAAd;AACA,MAAIE,OAAO,GAAG,IAAIF,KAAJ,CAAU,EAAV,CAAd;AACA,MAAIG,QAAQ,GAAG,IAAIH,KAAJ,CAAU,EAAV,CAAf;AACA,MAAII,MAAJ;AACA,MAAIC,OAAJ;AACA,MAAIC,MAAJ;AACA,MAAIC,OAAJ;AAEA,MAAIC,OAAO,GAAG,IAAIR,KAAJ,CAAU,KAAV,CAAd;AACA,MAAIS,QAAQ,GAAG,IAAIT,KAAJ,CAAU,KAAV,CAAf;AACA,MAAIU,eAAe,GAAG,IAAIV,KAAJ,CAAU,EAAV,CAAtB;AACA,MAAIW,EAAE,GAAG,IAAIX,KAAJ,CAAU,EAAV,CAAT;AACA,MAAIY,OAAO,GAAG,EAAd;AACA,MAAIC,OAAO,GAAG,CAAd;AACA,MAAIC,OAAO,GAAG,CAAd;AAEA,MAAIC,GAAG,GAAG,IAAIf,KAAJ,CAAU,EAAV,CAAV;AACA,MAAIgB,GAAG,GAAG,IAAIhB,KAAJ,CAAU,EAAV,CAAV;AACA,MAAIiB,GAAG,GAAG,IAAIjB,KAAJ,CAAU,EAAV,CAAV;AACA,MAAIkB,GAAG,GAAG,IAAIlB,KAAJ,CAAU,GAAV,CAAV;AACA,MAAImB,aAAa,GAAG,IAAInB,KAAJ,CAAU,IAAV,CAApB;AACA,MAAIoB,cb;AAWA,MAAIC,wBAAwB,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,EAAqB,CAArB,EAAuB,CAAvB,EAAyB,CAAzB,EAA2B,CAA3B,EAA6B,CAA7B,EAA+B,CAA/B,EAAiC,CAAjC,CAA/B;AACA,MAAIC,uBAAuB,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,EAAqB,EAArB,EAAwB,EAAxB,CAA9B;AACA,MAAIC,wBAAwB,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,EAAqB,CAArB,EAAuB,CAAvB,EAAyB,CAAzB,EAA2B,CAA3B,EAA6B,CAA7B,EAA+B,CAA/B,EAAiC,IAAjC,CAA/B;AACA,MAAIC,uBAAuB,GAAG,CAC5B,IAD4B,EACvB,IADuB,EAClB,IADkB,EACb,IADa,EACR,IADQ,EACH,IADG,EACE,IADF,EACO,IADP,EAE5B,IAF4B,EAEvB,IAFuB,EAElB,IAFkB,EAEb,IAFa,EAER,IAFQ,EAEH,IAFG,EAEE,IAFF,EAEO,IAFP,EAG5B,IAH4B,EAGvB,IAHuB,EAGlB,IAHkB,EAGb,IAHa,EAGR,IAHQ,EAGH,IAHG,EAGE,IAHF,EAGO,IAHP,EAI5B,IAJ4B,EAIvB,IAJuB,EAIlB,IAJkB,EAIb,IAJa,EAIR,IAJQ,EAIH,IAJG,EAIE,IAJF,EAIO,IAJP,EAK5B,IAL4B,EAKvB,IALuB,EAKlB,IALkB,EAKb,IALa,EAKR,IALQ,EAKH,IALG,EAKE,IALF,EAKO,IALP,EAM5B,IAN4B,EAMvB,IANuB,EAMlB,IANkB,EAMb,IANa,EAMR,IANQ,EAMH,IANG,EAME,IANF,EAMO,IANP,EAO5B,IAP4B,EAOvB,IAPuB,EAOlB,IAPkB,EAOb,IAPa,EAOR,IAPQ,EAOH,IAPG,EAOE,IAPF,EAOO,IAPP,EAQ5B,IAR4B,EAQvB,IARuB,EAQlB,IARkB,EAQb,IARa,EAQR,IARQ,EAQH,IARG,EAQE,IARF,EAQO,IARP,EAS5B,IAT4B,EASvB,IATuB,EASlB,IATkB,EASb,IATa,EASR,IATQ,EASH,IATG,EASE,IATF,EASO,IATP,EAU5B,IAV4B,EAUvB,IAVuB,EAUlB,IAVkB,EAUb,IAVa,EAUR,IAVQ,EAUH,IAVG,EAUE,IAVF,EAUO,IAVP,EAW5B,IAX4B,EAWvB,IAXuB,EAWlB,IAXkB,EAWb,IAXa,EAWR,IAXQ,EAWH,IAXG,EAWE,IAXF,EAWO,IAXP,EAY5B,IAZ4B,EAYvB,IAZuB,EAYlB,IAZkB,EAYb,IAZa,EAYR,IAZQ,EAYH,IAZG,EAYE,IAZF,EAYO,IAZP,EAa5B,IAb4B,EAavB,IAbuB,EAalB,IAbkB,EAab,IAba,EAaR,IAbQ,EAaH,IAbG,EAaE,IAbF,EAaO,IAbP,EAc5B,IAd4B,EAcvB,IAduB,EAclB,IAdkB,EAcb,IAda,EAcR,IAdQ,EAcH,IAdG,EAcE,IAdF,EAcO,IAdP,EAe5B,IAf4B,EAevB,IAfuB,EAelB,IAfkB,EAeb,IAfa,EAeR,IAfQ,EAeH,IAfG,EAeE,IAfF,EAeO,IAfP,EAgB5B,IAhB4B,EAgBvB,IAhBuB,EAgBlB,IAhBkB,EAgBb,IAhBa,EAgBR,IAhBQ,EAgBH,IAhBG,EAgBE,IAhBF,EAgBO,IAhBP,EAiB5B,IAjB4B,EAiBvB,IAjBuB,EAiBlB,IAjBkB,EAiBb,IAjBa,EAiBR,IAjBQ,EAiBH,IAjBG,EAiBE,IAjBF,EAiBO,IAjBP,EAkB5B,IAlB4B,EAkBvB,IAlBuB,EAkBlB,IAlBkB,EAkBb,IAlBa,EAkBR,IAlBQ,EAkBH,IAlBG,EAkBE,IAlBF,EAkBO,IAlBP,EAmB5B,IAnB4B,EAmBvB,IAnBuB,EAmBlB,IAnBkB,EAmBb,IAnBa,EAmBR,IAnBQ,EAmBH,IAnBG,EAmBE,IAnBF,EAmBO,IAnBP,EAoB5B,IApB4B,EAoBvB,IApBuB,EAoBlB,IApBkB,EAoBb,IApBa,EAoBR,IApBQ,EAoBH,IApBG,EAoBE,IApBF,EAoBO,IApBP,EAqB5B,IArB4B,EAqBvB,IArBuB,CAA9B;AAwBA,MAAIC,0BAA0B,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,EAAqB,CAArB,EAAuB,CAAvB,EAAyB,CAAzB,EAA2B,CAA3B,EAA6B,CAA7B,EAA+B,CAA/B,EAAiC,CAAjC,CAAjC;AACA,MAAIC,yBAAyB,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,EAAqB,EAArB,EAAwB,EAAxB,CAAhC;AACA,MAAIC,0BAA0B,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,EAAqB,CAArB,EAAuB,CAAvB,EAAyB,CAAzB,EAA2B,CAA3B,EAA6B,CAA7B,EAA+B,CAA/B,EAAiC,IAAjC,CAAjC;AACA,MAAIC,yBAAyB,GAAG,CAC9B,IAD8B,EACzB,IADyB,EACpB,IADoB,EACf,IADe,EACV,IADU,EACL,IADK,EACA,IADA,EACK,IADL,EAE9B,IAF8B,EAEzB,IAFyB,EAEpB,IAFoB,EAEf,IAFe,EAEV,IAFU,EAEL,IAFK,EAEA,IAFA,EAEK,IAFL,EAG9B,IAH8B,EAGzB,IAHyB,EAGpB,IAHoB,EAGf,IAHe,EAGV,IAHU,EAGL,IAHK,EAGA,IAHA,EAGK,IAHL,EAI9B,IAJ8B,EAIzB,IAJyB,EAIpB,IAJoB,EAIf,IAJe,EAIV,IAJU,EAIL,IAJK,EAIA,IAJA,EAIK,IAJL,EAK9B,IAL8B,EAKzB,IALyB,EAKpB,IALoB,EAKf,IALe,EAKV,IALU,EAKL,IALK,EAKA,IALA,EAKK,IALL,EAM9B,IAN8B,EAMzB,IANyB,EAMpB,IANoB,EAMf,IANe,EAMV,IANU,EAML,IANK,EAMA,IANA,EAMK,IANL,EAO9B,IAP8B,EAOzB,IAPyB,EAOpB,IAPoB,EAOf,IAPe,EAOV,IAPU,EAOL,IAPK,EAOA,IAPA,EAOK,IAPL,EAQ9B,IAR8B,EAQzB,IARyB,EAQpB,IARoB,EAQf,IARe,EAQV,IARU,EAQL,IARK,EAQA,IARA,EAQK,IARL,EAS9B,IAT8B,EASzB,IATyB,EASpB,IAToB,EASf,IATe,EASV,IATU,EASL,IATK,EASA,IATA,EASK,IATL,EAU9B,IAV8B,EAUzB,IAVyB,EAUpB,IAVoB,EAUf,IAVe,EAUV,IAVU,EAUL,IAVK,EAUA,IAVA,EAUK,IAVL,EAW9B,IAX8B,EAWzB,IAXyB,EAWpB,IAXoB,EAWf,IAXe,EAWV,IAXU,EAWL,IAXK,EAWA,IAXA,EAWK,IAXL,EAY9B,IAZ8B,EAYzB,IAZyB,EAYpB,IAZoB,EAYf,IAZe,EAYV,IAZU,EAYL,IAZK,EAYA,IAZA,EAYK,IAZL,EAa9B,IAb8B,EAazB,IAbyB,EAapB,IAboB,EAaf,IAbe,EAaV,IAbU,EAaL,IAbK,EAaA,IAbA,EAaK,IAbL,EAc9B,IAd8B,EAczB,IAdyB,EAcpB,IAdoB,EAcf,IAde,EAcV,IAdU,EAcL,IAdK,EAcA,IAdA,EAcK,IAdL,EAe9B,IAf8B,EAezB,IAfyB,EAepB,IAfoB,EAef,IAfe,EAeV,IAfU,EAeL,IAfK,EAeA,IAfA,EAeK,IAfL,EAgB9B,IAhB8B,EAgBzB,IAhByB,EAgBpB,IAhBoB,EAgBf,IAhBe,EAgBV,IAhBU,EAgBL,IAhBK,EAgBA,IAhBA,EAgBK,IAhBL,EAiB9B,IAjB8B,EAiBzB,IAjByB,EAiBpB,IAjBoB,EAiBf,IAjBe,EAiBV,IAjBU,EAiBL,IAjBK,EAiBA,IAjBA,EAiBK,IAjBL,EAkB9B,IAlB8B,EAkBzB,IAlByB,EAkBpB,IAlBoB,EAkBf,IAlBe,EAkBV,IAlBU,EAkBL,IAlBK,EAkBA,IAlBA,EAkBK,IAlBL,EAmB9B,IAnB8B,EAmBzB,IAnByB,EAmBpB,IAnBoB,EAmBf,IAnBe,EAmBV,IAnBU,EAmBL,IAnBK,EAmBA,IAnBA,EAmBK,IAnBL,EAoB9B,IApB8B,EAoBzB,IApByB,EAoBpB,IApBoB,EAoBf,IApBe,EAoBV,IApBU,EAoBL,IApBK,EAoBA,IApBA,EAoBK,IApBL,EAqB9B,IArB8B,EAqBzB,IArByB,CAAhC;;AAwBA,WAASC,eAAT,CAAyBC,EAAzB,EAA4B;AAC1B,QAAIC,GAAG,GAAG,CACT,EADS,EACL,EADK,EACD,EADC,EACG,EADH,EACO,EADP,EACW,EADX,EACe,EADf,EACmB,EADnB,EAET,EAFS,EAEL,EAFK,EAED,EAFC,EAEG,EAFH,EAEO,EAFP,EAEW,EAFX,EAEe,EAFf,EAEmB,EAFnB,EAGT,EAHS,EAGL,EAHK,EAGD,EAHC,EAGG,EAHH,EAGO,EAHP,EAGW,EAHX,EAGe,EAHf,EAGmB,EAHnB,EAIT,EAJS,EAIL,EAJK,EAID,EAJC,EAIG,EAJH,EAIO,EAJP,EAIW,EAJX,EAIe,EAJf,EAImB,EAJnB,EAKT,EALS,EAKL,EALK,EAKD,EALC,EAKG,EALH,EAKO,EALP,EAKU,GALV,EAKc,GALd,EAKmB,EALnB,EAMT,EANS,EAML,EANK,EAMD,EANC,EAMG,EANH,EAMO,EANP,EAMU,GANV,EAMc,GANd,EAMmB,EANnB,EAOT,EAPS,EAOL,EAPK,EAOD,EAPC,EAOG,EAPH,EAOM,GAPN,EAOU,GAPV,EAOc,GAPd,EAOkB,GAPlB,EAQT,EARS,EAQL,EARK,EAQD,EARC,EAQG,EARH,EAQM,GARN,EAQU,GARV,EAQc,GARd,EAQmB,EARnB,CAAV;;AAWA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC5B,UAAIC,CAAC,GAAGrC,MAAM,CAAC,CAACmC,GAAG,CAACC,CAAD,CAAH,GAAOF,EAAP,GAAU,EAAX,IAAe,GAAhB,CAAd;;AACA,UAAIG,CAAC,GAAG,CAAR,EAAW;AACVA,QAAAA,CAAC,GAAG,CAAJ;AACA,OAFD,MAEO,IAAIA,CAAC,GAAG,GAAR,EAAa;AACnBA,QAAAA,CAAC,GAAG,GAAJ;AACA;;AACDnC,MAAAA,MAAM,CAACsB,MAAM,CAACY,CAAD,CAAP,CAAN,GAAoBC,CAApB;AACA;;AACD,QAAIC,IAAI,GAAG,CACV,EADU,EACN,EADM,EACF,EADE,EACE,EADF,EACM,EADN,EACU,EADV,EACc,EADd,EACkB,EADlB,EAEV,EAFU,EAEN,EAFM,EAEF,EAFE,EAEE,EAFF,EAEM,EAFN,EAEU,EAFV,EAEc,EAFd,EAEkB,EAFlB,EAGV,EAHU,EAGN,EAHM,EAGF,EAHE,EAGE,EAHF,EAGM,EAHN,EAGU,EAHV,EAGc,EAHd,EAGkB,EAHlB,EAIV,EAJU,EAIN,EAJM,EAIF,EAJE,EAIE,EAJF,EAIM,EAJN,EAIU,EAJV,EAIc,EAJd,EAIkB,EAJlB,EAKV,EALU,EAKN,EALM,EAKF,EALE,EAKE,EALF,EAKM,EALN,EAKU,EALV,EAKc,EALd,EAKkB,EALlB,EAMV,EANU,EAMN,EANM,EAMF,EANE,EAME,EANF,EAMM,EANN,EAMU,EANV,EAMc,EANd,EAMkB,EANlB,EAOV,EAPU,EAON,EAPM,EAOF,EAPE,EAOE,EAPF,EAOM,EAPN,EAOU,EAPV,EAOc,EAPd,EAOkB,EAPlB,EAQV,EARU,EAQN,EARM,EAQF,EARE,EAQE,EARF,EAQM,EARN,EAQU,EARV,EAQc,EARd,EAQkB,EARlB,CAAX;;AAUA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC5B,UAAIC,CAAC,GAAGxC,MAAM,CAAC,CAACsC,IAAI,CAACC,CAAD,CAAJ,GAAQL,EAAR,GAAW,EAAZ,IAAgB,GAAjB,CAAd;;AACA,UAAIM,CAAC,GAAG,CAAR,EAAW;AACVA,QAAAA,CAAC,GAAG,CAAJ;AACA,OAFD,MAEO,IAAIA,CAAC,GAAG,GAAR,EAAa;AACnBA,QAAAA,CAAC,GAAG,GAAJ;AACA;;AACDpC,MAAAA,OAAO,CAACoB,MAAM,CAACe,CAAD,CAAP,CAAP,GAAqBC,CAArB;AACA;;AACD,QAAIC,IAAI,GAAG,CACV,GADU,EACL,WADK,EACQ,WADR,EACqB,WADrB,EAEV,GAFU,EAEL,WAFK,EAEQ,WAFR,EAEqB,WAFrB,CAAX;AAIA,QAAIC,CAAC,GAAG,CAAR;;AACA,SAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,CAAxB,EAA2BA,GAAG,EAA9B,EACA;AACC,WAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,CAAxB,EAA2BA,GAAG,EAA9B,EACA;AACCvC,QAAAA,OAAO,CAACqC,CAAD,CAAP,GAAe,OAAOxC,MAAM,CAAEsB,MAAM,CAACkB,CAAD,CAAR,CAAN,GAAqBD,IAAI,CAACE,GAAD,CAAzB,GAAiCF,IAAI,CAACG,GAAD,CAArC,GAA6C,GAApD,CAAf;AACAtC,QAAAA,QAAQ,CAACoC,CAAD,CAAR,GAAe,OAAOtC,OAAO,CAACoB,MAAM,CAACkB,CAAD,CAAP,CAAP,GAAqBD,IAAI,CAACE,GAAD,CAAzB,GAAiCF,IAAI,CAACG,GAAD,CAArC,GAA6C,GAApD,CAAf;AACAF,QAAAA,CAAC;AACD;AACD;AACD;;AAED,WAASG,iBAAT,CAA2BC,OAA3B,EAAoCC,SAApC,EAA8C;AAC7C,QAAIC,SAAS,GAAG,CAAhB;AACA,QAAIC,YAAY,GAAG,CAAnB;AACA,QAAIC,EAAE,GAAG,IAAI/C,KAAJ,EAAT;;AACA,SAAK,IAAIuC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC7B,WAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIO,OAAO,CAACJ,CAAD,CAA5B,EAAiCH,CAAC,EAAlC,EAAsC;AACrCW,QAAAA,EAAE,CAACH,SAAS,CAACE,YAAD,CAAV,CAAF,GAA8B,EAA9B;AACAC,QAAAA,EAAE,CAACH,SAAS,CAACE,YAAD,CAAV,CAAF,CAA4B,CAA5B,IAAiCD,SAAjC;AACAE,QAAAA,EAAE,CAACH,SAAS,CAACE,YAAD,CAAV,CAAF,CAA4B,CAA5B,IAAiCP,CAAjC;AACAO,QAAAA,YAAY;AACZD,QAAAA,SAAS;AACT;;AACDA,MAAAA,SAAS,IAAE,CAAX;AACA;;AACD,WAAOE,EAAP;AACA;;AAED,WAASC,cAAT,GACA;AACC5C,IAAAA,MAAM,GAAGsC,iBAAiB,CAACpB,wBAAD,EAA0BC,uBAA1B,CAA1B;AACAlB,IAAAA,OAAO,GAAGqC,iBAAiB,CAAChB,0BAAD,EAA4BC,yBAA5B,CAA3B;AACArB,IAAAA,MAAM,GAAGoC,iBAAiB,CAAClB,wBAAD,EAA0BC,uBAA1B,CAA1B;AACAlB,IAAAA,OAAO,GAAGmC,iBAAiB,CAACd,0BAAD,EAA4BC,yBAA5B,CAA3B;AACA;;AAED,WAASoB,kBAAT,GACA;AACC,QAAIC,OAAO,GAAG,CAAd;AACA,QAAIC,OAAO,GAAG,CAAd;;AACA,SAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,IAAI,EAAzB,EAA6BA,GAAG,EAAhC,EAAoC;AACnC;AACA,WAAK,IAAIC,EAAE,GAAGH,OAAd,EAAuBG,EAAE,GAACF,OAA1B,EAAmCE,EAAE,EAArC,EAAyC;AACxC5C,QAAAA,QAAQ,CAAC,QAAM4C,EAAP,CAAR,GAAqBD,GAArB;AACA5C,QAAAA,OAAO,CAAC,QAAM6C,EAAP,CAAP,GAAoB,EAApB;AACA7C,QAAAA,OAAO,CAAC,QAAM6C,EAAP,CAAP,CAAkB,CAAlB,IAAuBD,GAAvB;AACA5C,QAAAA,OAAO,CAAC,QAAM6C,EAAP,CAAP,CAAkB,CAAlB,IAAuBA,EAAvB;AACA,OAPkC,CAQnC;;;AACA,WAAK,IAAIC,KAAK,GAAE,EAAEH,OAAO,GAAC,CAAV,CAAhB,EAA8BG,KAAK,IAAE,CAACJ,OAAtC,EAA+CI,KAAK,EAApD,EAAwD;AACvD7C,QAAAA,QAAQ,CAAC,QAAM6C,KAAP,CAAR,GAAwBF,GAAxB;AACA5C,QAAAA,OAAO,CAAC,QAAM8C,KAAP,CAAP,GAAuB,EAAvB;AACA9C,QAAAA,OAAO,CAAC,QAAM8C,KAAP,CAAP,CAAqB,CAArB,IAA0BF,GAA1B;AACA5C,QAAAA,OAAO,CAAC,QAAM8C,KAAP,CAAP,CAAqB,CAArB,IAA0BH,OAAO,GAAC,CAAR,GAAUG,KAApC;AACA;;AACDJ,MAAAA,OAAO,KAAK,CAAZ;AACAC,MAAAA,OAAO,KAAK,CAAZ;AACA;AACD;;AAED,WAASI,eAAT,GAA2B;AAC1B,SAAI,IAAItB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,GAAnB,EAAuBA,CAAC,EAAxB,EAA4B;AAC3Bd,MAAAA,aAAa,CAACc,CAAD,CAAb,GAA2B,QAAQA,CAAnC;AACAd,MAAAA,aAAa,CAAEc,CAAC,GAAE,GAAJ,IAAU,CAAX,CAAb,GAA+B,QAAQA,CAAvC;AACAd,MAAAA,aAAa,CAAEc,CAAC,GAAE,GAAJ,IAAU,CAAX,CAAb,GAAgC,OAAOA,CAAP,GAAW,MAA3C;AACAd,MAAAA,aAAa,CAAEc,CAAC,GAAE,GAAJ,IAAU,CAAX,CAAb,GAA8B,CAAC,KAAD,GAASA,CAAvC;AACAd,MAAAA,aAAa,CAAEc,CAAC,GAAC,IAAH,IAAU,CAAX,CAAb,GAA8B,CAAC,KAAD,GAASA,CAAvC;AACAd,MAAAA,aAAa,CAAEc,CAAC,GAAC,IAAH,IAAU,CAAX,CAAb,GAA+B,QAAQA,CAAR,GAAY,QAA3C;AACAd,MAAAA,aAAa,CAAEc,CAAC,GAAC,IAAH,IAAU,CAAX,CAAb,GAA8B,CAAC,KAAD,GAASA,CAAvC;AACAd,MAAAA,aAAa,CAAEc,CAAC,GAAC,IAAH,IAAU,CAAX,CAAb,GAA8B,CAAE,IAAF,GAASA,CAAvC;AACA;AACD,GAjN2B,CAmN5B;;;AACA,WAASuB,SAAT,CAAmBC,EAAnB,EACA;AACC,QAAIC,KAAK,GAAGD,EAAE,CAAC,CAAD,CAAd;AACA,QAAIE,MAAM,GAAGF,EAAE,CAAC,CAAD,CAAF,GAAM,CAAnB;;AACA,WAAQE,MAAM,IAAI,CAAlB,EAAsB;AACrB,UAAID,KAAK,GAAI,KAAKC,MAAlB,EAA4B;AAC3B9C,QAAAA,OAAO,IAAK,KAAKC,OAAjB;AACA;;AACD6C,MAAAA,MAAM;AACN7C,MAAAA,OAAO;;AACP,UAAIA,OAAO,GAAG,CAAd,EAAiB;AAChB,YAAID,OAAO,IAAI,IAAf,EAAqB;AACpB+C,UAAAA,SAAS,CAAC,IAAD,CAAT;AACAA,UAAAA,SAAS,CAAC,CAAD,CAAT;AACA,SAHD,MAIK;AACJA,UAAAA,SAAS,CAAC/C,OAAD,CAAT;AACA;;AACDC,QAAAA,OAAO,GAAC,CAAR;AACAD,QAAAA,OAAO,GAAC,CAAR;AACA;AACD;AACD;;AAED,WAAS+C,SAAT,CAAmBF,KAAnB,EACA;AACC;AACG9C,IAAAA,OAAO,CAACiD,IAAR,CAAaH,KAAb;AACH;;AAED,WAASI,SAAT,CAAmBJ,KAAnB,EACA;AACCE,IAAAA,SAAS,CAAEF,KAAK,IAAE,CAAR,GAAW,IAAZ,CAAT;AACAE,IAAAA,SAAS,CAAEF,KAAD,GAAW,IAAZ,CAAT;AACA,GAtP2B,CAwP5B;;;AACA,WAASK,SAAT,CAAmBC,IAAnB,EAAyBC,KAAzB,EACA;AACC,QAAIC,EAAJ,EAAQC,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB,EAAoBC,EAApB,EAAwBC,EAAxB,EAA4BC,EAA5B,EAAgCC,EAAhC;AACA;;AACA,QAAIC,OAAO,GAAC,CAAZ;AACA,QAAIzC,CAAJ;AACA,QAAI0C,EAAE,GAAG,CAAT;AACA,QAAIC,GAAG,GAAG,EAAV;;AACA,SAAK3C,CAAC,GAAC,CAAP,EAAUA,CAAC,GAAC0C,EAAZ,EAAgB,EAAE1C,CAAlB,EACA;AACCiC,MAAAA,EAAE,GAAGF,IAAI,CAACU,OAAD,CAAT;AACAP,MAAAA,EAAE,GAAGH,IAAI,CAACU,OAAO,GAAC,CAAT,CAAT;AACAN,MAAAA,EAAE,GAAGJ,IAAI,CAACU,OAAO,GAAC,CAAT,CAAT;AACAL,MAAAA,EAAE,GAAGL,IAAI,CAACU,OAAO,GAAC,CAAT,CAAT;AACAJ,MAAAA,EAAE,GAAGN,IAAI,CAACU,OAAO,GAAC,CAAT,CAAT;AACAH,MAAAA,EAAE,GAAGP,IAAI,CAACU,OAAO,GAAC,CAAT,CAAT;AACAF,MAAAA,EAAE,GAAGR,IAAI,CAACU,OAAO,GAAC,CAAT,CAAT;AACAD,MAAAA,EAAE,GAAGT,IAAI,CAACU,OAAO,GAAC,CAAT,CAAT;AAEA,UAAIG,IAAI,GAAGX,EAAE,GAAGO,EAAhB;AACA,UAAIK,IAAI,GAAGZ,EAAE,GAAGO,EAAhB;AACA,UAAIM,IAAI,GAAGZ,EAAE,GAAGK,EAAhB;AACA,UAAIQ,IAAI,GAAGb,EAAE,GAAGK,EAAhB;AACA,UAAIS,IAAI,GAAGb,EAAE,GAAGG,EAAhB;AACA,UAAIW,IAAI,GAAGd,EAAE,GAAGG,EAAhB;AACA,UAAIY,IAAI,GAAGd,EAAE,GAAGC,EAAhB;AACA,UAAIc,IAAI,GAAGf,EAAE,GAAGC,EAAhB;AAEA;;AACA,UAAIe,KAAK,GAAGR,IAAI,GAAGM,IAAnB;AAAyB;;AACzB,UAAIG,KAAK,GAAGT,IAAI,GAAGM,IAAnB;AACA,UAAII,KAAK,GAAGR,IAAI,GAAGE,IAAnB;AACA,UAAIO,KAAK,GAAGT,IAAI,GAAGE,IAAnB;AAEAjB,MAAAA,IAAI,CAACU,OAAD,CAAJ,GAAgBW,KAAK,GAAGE,KAAxB;AAA+B;;AAC/BvB,MAAAA,IAAI,CAACU,OAAO,GAAC,CAAT,CAAJ,GAAkBW,KAAK,GAAGE,KAA1B;AAEA,UAAIE,EAAE,GAAG,CAACD,KAAK,GAAGF,KAAT,IAAkB,WAA3B;AAAwC;;AACxCtB,MAAAA,IAAI,CAACU,OAAO,GAAC,CAAT,CAAJ,GAAkBY,KAAK,GAAGG,EAA1B;AAA8B;;AAC9BzB,MAAAA,IAAI,CAACU,OAAO,GAAC,CAAT,CAAJ,GAAkBY,KAAK,GAAGG,EAA1B;AAEA;;AACAJ,MAAAA,KAAK,GAAGD,IAAI,GAAGF,IAAf;AAAqB;;AACrBK,MAAAA,KAAK,GAAGL,IAAI,GAAGF,IAAf;AACAQ,MAAAA,KAAK,GAAGR,IAAI,GAAGF,IAAf;AAEA;;AACA,UAAIY,EAAE,GAAG,CAACL,KAAK,GAAGG,KAAT,IAAkB,WAA3B;AAAwC;;AACxC,UAAIG,EAAE,GAAG,cAAcN,KAAd,GAAsBK,EAA/B;AAAmC;;AACnC,UAAIE,EAAE,GAAG,cAAcJ,KAAd,GAAsBE,EAA/B;AAAmC;;AACnC,UAAIG,EAAE,GAAGN,KAAK,GAAG,WAAjB;AAA8B;;AAE9B,UAAIO,GAAG,GAAGhB,IAAI,GAAGe,EAAjB;AAAqB;;AACrB,UAAIE,GAAG,GAAGjB,IAAI,GAAGe,EAAjB;AAEA7B,MAAAA,IAAI,CAACU,OAAO,GAAC,CAAT,CAAJ,GAAkBqB,GAAG,GAAGJ,EAAxB;AAA4B;;AAC5B3B,MAAAA,IAAI,CAACU,OAAO,GAAC,CAAT,CAAJ,GAAkBqB,GAAG,GAAGJ,EAAxB;AACA3B,MAAAA,IAAI,CAACU,OAAO,GAAC,CAAT,CAAJ,GAAkBoB,GAAG,GAAGF,EAAxB;AACA5B,MAAAA,IAAI,CAACU,OAAO,GAAC,CAAT,CAAJ,GAAkBoB,GAAG,GAAGF,EAAxB;AAEAlB,MAAAA,OAAO,IAAI,CAAX;AAAc;AACd;AAED;;;AACAA,IAAAA,OAAO,GAAG,CAAV;;AACA,SAAKzC,CAAC,GAAC,CAAP,EAAUA,CAAC,GAAC0C,EAAZ,EAAgB,EAAE1C,CAAlB,EACA;AACCiC,MAAAA,EAAE,GAAGF,IAAI,CAACU,OAAD,CAAT;AACAP,MAAAA,EAAE,GAAGH,IAAI,CAACU,OAAO,GAAG,CAAX,CAAT;AACAN,MAAAA,EAAE,GAAGJ,IAAI,CAACU,OAAO,GAAG,EAAX,CAAT;AACAL,MAAAA,EAAE,GAAGL,IAAI,CAACU,OAAO,GAAG,EAAX,CAAT;AACAJ,MAAAA,EAAE,GAAGN,IAAI,CAACU,OAAO,GAAG,EAAX,CAAT;AACAH,MAAAA,EAAE,GAAGP,IAAI,CAACU,OAAO,GAAG,EAAX,CAAT;AACAF,MAAAA,EAAE,GAAGR,IAAI,CAACU,OAAO,GAAG,EAAX,CAAT;AACAD,MAAAA,EAAE,GAAGT,IAAI,CAACU,OAAO,GAAG,EAAX,CAAT;AAEA,UAAIsB,MAAM,GAAG9B,EAAE,GAAGO,EAAlB;AACA,UAAIwB,MAAM,GAAG/B,EAAE,GAAGO,EAAlB;AACA,UAAIyB,MAAM,GAAG/B,EAAE,GAAGK,EAAlB;AACA,UAAI2B,MAAM,GAAGhC,EAAE,GAAGK,EAAlB;AACA,UAAI4B,MAAM,GAAGhC,EAAE,GAAGG,EAAlB;AACA,UAAI8B,MAAM,GAAGjC,EAAE,GAAGG,EAAlB;AACA,UAAI+B,MAAM,GAAGjC,EAAE,GAAGC,EAAlB;AACA,UAAIiC,MAAM,GAAGlC,EAAE,GAAGC,EAAlB;AAEA;;AACA,UAAIkC,OAAO,GAAGR,MAAM,GAAGM,MAAvB;AAA+B;;AAC/B,UAAIG,OAAO,GAAGT,MAAM,GAAGM,MAAvB;AACA,UAAII,OAAO,GAAGR,MAAM,GAAGE,MAAvB;AACA,UAAIO,OAAO,GAAGT,MAAM,GAAGE,MAAvB;AAEApC,MAAAA,IAAI,CAACU,OAAD,CAAJ,GAAgB8B,OAAO,GAAGE,OAA1B;AAAmC;;AACnC1C,MAAAA,IAAI,CAACU,OAAO,GAAC,EAAT,CAAJ,GAAmB8B,OAAO,GAAGE,OAA7B;AAEA,UAAIE,IAAI,GAAG,CAACD,OAAO,GAAGF,OAAX,IAAsB,WAAjC;AAA8C;;AAC9CzC,MAAAA,IAAI,CAACU,OAAO,GAAC,EAAT,CAAJ,GAAmB+B,OAAO,GAAGG,IAA7B;AAAmC;;AACnC5C,MAAAA,IAAI,CAACU,OAAO,GAAC,EAAT,CAAJ,GAAmB+B,OAAO,GAAGG,IAA7B;AAEA;;AACAJ,MAAAA,OAAO,GAAGD,MAAM,GAAGF,MAAnB;AAA2B;;AAC3BK,MAAAA,OAAO,GAAGL,MAAM,GAAGF,MAAnB;AACAQ,MAAAA,OAAO,GAAGR,MAAM,GAAGF,MAAnB;AAEA;;AACA,UAAIY,IAAI,GAAG,CAACL,OAAO,GAAGG,OAAX,IAAsB,WAAjC;AAA8C;;AAC9C,UAAIG,IAAI,GAAG,cAAcN,OAAd,GAAwBK,IAAnC;AAAyC;;AACzC,UAAIE,IAAI,GAAG,cAAcJ,OAAd,GAAwBE,IAAnC;AAAyC;;AACzC,UAAIG,IAAI,GAAGN,OAAO,GAAG,WAArB;AAAkC;;AAElC,UAAIO,KAAK,GAAGhB,MAAM,GAAGe,IAArB;AAA2B;;AAC3B,UAAIE,KAAK,GAAGjB,MAAM,GAAGe,IAArB;AAEAhD,MAAAA,IAAI,CAACU,OAAO,GAAC,EAAT,CAAJ,GAAmBwC,KAAK,GAAGJ,IAA3B;AAAiC;;AACjC9C,MAAAA,IAAI,CAACU,OAAO,GAAC,EAAT,CAAJ,GAAmBwC,KAAK,GAAGJ,IAA3B;AACA9C,MAAAA,IAAI,CAACU,OAAO,GAAE,CAAV,CAAJ,GAAmBuC,KAAK,GAAGF,IAA3B;AACA/C,MAAAA,IAAI,CAACU,OAAO,GAAC,EAAT,CAAJ,GAAmBuC,KAAK,GAAGF,IAA3B;AAEArC,MAAAA,OAAO;AAAI;AACX,KArHF,CAuHC;;;AACA,QAAIX,SAAJ;;AACA,SAAK9B,CAAC,GAAC,CAAP,EAAUA,CAAC,GAAC2C,GAAZ,EAAiB,EAAE3C,CAAnB,EACA;AACC;AACA8B,MAAAA,SAAS,GAAGC,IAAI,CAAC/B,CAAD,CAAJ,GAAQgC,KAAK,CAAChC,CAAD,CAAzB;AACAvB,MAAAA,eAAe,CAACuB,CAAD,CAAf,GAAsB8B,SAAS,GAAG,GAAb,GAAsBA,SAAS,GAAG,GAAb,GAAkB,CAAvC,GAA8CA,SAAS,GAAG,GAAb,GAAkB,CAApF,CAHD,CAIC;AAEA;;AACD,WAAOrD,eAAP;AACA;;AAED,WAASyG,SAAT,GACA;AACCrD,IAAAA,SAAS,CAAC,MAAD,CAAT,CADD,CACoB;;AACnBA,IAAAA,SAAS,CAAC,EAAD,CAAT,CAFD,CAEgB;;AACfF,IAAAA,SAAS,CAAC,IAAD,CAAT,CAHD,CAGkB;;AACjBA,IAAAA,SAAS,CAAC,IAAD,CAAT,CAJD,CAIkB;;AACjBA,IAAAA,SAAS,CAAC,IAAD,CAAT,CALD,CAKkB;;AACjBA,IAAAA,SAAS,CAAC,IAAD,CAAT,CAND,CAMkB;;AACjBA,IAAAA,SAAS,CAAC,CAAD,CAAT,CAPD,CAOe;;AACdA,IAAAA,SAAS,CAAC,CAAD,CAAT,CARD,CAQe;;AACdA,IAAAA,SAAS,CAAC,CAAD,CAAT,CATD,CASe;;AACdA,IAAAA,SAAS,CAAC,CAAD,CAAT,CAVD,CAUe;;AACdE,IAAAA,SAAS,CAAC,CAAD,CAAT,CAXD,CAWe;;AACdA,IAAAA,SAAS,CAAC,CAAD,CAAT,CAZD,CAYe;;AACdF,IAAAA,SAAS,CAAC,CAAD,CAAT,CAbD,CAae;;AACdA,IAAAA,SAAS,CAAC,CAAD,CAAT,CAdD,CAce;AACd;;AAED,WAASwD,SAAT,CAAmBC,KAAnB,EAA0BC,MAA1B,EACA;AACCxD,IAAAA,SAAS,CAAC,MAAD,CAAT,CADD,CACoB;;AACnBA,IAAAA,SAAS,CAAC,EAAD,CAAT,CAFD,CAEkB;;AACjBF,IAAAA,SAAS,CAAC,CAAD,CAAT,CAHD,CAGkB;;AACjBE,IAAAA,SAAS,CAACwD,MAAD,CAAT;AACAxD,IAAAA,SAAS,CAACuD,KAAD,CAAT;AACAzD,IAAAA,SAAS,CAAC,CAAD,CAAT,CAND,CAMkB;;AACjBA,IAAAA,SAAS,CAAC,CAAD,CAAT,CAPD,CAOkB;;AACjBA,IAAAA,SAAS,CAAC,IAAD,CAAT,CARD,CAQkB;;AACjBA,IAAAA,SAAS,CAAC,CAAD,CAAT,CATD,CASkB;;AACjBA,IAAAA,SAAS,CAAC,CAAD,CAAT,CAVD,CAUkB;;AACjBA,IAAAA,SAAS,CAAC,IAAD,CAAT,CAXD,CAWkB;;AACjBA,IAAAA,SAAS,CAAC,CAAD,CAAT,CAZD,CAYkB;;AACjBA,IAAAA,SAAS,CAAC,CAAD,CAAT,CAbD,CAakB;;AACjBA,IAAAA,SAAS,CAAC,IAAD,CAAT,CAdD,CAckB;;AACjBA,IAAAA,SAAS,CAAC,CAAD,CAAT,CAfD,CAekB;AACjB;;AAED,WAAS2D,QAAT,GACA;AACCzD,IAAAA,SAAS,CAAC,MAAD,CAAT,CADD,CACoB;;AACnBA,IAAAA,SAAS,CAAC,GAAD,CAAT,CAFD,CAEoB;;AACnBF,IAAAA,SAAS,CAAC,CAAD,CAAT;;AACA,SAAK,IAAI3B,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;AACxB2B,MAAAA,SAAS,CAAC7D,MAAM,CAACkC,CAAD,CAAP,CAAT;AACA;;AACD2B,IAAAA,SAAS,CAAC,CAAD,CAAT;;AACA,SAAK,IAAIxB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;AACxBwB,MAAAA,SAAS,CAAC3D,OAAO,CAACmC,CAAD,CAAR,CAAT;AACA;AACD;;AAED,WAASoF,QAAT,GACA;AACC1D,IAAAA,SAAS,CAAC,MAAD,CAAT,CADD,CACoB;;AACnBA,IAAAA,SAAS,CAAC,MAAD,CAAT,CAFD,CAEoB;;AAEnBF,IAAAA,SAAS,CAAC,CAAD,CAAT,CAJD,CAIe;;AACd,SAAK,IAAI3B,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;AACxB2B,MAAAA,SAAS,CAACtC,wBAAwB,CAACW,CAAC,GAAC,CAAH,CAAzB,CAAT;AACA;;AACD,SAAK,IAAIG,CAAC,GAAC,CAAX,EAAcA,CAAC,IAAE,EAAjB,EAAqBA,CAAC,EAAtB,EAA0B;AACzBwB,MAAAA,SAAS,CAACrC,uBAAuB,CAACa,CAAD,CAAxB,CAAT;AACA;;AAEDwB,IAAAA,SAAS,CAAC,IAAD,CAAT,CAZD,CAYkB;;AACjB,SAAK,IAAIrB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;AACxBqB,MAAAA,SAAS,CAACpC,wBAAwB,CAACe,CAAC,GAAC,CAAH,CAAzB,CAAT;AACA;;AACD,SAAK,IAAIkF,CAAC,GAAC,CAAX,EAAcA,CAAC,IAAE,GAAjB,EAAsBA,CAAC,EAAvB,EAA2B;AAC1B7D,MAAAA,SAAS,CAACnC,uBAAuB,CAACgG,CAAD,CAAxB,CAAT;AACA;;AAED7D,IAAAA,SAAS,CAAC,CAAD,CAAT,CApBD,CAoBe;;AACd,SAAK,IAAI8D,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;AACxB9D,MAAAA,SAAS,CAAClC,0BAA0B,CAACgG,CAAC,GAAC,CAAH,CAA3B,CAAT;AACA;;AACD,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,IAAE,EAAjB,EAAqBA,CAAC,EAAtB,EAA0B;AACzB/D,MAAAA,SAAS,CAACjC,yBAAyB,CAACgG,CAAD,CAA1B,CAAT;AACA;;AAED/D,IAAAA,SAAS,CAAC,IAAD,CAAT,CA5BD,CA4BkB;;AACjB,SAAK,IAAIgE,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;AACxBhE,MAAAA,SAAS,CAAChC,0BAA0B,CAACgG,CAAC,GAAC,CAAH,CAA3B,CAAT;AACA;;AACD,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,IAAE,GAAjB,EAAsBA,CAAC,EAAvB,EAA2B;AAC1BjE,MAAAA,SAAS,CAAC/B,yBAAyB,CAACgG,CAAD,CAA1B,CAAT;AACA;AACD;;AAED,WAASC,QAAT,GACA;AACChE,IAAAA,SAAS,CAAC,MAAD,CAAT,CADD,CACoB;;AACnBA,IAAAA,SAAS,CAAC,EAAD,CAAT,CAFD,CAEgB;;AACfF,IAAAA,SAAS,CAAC,CAAD,CAAT,CAHD,CAGe;;AACdA,IAAAA,SAAS,CAAC,CAAD,CAAT,CAJD,CAIe;;AACdA,IAAAA,SAAS,CAAC,CAAD,CAAT,CALD,CAKe;;AACdA,IAAAA,SAAS,CAAC,CAAD,CAAT,CAND,CAMe;;AACdA,IAAAA,SAAS,CAAC,IAAD,CAAT,CAPD,CAOkB;;AACjBA,IAAAA,SAAS,CAAC,CAAD,CAAT,CARD,CAQe;;AACdA,IAAAA,SAAS,CAAC,IAAD,CAAT,CATD,CASkB;;AACjBA,IAAAA,SAAS,CAAC,CAAD,CAAT,CAVD,CAUe;;AACdA,IAAAA,SAAS,CAAC,IAAD,CAAT,CAXD,CAWkB;;AACjBA,IAAAA,SAAS,CAAC,CAAD,CAAT,CAZD,CAYe;AACd;;AAED,WAASmE,SAAT,CAAmBC,GAAnB,EAAwB/D,KAAxB,EAA+BgE,EAA/B,EAAmCC,IAAnC,EAAyCC,IAAzC,EAA8C;AAC7C,QAAIC,GAAG,GAAGD,IAAI,CAAC,IAAD,CAAd;AACA,QAAIE,SAAS,GAAGF,IAAI,CAAC,IAAD,CAApB;AACA,QAAIG,GAAJ;AACA,QAAIC,GAAG,GAAG,EAAV;AACA,QAAIC,GAAG,GAAG,EAAV;AACA,QAAI5D,GAAG,GAAG,EAAV;AACA,QAAI6D,MAAM,GAAG1E,SAAS,CAACiE,GAAD,EAAM/D,KAAN,CAAtB,CAP6C,CAQ7C;;AACA,SAAK,IAAI7B,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACwC,GAAf,EAAmB,EAAExC,CAArB,EAAwB;AACvBzB,MAAAA,EAAE,CAACU,MAAM,CAACe,CAAD,CAAP,CAAF,GAAcqG,MAAM,CAACrG,CAAD,CAApB;AACA;;AACD,QAAIsG,IAAI,GAAG/H,EAAE,CAAC,CAAD,CAAF,GAAQsH,EAAnB;AAAuBA,IAAAA,EAAE,GAAGtH,EAAE,CAAC,CAAD,CAAP,CAZsB,CAa7C;;AACA,QAAI+H,IAAI,IAAE,CAAV,EAAa;AACZlF,MAAAA,SAAS,CAAC0E,IAAI,CAAC,CAAD,CAAL,CAAT,CADY,CACQ;AACpB,KAFD,MAEO;AACNI,MAAAA,GAAG,GAAG,QAAMI,IAAZ;AACAlF,MAAAA,SAAS,CAAC0E,IAAI,CAACzH,QAAQ,CAAC6H,GAAD,CAAT,CAAL,CAAT;AACA9E,MAAAA,SAAS,CAAChD,OAAO,CAAC8H,GAAD,CAAR,CAAT;AACA,KApB4C,CAqB7C;;;AACA,QAAIK,OAAO,GAAG,EAAd,CAtB6C,CAsB3B;;AAClB,WAAQA,OAAO,GAAC,CAAT,IAAchI,EAAE,CAACgI,OAAD,CAAF,IAAa,CAAlC,EAAsCA,OAAO,EAA7C,EAAiD,CAAE;;AAAA,KAvBN,CAwB7C;;AACA,QAAKA,OAAO,IAAI,CAAhB,EAAmB;AAClBnF,MAAAA,SAAS,CAAC4E,GAAD,CAAT;AACA,aAAOH,EAAP;AACA;;AACD,QAAIhG,CAAC,GAAG,CAAR;AACA,QAAI2G,GAAJ;;AACA,WAAQ3G,CAAC,IAAI0G,OAAb,EAAuB;AACtB,UAAIE,QAAQ,GAAG5G,CAAf;;AACA,aAAQtB,EAAE,CAACsB,CAAD,CAAF,IAAO,CAAR,IAAeA,CAAC,IAAE0G,OAAzB,EAAmC,EAAE1G,CAArC,EAAwC,CAAE;;AAC1C,UAAI6G,QAAQ,GAAG7G,CAAC,GAAC4G,QAAjB;;AACA,UAAKC,QAAQ,IAAIP,GAAjB,EAAuB;AACtBK,QAAAA,GAAG,GAAGE,QAAQ,IAAE,CAAhB;;AACA,aAAK,IAAIC,QAAQ,GAAC,CAAlB,EAAqBA,QAAQ,IAAIH,GAAjC,EAAsC,EAAEG,QAAxC;AACCvF,UAAAA,SAAS,CAAC6E,SAAD,CAAT;AADD;;AAEAS,QAAAA,QAAQ,GAAGA,QAAQ,GAAC,GAApB;AACA;;AACDR,MAAAA,GAAG,GAAG,QAAM3H,EAAE,CAACsB,CAAD,CAAd;AACAuB,MAAAA,SAAS,CAAC2E,IAAI,CAAC,CAACW,QAAQ,IAAE,CAAX,IAAcrI,QAAQ,CAAC6H,GAAD,CAAvB,CAAL,CAAT;AACA9E,MAAAA,SAAS,CAAChD,OAAO,CAAC8H,GAAD,CAAR,CAAT;AACArG,MAAAA,CAAC;AACD;;AACD,QAAK0G,OAAO,IAAIH,GAAhB,EAAsB;AACrBhF,MAAAA,SAAS,CAAC4E,GAAD,CAAT;AACA;;AACD,WAAOH,EAAP;AACA;;AAED,WAASe,mBAAT,GAA8B;AAC7B,QAAIC,IAAI,GAAGC,MAAM,CAACC,YAAlB;;AACA,SAAI,IAAIlH,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAG,GAAjB,EAAsBA,CAAC,EAAvB,EAA0B;AAAE;AAC3Bf,MAAAA,GAAG,CAACe,CAAD,CAAH,GAASgH,IAAI,CAAChH,CAAD,CAAb;AACA;AACD;;AAED,OAAKmH,MAAL,GAAc,UAASC,KAAT,EAAe7J,OAAf,EAAwB;AACtC;AACC,QAAI8J,UAAU,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAjB;AAEA,QAAGhK,OAAH,EAAYiK,UAAU,CAACjK,OAAD,CAAV,CAHb,CAKC;;AACAoB,IAAAA,OAAO,GAAG,IAAIZ,KAAJ,EAAV;AACAa,IAAAA,OAAO,GAAC,CAAR;AACAC,IAAAA,OAAO,GAAC,CAAR,CARD,CAUC;;AACAgD,IAAAA,SAAS,CAAC,MAAD,CAAT,CAXD,CAWoB;;AACnBqD,IAAAA,SAAS;AACTI,IAAAA,QAAQ;AACRH,IAAAA,SAAS,CAACiC,KAAK,CAAChC,KAAP,EAAagC,KAAK,CAAC/B,MAAnB,CAAT;AACAE,IAAAA,QAAQ;AACRM,IAAAA,QAAQ,GAhBT,CAmBC;;AACA,QAAI4B,GAAG,GAAC,CAAR;AACA,QAAIC,GAAG,GAAC,CAAR;AACA,QAAIC,GAAG,GAAC,CAAR;AAEA/I,IAAAA,OAAO,GAAC,CAAR;AACAC,IAAAA,OAAO,GAAC,CAAR;AAGA,SAAKsI,MAAL,CAAYS,WAAZ,GAA0B,UAA1B;AAEA,QAAIC,SAAS,GAAGT,KAAK,CAACrF,IAAtB;AACA,QAAIqD,KAAK,GAAGgC,KAAK,CAAChC,KAAlB;AACA,QAAIC,MAAM,GAAG+B,KAAK,CAAC/B,MAAnB;AAEA,QAAIyC,SAAS,GAAG1C,KAAK,GAAC,CAAtB;AACA,QAAI2C,WAAW,GAAG3C,KAAK,GAAC,CAAxB;AAEA,QAAI4C,CAAJ;AAAA,QAAOC,CAAC,GAAG,CAAX;AACA,QAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV;AACA,QAAIC,KAAJ,EAAUzC,CAAV,EAAapF,GAAb,EAAiBD,GAAjB,EAAqB8F,GAArB;;AACA,WAAM4B,CAAC,GAAG5C,MAAV,EAAiB;AAChB2C,MAAAA,CAAC,GAAG,CAAJ;;AACA,aAAMA,CAAC,GAAGF,SAAV,EAAoB;AACpBO,QAAAA,KAAK,GAAGP,SAAS,GAAGG,CAAZ,GAAgBD,CAAxB;AACApC,QAAAA,CAAC,GAAGyC,KAAJ;AACA7H,QAAAA,GAAG,GAAG,CAAC,CAAP;AACAD,QAAAA,GAAG,GAAG,CAAN;;AAEA,aAAI8F,GAAG,GAAC,CAAR,EAAWA,GAAG,GAAG,EAAjB,EAAqBA,GAAG,EAAxB,EAA2B;AAC1B9F,UAAAA,GAAG,GAAG8F,GAAG,IAAI,CAAb,CAD0B,CACX;;AACf7F,UAAAA,GAAG,GAAG,CAAE6F,GAAG,GAAG,CAAR,IAAc,CAApB,CAF0B,CAEH;;AACvBT,UAAAA,CAAC,GAAGyC,KAAK,GAAK9H,GAAG,GAAGuH,SAAhB,GAA8BtH,GAAlC;;AAEA,cAAGyH,CAAC,GAAC1H,GAAF,IAAS8E,MAAZ,EAAmB;AAAE;AACpBO,YAAAA,CAAC,IAAIkC,SAAS,IAAEG,CAAC,GAAC,CAAF,GAAI1H,GAAJ,GAAQ8E,MAAV,CAAd;AACA;;AAED,cAAG2C,CAAC,GAACxH,GAAF,IAASsH,SAAZ,EAAsB;AAAE;AACvBlC,YAAAA,CAAC,IAAKoC,CAAC,GAACxH,GAAH,GAAUsH,SAAV,GAAqB,CAA1B;AACA;;AAEDI,UAAAA,CAAC,GAAGL,SAAS,CAAEjC,CAAC,EAAH,CAAb;AACAuC,UAAAA,CAAC,GAAGN,SAAS,CAAEjC,CAAC,EAAH,CAAb;AACAwC,UAAAA,CAAC,GAAGP,SAAS,CAAEjC,CAAC,EAAH,CAAb;AAGA;AACL;AACA;AACA;AACA;AAEK;;AACA9G,UAAAA,GAAG,CAACuH,GAAD,CAAH,GAAW,CAAEnH,aAAa,CAACgJ,CAAD,CAAb,GAA+BhJ,aAAa,CAAEiJ,CAAC,GAAI,GAAN,IAAY,CAAb,CAA5C,GAA8DjJ,aAAa,CAAEkJ,CAAC,GAAI,GAAN,IAAY,CAAb,CAA5E,IAAgG,EAAjG,IAAqG,GAAhH;AACArJ,UAAAA,GAAG,CAACsH,GAAD,CAAH,GAAW,CAAEnH,aAAa,CAAEgJ,CAAC,GAAI,GAAN,IAAY,CAAb,CAAb,GAA+BhJ,aAAa,CAAEiJ,CAAC,GAAG,IAAL,IAAY,CAAb,CAA5C,GAA8DjJ,aAAa,CAAEkJ,CAAC,GAAG,IAAL,IAAY,CAAb,CAA5E,IAAgG,EAAjG,IAAqG,GAAhH;AACApJ,UAAAA,GAAG,CAACqH,GAAD,CAAH,GAAW,CAAEnH,aAAa,CAAEgJ,CAAC,GAAG,IAAL,IAAY,CAAb,CAAb,GAA+BhJ,aAAa,CAAEiJ,CAAC,GAAG,IAAL,IAAY,CAAb,CAA5C,GAA8DjJ,aAAa,CAAEkJ,CAAC,GAAG,IAAL,IAAY,CAAb,CAA5E,IAAgG,EAAjG,IAAqG,GAAhH;AAEA;;AAEDX,QAAAA,GAAG,GAAG3B,SAAS,CAAChH,GAAD,EAAMb,OAAN,EAAewJ,GAAf,EAAoBtJ,MAApB,EAA4BE,MAA5B,CAAf;AACAqJ,QAAAA,GAAG,GAAG5B,SAAS,CAAC/G,GAAD,EAAMb,QAAN,EAAgBwJ,GAAhB,EAAqBtJ,OAArB,EAA8BE,OAA9B,CAAf;AACAqJ,QAAAA,GAAG,GAAG7B,SAAS,CAAC9G,GAAD,EAAMd,QAAN,EAAgByJ,GAAhB,EAAqBvJ,OAArB,EAA8BE,OAA9B,CAAf;AACA0J,QAAAA,CAAC,IAAE,EAAH;AACC;;AACDC,MAAAA,CAAC,IAAE,CAAH;AACA,KArFF,CAwFC;AAEA;;;AACA,QAAKpJ,OAAO,IAAI,CAAhB,EAAoB;AACnB,UAAIyJ,QAAQ,GAAG,EAAf;AACAA,MAAAA,QAAQ,CAAC,CAAD,CAAR,GAAczJ,OAAO,GAAC,CAAtB;AACAyJ,MAAAA,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAC,KAAIzJ,OAAO,GAAC,CAAb,IAAiB,CAA/B;AACA0C,MAAAA,SAAS,CAAC+G,QAAD,CAAT;AACA;;AAEDzG,IAAAA,SAAS,CAAC,MAAD,CAAT,CAlGD,CAkGoB;AAEhB;;AACA,WAAO,IAAIzE,MAAJ,CAAWuB,OAAX,CAAP;AAEH,QAAI4J,WAAW,GAAG,4BAA4BrL,IAAI,CAACyB,OAAO,CAAC6J,IAAR,CAAa,EAAb,CAAD,CAAlD;AAEA7J,IAAAA,OAAO,GAAG,EAAV,CAzGD,CA2GC;;AACA,QAAI8J,QAAQ,GAAG,IAAInB,IAAJ,GAAWC,OAAX,KAAuBF,UAAtC,CA5GD,CA6GI;AACA;;AAEH,WAAOkB,WAAP;AACD,GAlHA;;AAoHD,WAASf,UAAT,CAAoBjK,OAApB,EAA4B;AAC3B,QAAIA,OAAO,IAAI,CAAf,EAAkB;AACjBA,MAAAA,OAAO,GAAG,CAAV;AACA;;AACD,QAAIA,OAAO,GAAG,GAAd,EAAmB;AAClBA,MAAAA,OAAO,GAAG,GAAV;AACA;;AAED,QAAG4B,cAAc,IAAI5B,OAArB,EAA8B,OARH,CAQU;;AAErC,QAAIuC,EAAE,GAAG,CAAT;;AACA,QAAIvC,OAAO,GAAG,EAAd,EAAkB;AACjBuC,MAAAA,EAAE,GAAGpC,IAAI,CAACG,KAAL,CAAW,OAAON,OAAlB,CAAL;AACA,KAFD,MAEO;AACNuC,MAAAA,EAAE,GAAGpC,IAAI,CAACG,KAAL,CAAW,MAAMN,OAAO,GAAC,CAAzB,CAAL;AACA;;AAEDsC,IAAAA,eAAe,CAACC,EAAD,CAAf;AACAX,IAAAA,cAAc,GAAG5B,OAAjB,CAlB2B,CAmB3B;AACA;;AAED,WAASmL,IAAT,GAAe;AACd,QAAIrB,UAAU,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAjB;AACA,QAAG,CAAChK,OAAJ,EAAaA,OAAO,GAAG,EAAV,CAFC,CAGd;;AACAwJ,IAAAA,mBAAmB;AACnBhG,IAAAA,cAAc;AACdC,IAAAA,kBAAkB;AAClBM,IAAAA,eAAe;AAEfkG,IAAAA,UAAU,CAACjK,OAAD,CAAV;AACA,QAAIkL,QAAQ,GAAG,IAAInB,IAAJ,GAAWC,OAAX,KAAuBF,UAAtC,CAVc,CAWX;AACH;;AAEDqB,EAAAA,IAAI;AAEJ;;AAAA;;AACD,IAAI,OAAOC,MAAP,KAAkBC,SAAtB,EAAiC;AAChCD,EAAAA,MAAM,CAACE,OAAP,GAAiB1B,MAAjB;AACA;;AAED,SAASA,MAAT,CAAgB2B,OAAhB,EAAyBC,EAAzB,EAA6B;AAC3B,MAAI,OAAOA,EAAP,KAAc,WAAlB,EAA+BA,EAAE,GAAG,EAAL;AAC/B,MAAIC,OAAO,GAAG,IAAI1L,WAAJ,CAAgByL,EAAhB,CAAd;AACD,MAAIhH,IAAI,GAAGiH,OAAO,CAAC7B,MAAR,CAAe2B,OAAf,EAAwBC,EAAxB,CAAX;AACC,SAAO;AACLhH,IAAAA,IAAI,EAAEA,IADD;AAELqD,IAAAA,KAAK,EAAE0D,OAAO,CAAC1D,KAFV;AAGLC,IAAAA,MAAM,EAAEyD,OAAO,CAACzD;AAHX,GAAP;AAKD,C,CAED;;;AACA,SAAS4D,qBAAT,CAA+BC,WAA/B,EAA2C;AAC1C,MAAIC,MAAM,GAAI,OAAOD,WAAP,IAAqB,QAAtB,GAAiCE,QAAQ,CAACC,cAAT,CAAwBH,WAAxB,CAAjC,GAAsEA,WAAnF;AACA,MAAII,GAAG,GAAGF,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAV;AACAD,EAAAA,GAAG,CAAClE,KAAJ,GAAY+D,MAAM,CAAC/D,KAAnB;AACAkE,EAAAA,GAAG,CAACjE,MAAJ,GAAa8D,MAAM,CAAC9D,MAApB;AACA,MAAImE,GAAG,GAAGF,GAAG,CAACG,UAAJ,CAAe,IAAf,CAAV;AACAD,EAAAA,GAAG,CAACE,SAAJ,CAAcP,MAAd,EAAqB,CAArB,EAAuB,CAAvB;AAEA,SAAQK,GAAG,CAACG,YAAJ,CAAiB,CAAjB,EAAoB,CAApB,EAAuBL,GAAG,CAAClE,KAA3B,EAAkCkE,GAAG,CAACjE,MAAtC,CAAR;AACA","sourcesContent":["/*\n  Copyright (c) 2008, Adobe Systems Incorporated\n  All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without \n  modification, are permitted provided that the following conditions are\n  met:\n\n  * Redistributions of source code must retain the above copyright notice, \n    this list of conditions and the following disclaimer.\n  \n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the \n    documentation and/or other materials provided with the distribution.\n  \n  * Neither the name of Adobe Systems Incorporated nor the names of its \n    contributors may be used to endorse or promote products derived from \n    this software without specific prior written permission.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n  IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR \n  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/*\nJPEG encoder ported to JavaScript and optimized by Andreas Ritter, www.bytestrom.eu, 11/2009\n\nBasic GUI blocking jpeg encoder\n*/\n\nvar btoa = btoa || function(buf) {\n  return new Buffer(buf).toString('base64');\n};\n\nfunction JPEGEncoder(quality) {\n  var self = this;\n\tvar fround = Math.round;\n\tvar ffloor = Math.floor;\n\tvar YTable = new Array(64);\n\tvar UVTable = new Array(64);\n\tvar fdtbl_Y = new Array(64);\n\tvar fdtbl_UV = new Array(64);\n\tvar YDC_HT;\n\tvar UVDC_HT;\n\tvar YAC_HT;\n\tvar UVAC_HT;\n\t\n\tvar bitcode = new Array(65535);\n\tvar category = new Array(65535);\n\tvar outputfDCTQuant = new Array(64);\n\tvar DU = new Array(64);\n\tvar byteout = [];\n\tvar bytenew = 0;\n\tvar bytepos = 7;\n\t\n\tvar YDU = new Array(64);\n\tvar UDU = new Array(64);\n\tvar VDU = new Array(64);\n\tvar clt = new Array(256);\n\tvar RGB_YUV_TABLE = new Array(2048);\n\tvar currentQuality;\n\t\n\tvar ZigZag = [\n\t\t\t 0, 1, 5, 6,14,15,27,28,\n\t\t\t 2, 4, 7,13,16,26,29,42,\n\t\t\t 3, 8,12,17,25,30,41,43,\n\t\t\t 9,11,18,24,31,40,44,53,\n\t\t\t10,19,23,32,39,45,52,54,\n\t\t\t20,22,33,38,46,51,55,60,\n\t\t\t21,34,37,47,50,56,59,61,\n\t\t\t35,36,48,49,57,58,62,63\n\t\t];\n\t\n\tvar std_dc_luminance_nrcodes = [0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0];\n\tvar std_dc_luminance_values = [0,1,2,3,4,5,6,7,8,9,10,11];\n\tvar std_ac_luminance_nrcodes = [0,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,0x7d];\n\tvar std_ac_luminance_values = [\n\t\t\t0x01,0x02,0x03,0x00,0x04,0x11,0x05,0x12,\n\t\t\t0x21,0x31,0x41,0x06,0x13,0x51,0x61,0x07,\n\t\t\t0x22,0x71,0x14,0x32,0x81,0x91,0xa1,0x08,\n\t\t\t0x23,0x42,0xb1,0xc1,0x15,0x52,0xd1,0xf0,\n\t\t\t0x24,0x33,0x62,0x72,0x82,0x09,0x0a,0x16,\n\t\t\t0x17,0x18,0x19,0x1a,0x25,0x26,0x27,0x28,\n\t\t\t0x29,0x2a,0x34,0x35,0x36,0x37,0x38,0x39,\n\t\t\t0x3a,0x43,0x44,0x45,0x46,0x47,0x48,0x49,\n\t\t\t0x4a,0x53,0x54,0x55,0x56,0x57,0x58,0x59,\n\t\t\t0x5a,0x63,0x64,0x65,0x66,0x67,0x68,0x69,\n\t\t\t0x6a,0x73,0x74,0x75,0x76,0x77,0x78,0x79,\n\t\t\t0x7a,0x83,0x84,0x85,0x86,0x87,0x88,0x89,\n\t\t\t0x8a,0x92,0x93,0x94,0x95,0x96,0x97,0x98,\n\t\t\t0x99,0x9a,0xa2,0xa3,0xa4,0xa5,0xa6,0xa7,\n\t\t\t0xa8,0xa9,0xaa,0xb2,0xb3,0xb4,0xb5,0xb6,\n\t\t\t0xb7,0xb8,0xb9,0xba,0xc2,0xc3,0xc4,0xc5,\n\t\t\t0xc6,0xc7,0xc8,0xc9,0xca,0xd2,0xd3,0xd4,\n\t\t\t0xd5,0xd6,0xd7,0xd8,0xd9,0xda,0xe1,0xe2,\n\t\t\t0xe3,0xe4,0xe5,0xe6,0xe7,0xe8,0xe9,0xea,\n\t\t\t0xf1,0xf2,0xf3,0xf4,0xf5,0xf6,0xf7,0xf8,\n\t\t\t0xf9,0xfa\n\t\t];\n\t\n\tvar std_dc_chrominance_nrcodes = [0,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0];\n\tvar std_dc_chrominance_values = [0,1,2,3,4,5,6,7,8,9,10,11];\n\tvar std_ac_chrominance_nrcodes = [0,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,0x77];\n\tvar std_ac_chrominance_values = [\n\t\t\t0x00,0x01,0x02,0x03,0x11,0x04,0x05,0x21,\n\t\t\t0x31,0x06,0x12,0x41,0x51,0x07,0x61,0x71,\n\t\t\t0x13,0x22,0x32,0x81,0x08,0x14,0x42,0x91,\n\t\t\t0xa1,0xb1,0xc1,0x09,0x23,0x33,0x52,0xf0,\n\t\t\t0x15,0x62,0x72,0xd1,0x0a,0x16,0x24,0x34,\n\t\t\t0xe1,0x25,0xf1,0x17,0x18,0x19,0x1a,0x26,\n\t\t\t0x27,0x28,0x29,0x2a,0x35,0x36,0x37,0x38,\n\t\t\t0x39,0x3a,0x43,0x44,0x45,0x46,0x47,0x48,\n\t\t\t0x49,0x4a,0x53,0x54,0x55,0x56,0x57,0x58,\n\t\t\t0x59,0x5a,0x63,0x64,0x65,0x66,0x67,0x68,\n\t\t\t0x69,0x6a,0x73,0x74,0x75,0x76,0x77,0x78,\n\t\t\t0x79,0x7a,0x82,0x83,0x84,0x85,0x86,0x87,\n\t\t\t0x88,0x89,0x8a,0x92,0x93,0x94,0x95,0x96,\n\t\t\t0x97,0x98,0x99,0x9a,0xa2,0xa3,0xa4,0xa5,\n\t\t\t0xa6,0xa7,0xa8,0xa9,0xaa,0xb2,0xb3,0xb4,\n\t\t\t0xb5,0xb6,0xb7,0xb8,0xb9,0xba,0xc2,0xc3,\n\t\t\t0xc4,0xc5,0xc6,0xc7,0xc8,0xc9,0xca,0xd2,\n\t\t\t0xd3,0xd4,0xd5,0xd6,0xd7,0xd8,0xd9,0xda,\n\t\t\t0xe2,0xe3,0xe4,0xe5,0xe6,0xe7,0xe8,0xe9,\n\t\t\t0xea,0xf2,0xf3,0xf4,0xf5,0xf6,0xf7,0xf8,\n\t\t\t0xf9,0xfa\n\t\t];\n\t\n\tfunction initQuantTables(sf){\n\t\t\tvar YQT = [\n\t\t\t\t16, 11, 10, 16, 24, 40, 51, 61,\n\t\t\t\t12, 12, 14, 19, 26, 58, 60, 55,\n\t\t\t\t14, 13, 16, 24, 40, 57, 69, 56,\n\t\t\t\t14, 17, 22, 29, 51, 87, 80, 62,\n\t\t\t\t18, 22, 37, 56, 68,109,103, 77,\n\t\t\t\t24, 35, 55, 64, 81,104,113, 92,\n\t\t\t\t49, 64, 78, 87,103,121,120,101,\n\t\t\t\t72, 92, 95, 98,112,100,103, 99\n\t\t\t];\n\t\t\t\n\t\t\tfor (var i = 0; i < 64; i++) {\n\t\t\t\tvar t = ffloor((YQT[i]*sf+50)/100);\n\t\t\t\tif (t < 1) {\n\t\t\t\t\tt = 1;\n\t\t\t\t} else if (t > 255) {\n\t\t\t\t\tt = 255;\n\t\t\t\t}\n\t\t\t\tYTable[ZigZag[i]] = t;\n\t\t\t}\n\t\t\tvar UVQT = [\n\t\t\t\t17, 18, 24, 47, 99, 99, 99, 99,\n\t\t\t\t18, 21, 26, 66, 99, 99, 99, 99,\n\t\t\t\t24, 26, 56, 99, 99, 99, 99, 99,\n\t\t\t\t47, 66, 99, 99, 99, 99, 99, 99,\n\t\t\t\t99, 99, 99, 99, 99, 99, 99, 99,\n\t\t\t\t99, 99, 99, 99, 99, 99, 99, 99,\n\t\t\t\t99, 99, 99, 99, 99, 99, 99, 99,\n\t\t\t\t99, 99, 99, 99, 99, 99, 99, 99\n\t\t\t];\n\t\t\tfor (var j = 0; j < 64; j++) {\n\t\t\t\tvar u = ffloor((UVQT[j]*sf+50)/100);\n\t\t\t\tif (u < 1) {\n\t\t\t\t\tu = 1;\n\t\t\t\t} else if (u > 255) {\n\t\t\t\t\tu = 255;\n\t\t\t\t}\n\t\t\t\tUVTable[ZigZag[j]] = u;\n\t\t\t}\n\t\t\tvar aasf = [\n\t\t\t\t1.0, 1.387039845, 1.306562965, 1.175875602,\n\t\t\t\t1.0, 0.785694958, 0.541196100, 0.275899379\n\t\t\t];\n\t\t\tvar k = 0;\n\t\t\tfor (var row = 0; row < 8; row++)\n\t\t\t{\n\t\t\t\tfor (var col = 0; col < 8; col++)\n\t\t\t\t{\n\t\t\t\t\tfdtbl_Y[k]  = (1.0 / (YTable [ZigZag[k]] * aasf[row] * aasf[col] * 8.0));\n\t\t\t\t\tfdtbl_UV[k] = (1.0 / (UVTable[ZigZag[k]] * aasf[row] * aasf[col] * 8.0));\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction computeHuffmanTbl(nrcodes, std_table){\n\t\t\tvar codevalue = 0;\n\t\t\tvar pos_in_table = 0;\n\t\t\tvar HT = new Array();\n\t\t\tfor (var k = 1; k <= 16; k++) {\n\t\t\t\tfor (var j = 1; j <= nrcodes[k]; j++) {\n\t\t\t\t\tHT[std_table[pos_in_table]] = [];\n\t\t\t\t\tHT[std_table[pos_in_table]][0] = codevalue;\n\t\t\t\t\tHT[std_table[pos_in_table]][1] = k;\n\t\t\t\t\tpos_in_table++;\n\t\t\t\t\tcodevalue++;\n\t\t\t\t}\n\t\t\t\tcodevalue*=2;\n\t\t\t}\n\t\t\treturn HT;\n\t\t}\n\t\t\n\t\tfunction initHuffmanTbl()\n\t\t{\n\t\t\tYDC_HT = computeHuffmanTbl(std_dc_luminance_nrcodes,std_dc_luminance_values);\n\t\t\tUVDC_HT = computeHuffmanTbl(std_dc_chrominance_nrcodes,std_dc_chrominance_values);\n\t\t\tYAC_HT = computeHuffmanTbl(std_ac_luminance_nrcodes,std_ac_luminance_values);\n\t\t\tUVAC_HT = computeHuffmanTbl(std_ac_chrominance_nrcodes,std_ac_chrominance_values);\n\t\t}\n\t\n\t\tfunction initCategoryNumber()\n\t\t{\n\t\t\tvar nrlower = 1;\n\t\t\tvar nrupper = 2;\n\t\t\tfor (var cat = 1; cat <= 15; cat++) {\n\t\t\t\t//Positive numbers\n\t\t\t\tfor (var nr = nrlower; nr<nrupper; nr++) {\n\t\t\t\t\tcategory[32767+nr] = cat;\n\t\t\t\t\tbitcode[32767+nr] = [];\n\t\t\t\t\tbitcode[32767+nr][1] = cat;\n\t\t\t\t\tbitcode[32767+nr][0] = nr;\n\t\t\t\t}\n\t\t\t\t//Negative numbers\n\t\t\t\tfor (var nrneg =-(nrupper-1); nrneg<=-nrlower; nrneg++) {\n\t\t\t\t\tcategory[32767+nrneg] = cat;\n\t\t\t\t\tbitcode[32767+nrneg] = [];\n\t\t\t\t\tbitcode[32767+nrneg][1] = cat;\n\t\t\t\t\tbitcode[32767+nrneg][0] = nrupper-1+nrneg;\n\t\t\t\t}\n\t\t\t\tnrlower <<= 1;\n\t\t\t\tnrupper <<= 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction initRGBYUVTable() {\n\t\t\tfor(var i = 0; i < 256;i++) {\n\t\t\t\tRGB_YUV_TABLE[i]      \t\t=  19595 * i;\n\t\t\t\tRGB_YUV_TABLE[(i+ 256)>>0] \t=  38470 * i;\n\t\t\t\tRGB_YUV_TABLE[(i+ 512)>>0] \t=   7471 * i + 0x8000;\n\t\t\t\tRGB_YUV_TABLE[(i+ 768)>>0] \t= -11059 * i;\n\t\t\t\tRGB_YUV_TABLE[(i+1024)>>0] \t= -21709 * i;\n\t\t\t\tRGB_YUV_TABLE[(i+1280)>>0] \t=  32768 * i + 0x807FFF;\n\t\t\t\tRGB_YUV_TABLE[(i+1536)>>0] \t= -27439 * i;\n\t\t\t\tRGB_YUV_TABLE[(i+1792)>>0] \t= - 5329 * i;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// IO functions\n\t\tfunction writeBits(bs)\n\t\t{\n\t\t\tvar value = bs[0];\n\t\t\tvar posval = bs[1]-1;\n\t\t\twhile ( posval >= 0 ) {\n\t\t\t\tif (value & (1 << posval) ) {\n\t\t\t\t\tbytenew |= (1 << bytepos);\n\t\t\t\t}\n\t\t\t\tposval--;\n\t\t\t\tbytepos--;\n\t\t\t\tif (bytepos < 0) {\n\t\t\t\t\tif (bytenew == 0xFF) {\n\t\t\t\t\t\twriteByte(0xFF);\n\t\t\t\t\t\twriteByte(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\twriteByte(bytenew);\n\t\t\t\t\t}\n\t\t\t\t\tbytepos=7;\n\t\t\t\t\tbytenew=0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tfunction writeByte(value)\n\t\t{\n\t\t\t//byteout.push(clt[value]); // write char directly instead of converting later\n      byteout.push(value);\n\t\t}\n\t\n\t\tfunction writeWord(value)\n\t\t{\n\t\t\twriteByte((value>>8)&0xFF);\n\t\t\twriteByte((value   )&0xFF);\n\t\t}\n\t\t\n\t\t// DCT & quantization core\n\t\tfunction fDCTQuant(data, fdtbl)\n\t\t{\n\t\t\tvar d0, d1, d2, d3, d4, d5, d6, d7;\n\t\t\t/* Pass 1: process rows. */\n\t\t\tvar dataOff=0;\n\t\t\tvar i;\n\t\t\tvar I8 = 8;\n\t\t\tvar I64 = 64;\n\t\t\tfor (i=0; i<I8; ++i)\n\t\t\t{\n\t\t\t\td0 = data[dataOff];\n\t\t\t\td1 = data[dataOff+1];\n\t\t\t\td2 = data[dataOff+2];\n\t\t\t\td3 = data[dataOff+3];\n\t\t\t\td4 = data[dataOff+4];\n\t\t\t\td5 = data[dataOff+5];\n\t\t\t\td6 = data[dataOff+6];\n\t\t\t\td7 = data[dataOff+7];\n\t\t\t\t\n\t\t\t\tvar tmp0 = d0 + d7;\n\t\t\t\tvar tmp7 = d0 - d7;\n\t\t\t\tvar tmp1 = d1 + d6;\n\t\t\t\tvar tmp6 = d1 - d6;\n\t\t\t\tvar tmp2 = d2 + d5;\n\t\t\t\tvar tmp5 = d2 - d5;\n\t\t\t\tvar tmp3 = d3 + d4;\n\t\t\t\tvar tmp4 = d3 - d4;\n\t\n\t\t\t\t/* Even part */\n\t\t\t\tvar tmp10 = tmp0 + tmp3;\t/* phase 2 */\n\t\t\t\tvar tmp13 = tmp0 - tmp3;\n\t\t\t\tvar tmp11 = tmp1 + tmp2;\n\t\t\t\tvar tmp12 = tmp1 - tmp2;\n\t\n\t\t\t\tdata[dataOff] = tmp10 + tmp11; /* phase 3 */\n\t\t\t\tdata[dataOff+4] = tmp10 - tmp11;\n\t\n\t\t\t\tvar z1 = (tmp12 + tmp13) * 0.707106781; /* c4 */\n\t\t\t\tdata[dataOff+2] = tmp13 + z1; /* phase 5 */\n\t\t\t\tdata[dataOff+6] = tmp13 - z1;\n\t\n\t\t\t\t/* Odd part */\n\t\t\t\ttmp10 = tmp4 + tmp5; /* phase 2 */\n\t\t\t\ttmp11 = tmp5 + tmp6;\n\t\t\t\ttmp12 = tmp6 + tmp7;\n\t\n\t\t\t\t/* The rotator is modified from fig 4-8 to avoid extra negations. */\n\t\t\t\tvar z5 = (tmp10 - tmp12) * 0.382683433; /* c6 */\n\t\t\t\tvar z2 = 0.541196100 * tmp10 + z5; /* c2-c6 */\n\t\t\t\tvar z4 = 1.306562965 * tmp12 + z5; /* c2+c6 */\n\t\t\t\tvar z3 = tmp11 * 0.707106781; /* c4 */\n\t\n\t\t\t\tvar z11 = tmp7 + z3;\t/* phase 5 */\n\t\t\t\tvar z13 = tmp7 - z3;\n\t\n\t\t\t\tdata[dataOff+5] = z13 + z2;\t/* phase 6 */\n\t\t\t\tdata[dataOff+3] = z13 - z2;\n\t\t\t\tdata[dataOff+1] = z11 + z4;\n\t\t\t\tdata[dataOff+7] = z11 - z4;\n\t\n\t\t\t\tdataOff += 8; /* advance pointer to next row */\n\t\t\t}\n\t\n\t\t\t/* Pass 2: process columns. */\n\t\t\tdataOff = 0;\n\t\t\tfor (i=0; i<I8; ++i)\n\t\t\t{\n\t\t\t\td0 = data[dataOff];\n\t\t\t\td1 = data[dataOff + 8];\n\t\t\t\td2 = data[dataOff + 16];\n\t\t\t\td3 = data[dataOff + 24];\n\t\t\t\td4 = data[dataOff + 32];\n\t\t\t\td5 = data[dataOff + 40];\n\t\t\t\td6 = data[dataOff + 48];\n\t\t\t\td7 = data[dataOff + 56];\n\t\t\t\t\n\t\t\t\tvar tmp0p2 = d0 + d7;\n\t\t\t\tvar tmp7p2 = d0 - d7;\n\t\t\t\tvar tmp1p2 = d1 + d6;\n\t\t\t\tvar tmp6p2 = d1 - d6;\n\t\t\t\tvar tmp2p2 = d2 + d5;\n\t\t\t\tvar tmp5p2 = d2 - d5;\n\t\t\t\tvar tmp3p2 = d3 + d4;\n\t\t\t\tvar tmp4p2 = d3 - d4;\n\t\n\t\t\t\t/* Even part */\n\t\t\t\tvar tmp10p2 = tmp0p2 + tmp3p2;\t/* phase 2 */\n\t\t\t\tvar tmp13p2 = tmp0p2 - tmp3p2;\n\t\t\t\tvar tmp11p2 = tmp1p2 + tmp2p2;\n\t\t\t\tvar tmp12p2 = tmp1p2 - tmp2p2;\n\t\n\t\t\t\tdata[dataOff] = tmp10p2 + tmp11p2; /* phase 3 */\n\t\t\t\tdata[dataOff+32] = tmp10p2 - tmp11p2;\n\t\n\t\t\t\tvar z1p2 = (tmp12p2 + tmp13p2) * 0.707106781; /* c4 */\n\t\t\t\tdata[dataOff+16] = tmp13p2 + z1p2; /* phase 5 */\n\t\t\t\tdata[dataOff+48] = tmp13p2 - z1p2;\n\t\n\t\t\t\t/* Odd part */\n\t\t\t\ttmp10p2 = tmp4p2 + tmp5p2; /* phase 2 */\n\t\t\t\ttmp11p2 = tmp5p2 + tmp6p2;\n\t\t\t\ttmp12p2 = tmp6p2 + tmp7p2;\n\t\n\t\t\t\t/* The rotator is modified from fig 4-8 to avoid extra negations. */\n\t\t\t\tvar z5p2 = (tmp10p2 - tmp12p2) * 0.382683433; /* c6 */\n\t\t\t\tvar z2p2 = 0.541196100 * tmp10p2 + z5p2; /* c2-c6 */\n\t\t\t\tvar z4p2 = 1.306562965 * tmp12p2 + z5p2; /* c2+c6 */\n\t\t\t\tvar z3p2 = tmp11p2 * 0.707106781; /* c4 */\n\t\n\t\t\t\tvar z11p2 = tmp7p2 + z3p2;\t/* phase 5 */\n\t\t\t\tvar z13p2 = tmp7p2 - z3p2;\n\t\n\t\t\t\tdata[dataOff+40] = z13p2 + z2p2; /* phase 6 */\n\t\t\t\tdata[dataOff+24] = z13p2 - z2p2;\n\t\t\t\tdata[dataOff+ 8] = z11p2 + z4p2;\n\t\t\t\tdata[dataOff+56] = z11p2 - z4p2;\n\t\n\t\t\t\tdataOff++; /* advance pointer to next column */\n\t\t\t}\n\t\n\t\t\t// Quantize/descale the coefficients\n\t\t\tvar fDCTQuant;\n\t\t\tfor (i=0; i<I64; ++i)\n\t\t\t{\n\t\t\t\t// Apply the quantization and scaling factor & Round to nearest integer\n\t\t\t\tfDCTQuant = data[i]*fdtbl[i];\n\t\t\t\toutputfDCTQuant[i] = (fDCTQuant > 0.0) ? ((fDCTQuant + 0.5)|0) : ((fDCTQuant - 0.5)|0);\n\t\t\t\t//outputfDCTQuant[i] = fround(fDCTQuant);\n\n\t\t\t}\n\t\t\treturn outputfDCTQuant;\n\t\t}\n\t\t\n\t\tfunction writeAPP0()\n\t\t{\n\t\t\twriteWord(0xFFE0); // marker\n\t\t\twriteWord(16); // length\n\t\t\twriteByte(0x4A); // J\n\t\t\twriteByte(0x46); // F\n\t\t\twriteByte(0x49); // I\n\t\t\twriteByte(0x46); // F\n\t\t\twriteByte(0); // = \"JFIF\",'\\0'\n\t\t\twriteByte(1); // versionhi\n\t\t\twriteByte(1); // versionlo\n\t\t\twriteByte(0); // xyunits\n\t\t\twriteWord(1); // xdensity\n\t\t\twriteWord(1); // ydensity\n\t\t\twriteByte(0); // thumbnwidth\n\t\t\twriteByte(0); // thumbnheight\n\t\t}\n\t\n\t\tfunction writeSOF0(width, height)\n\t\t{\n\t\t\twriteWord(0xFFC0); // marker\n\t\t\twriteWord(17);   // length, truecolor YUV JPG\n\t\t\twriteByte(8);    // precision\n\t\t\twriteWord(height);\n\t\t\twriteWord(width);\n\t\t\twriteByte(3);    // nrofcomponents\n\t\t\twriteByte(1);    // IdY\n\t\t\twriteByte(0x11); // HVY\n\t\t\twriteByte(0);    // QTY\n\t\t\twriteByte(2);    // IdU\n\t\t\twriteByte(0x11); // HVU\n\t\t\twriteByte(1);    // QTU\n\t\t\twriteByte(3);    // IdV\n\t\t\twriteByte(0x11); // HVV\n\t\t\twriteByte(1);    // QTV\n\t\t}\n\t\n\t\tfunction writeDQT()\n\t\t{\n\t\t\twriteWord(0xFFDB); // marker\n\t\t\twriteWord(132);\t   // length\n\t\t\twriteByte(0);\n\t\t\tfor (var i=0; i<64; i++) {\n\t\t\t\twriteByte(YTable[i]);\n\t\t\t}\n\t\t\twriteByte(1);\n\t\t\tfor (var j=0; j<64; j++) {\n\t\t\t\twriteByte(UVTable[j]);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction writeDHT()\n\t\t{\n\t\t\twriteWord(0xFFC4); // marker\n\t\t\twriteWord(0x01A2); // length\n\t\n\t\t\twriteByte(0); // HTYDCinfo\n\t\t\tfor (var i=0; i<16; i++) {\n\t\t\t\twriteByte(std_dc_luminance_nrcodes[i+1]);\n\t\t\t}\n\t\t\tfor (var j=0; j<=11; j++) {\n\t\t\t\twriteByte(std_dc_luminance_values[j]);\n\t\t\t}\n\t\n\t\t\twriteByte(0x10); // HTYACinfo\n\t\t\tfor (var k=0; k<16; k++) {\n\t\t\t\twriteByte(std_ac_luminance_nrcodes[k+1]);\n\t\t\t}\n\t\t\tfor (var l=0; l<=161; l++) {\n\t\t\t\twriteByte(std_ac_luminance_values[l]);\n\t\t\t}\n\t\n\t\t\twriteByte(1); // HTUDCinfo\n\t\t\tfor (var m=0; m<16; m++) {\n\t\t\t\twriteByte(std_dc_chrominance_nrcodes[m+1]);\n\t\t\t}\n\t\t\tfor (var n=0; n<=11; n++) {\n\t\t\t\twriteByte(std_dc_chrominance_values[n]);\n\t\t\t}\n\t\n\t\t\twriteByte(0x11); // HTUACinfo\n\t\t\tfor (var o=0; o<16; o++) {\n\t\t\t\twriteByte(std_ac_chrominance_nrcodes[o+1]);\n\t\t\t}\n\t\t\tfor (var p=0; p<=161; p++) {\n\t\t\t\twriteByte(std_ac_chrominance_values[p]);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction writeSOS()\n\t\t{\n\t\t\twriteWord(0xFFDA); // marker\n\t\t\twriteWord(12); // length\n\t\t\twriteByte(3); // nrofcomponents\n\t\t\twriteByte(1); // IdY\n\t\t\twriteByte(0); // HTY\n\t\t\twriteByte(2); // IdU\n\t\t\twriteByte(0x11); // HTU\n\t\t\twriteByte(3); // IdV\n\t\t\twriteByte(0x11); // HTV\n\t\t\twriteByte(0); // Ss\n\t\t\twriteByte(0x3f); // Se\n\t\t\twriteByte(0); // Bf\n\t\t}\n\t\t\n\t\tfunction processDU(CDU, fdtbl, DC, HTDC, HTAC){\n\t\t\tvar EOB = HTAC[0x00];\n\t\t\tvar M16zeroes = HTAC[0xF0];\n\t\t\tvar pos;\n\t\t\tvar I16 = 16;\n\t\t\tvar I63 = 63;\n\t\t\tvar I64 = 64;\n\t\t\tvar DU_DCT = fDCTQuant(CDU, fdtbl);\n\t\t\t//ZigZag reorder\n\t\t\tfor (var j=0;j<I64;++j) {\n\t\t\t\tDU[ZigZag[j]]=DU_DCT[j];\n\t\t\t}\n\t\t\tvar Diff = DU[0] - DC; DC = DU[0];\n\t\t\t//Encode DC\n\t\t\tif (Diff==0) {\n\t\t\t\twriteBits(HTDC[0]); // Diff might be 0\n\t\t\t} else {\n\t\t\t\tpos = 32767+Diff;\n\t\t\t\twriteBits(HTDC[category[pos]]);\n\t\t\t\twriteBits(bitcode[pos]);\n\t\t\t}\n\t\t\t//Encode ACs\n\t\t\tvar end0pos = 63; // was const... which is crazy\n\t\t\tfor (; (end0pos>0)&&(DU[end0pos]==0); end0pos--) {};\n\t\t\t//end0pos = first element in reverse order !=0\n\t\t\tif ( end0pos == 0) {\n\t\t\t\twriteBits(EOB);\n\t\t\t\treturn DC;\n\t\t\t}\n\t\t\tvar i = 1;\n\t\t\tvar lng;\n\t\t\twhile ( i <= end0pos ) {\n\t\t\t\tvar startpos = i;\n\t\t\t\tfor (; (DU[i]==0) && (i<=end0pos); ++i) {}\n\t\t\t\tvar nrzeroes = i-startpos;\n\t\t\t\tif ( nrzeroes >= I16 ) {\n\t\t\t\t\tlng = nrzeroes>>4;\n\t\t\t\t\tfor (var nrmarker=1; nrmarker <= lng; ++nrmarker)\n\t\t\t\t\t\twriteBits(M16zeroes);\n\t\t\t\t\tnrzeroes = nrzeroes&0xF;\n\t\t\t\t}\n\t\t\t\tpos = 32767+DU[i];\n\t\t\t\twriteBits(HTAC[(nrzeroes<<4)+category[pos]]);\n\t\t\t\twriteBits(bitcode[pos]);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tif ( end0pos != I63 ) {\n\t\t\t\twriteBits(EOB);\n\t\t\t}\n\t\t\treturn DC;\n\t\t}\n\n\t\tfunction initCharLookupTable(){\n\t\t\tvar sfcc = String.fromCharCode;\n\t\t\tfor(var i=0; i < 256; i++){ ///// ACHTUNG // 255\n\t\t\t\tclt[i] = sfcc(i);\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.encode = function(image,quality) // image data object\n\t\t{\n\t\t\tvar time_start = new Date().getTime();\n\t\t\t\n\t\t\tif(quality) setQuality(quality);\n\t\t\t\n\t\t\t// Initialize bit writer\n\t\t\tbyteout = new Array();\n\t\t\tbytenew=0;\n\t\t\tbytepos=7;\n\t\n\t\t\t// Add JPEG headers\n\t\t\twriteWord(0xFFD8); // SOI\n\t\t\twriteAPP0();\n\t\t\twriteDQT();\n\t\t\twriteSOF0(image.width,image.height);\n\t\t\twriteDHT();\n\t\t\twriteSOS();\n\n\t\n\t\t\t// Encode 8x8 macroblocks\n\t\t\tvar DCY=0;\n\t\t\tvar DCU=0;\n\t\t\tvar DCV=0;\n\t\t\t\n\t\t\tbytenew=0;\n\t\t\tbytepos=7;\n\t\t\t\n\t\t\t\n\t\t\tthis.encode.displayName = \"_encode_\";\n\n\t\t\tvar imageData = image.data;\n\t\t\tvar width = image.width;\n\t\t\tvar height = image.height;\n\n\t\t\tvar quadWidth = width*4;\n\t\t\tvar tripleWidth = width*3;\n\t\t\t\n\t\t\tvar x, y = 0;\n\t\t\tvar r, g, b;\n\t\t\tvar start,p, col,row,pos;\n\t\t\twhile(y < height){\n\t\t\t\tx = 0;\n\t\t\t\twhile(x < quadWidth){\n\t\t\t\tstart = quadWidth * y + x;\n\t\t\t\tp = start;\n\t\t\t\tcol = -1;\n\t\t\t\trow = 0;\n\t\t\t\t\n\t\t\t\tfor(pos=0; pos < 64; pos++){\n\t\t\t\t\trow = pos >> 3;// /8\n\t\t\t\t\tcol = ( pos & 7 ) * 4; // %8\n\t\t\t\t\tp = start + ( row * quadWidth ) + col;\t\t\n\t\t\t\t\t\n\t\t\t\t\tif(y+row >= height){ // padding bottom\n\t\t\t\t\t\tp-= (quadWidth*(y+1+row-height));\n\t\t\t\t\t}\n\n\t\t\t\t\tif(x+col >= quadWidth){ // padding right\t\n\t\t\t\t\t\tp-= ((x+col) - quadWidth +4)\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tr = imageData[ p++ ];\n\t\t\t\t\tg = imageData[ p++ ];\n\t\t\t\t\tb = imageData[ p++ ];\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t/* // calculate YUV values dynamically\n\t\t\t\t\tYDU[pos]=((( 0.29900)*r+( 0.58700)*g+( 0.11400)*b))-128; //-0x80\n\t\t\t\t\tUDU[pos]=(((-0.16874)*r+(-0.33126)*g+( 0.50000)*b));\n\t\t\t\t\tVDU[pos]=((( 0.50000)*r+(-0.41869)*g+(-0.08131)*b));\n\t\t\t\t\t*/\n\t\t\t\t\t\n\t\t\t\t\t// use lookup table (slightly faster)\n\t\t\t\t\tYDU[pos] = ((RGB_YUV_TABLE[r]             + RGB_YUV_TABLE[(g +  256)>>0] + RGB_YUV_TABLE[(b +  512)>>0]) >> 16)-128;\n\t\t\t\t\tUDU[pos] = ((RGB_YUV_TABLE[(r +  768)>>0] + RGB_YUV_TABLE[(g + 1024)>>0] + RGB_YUV_TABLE[(b + 1280)>>0]) >> 16)-128;\n\t\t\t\t\tVDU[pos] = ((RGB_YUV_TABLE[(r + 1280)>>0] + RGB_YUV_TABLE[(g + 1536)>>0] + RGB_YUV_TABLE[(b + 1792)>>0]) >> 16)-128;\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tDCY = processDU(YDU, fdtbl_Y, DCY, YDC_HT, YAC_HT);\n\t\t\t\tDCU = processDU(UDU, fdtbl_UV, DCU, UVDC_HT, UVAC_HT);\n\t\t\t\tDCV = processDU(VDU, fdtbl_UV, DCV, UVDC_HT, UVAC_HT);\n\t\t\t\tx+=32;\n\t\t\t\t}\n\t\t\t\ty+=8;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t////////////////////////////////////////////////////////////////\n\t\n\t\t\t// Do the bit alignment of the EOI marker\n\t\t\tif ( bytepos >= 0 ) {\n\t\t\t\tvar fillbits = [];\n\t\t\t\tfillbits[1] = bytepos+1;\n\t\t\t\tfillbits[0] = (1<<(bytepos+1))-1;\n\t\t\t\twriteBits(fillbits);\n\t\t\t}\n\t\n\t\t\twriteWord(0xFFD9); //EOI\n\n      //return new Uint8Array(byteout);\n      return new Buffer(byteout);\n\n\t\t\tvar jpegDataUri = 'data:image/jpeg;base64,' + btoa(byteout.join(''));\n\t\t\t\n\t\t\tbyteout = [];\n\t\t\t\n\t\t\t// benchmarking\n\t\t\tvar duration = new Date().getTime() - time_start;\n    \t\t//console.log('Encoding time: '+ duration + 'ms');\n    \t\t//\n\t\t\t\n\t\t\treturn jpegDataUri\t\t\t\n\t}\n\t\n\tfunction setQuality(quality){\n\t\tif (quality <= 0) {\n\t\t\tquality = 1;\n\t\t}\n\t\tif (quality > 100) {\n\t\t\tquality = 100;\n\t\t}\n\t\t\n\t\tif(currentQuality == quality) return // don't recalc if unchanged\n\t\t\n\t\tvar sf = 0;\n\t\tif (quality < 50) {\n\t\t\tsf = Math.floor(5000 / quality);\n\t\t} else {\n\t\t\tsf = Math.floor(200 - quality*2);\n\t\t}\n\t\t\n\t\tinitQuantTables(sf);\n\t\tcurrentQuality = quality;\n\t\t//console.log('Quality set to: '+quality +'%');\n\t}\n\t\n\tfunction init(){\n\t\tvar time_start = new Date().getTime();\n\t\tif(!quality) quality = 50;\n\t\t// Create tables\n\t\tinitCharLookupTable()\n\t\tinitHuffmanTbl();\n\t\tinitCategoryNumber();\n\t\tinitRGBYUVTable();\n\t\t\n\t\tsetQuality(quality);\n\t\tvar duration = new Date().getTime() - time_start;\n    \t//console.log('Initialization '+ duration + 'ms');\n\t}\n\t\n\tinit();\n\t\n};\nif (typeof module !== undefined) {\n\tmodule.exports = encode;\n}\n\nfunction encode(imgData, qu) {\n  if (typeof qu === 'undefined') qu = 50;\n  var encoder = new JPEGEncoder(qu);\n\tvar data = encoder.encode(imgData, qu);\n  return {\n    data: data,\n    width: imgData.width,\n    height: imgData.height\n  };\n}\n\n// helper function to get the imageData of an existing image on the current page.\nfunction getImageDataFromImage(idOrElement){\n\tvar theImg = (typeof(idOrElement)=='string')? document.getElementById(idOrElement):idOrElement;\n\tvar cvs = document.createElement('canvas');\n\tcvs.width = theImg.width;\n\tcvs.height = theImg.height;\n\tvar ctx = cvs.getContext(\"2d\");\n\tctx.drawImage(theImg,0,0);\n\t\n\treturn (ctx.getImageData(0, 0, cvs.width, cvs.height));\n}\n"]},"metadata":{},"sourceType":"script"}