{"ast":null,"code":"'use strict';\n\nvar _slicedToArray = require(\"/home/al/Desktop/koi/narcissus/content/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar wrapAnsi16 = function wrapAnsi16(fn, offset) {\n  return function () {\n    var code = fn.apply(void 0, arguments);\n    return \"\\x1B[\".concat(code + offset, \"m\");\n  };\n};\n\nvar wrapAnsi256 = function wrapAnsi256(fn, offset) {\n  return function () {\n    var code = fn.apply(void 0, arguments);\n    return \"\\x1B[\".concat(38 + offset, \";5;\").concat(code, \"m\");\n  };\n};\n\nvar wrapAnsi16m = function wrapAnsi16m(fn, offset) {\n  return function () {\n    var rgb = fn.apply(void 0, arguments);\n    return \"\\x1B[\".concat(38 + offset, \";2;\").concat(rgb[0], \";\").concat(rgb[1], \";\").concat(rgb[2], \"m\");\n  };\n};\n\nvar ansi2ansi = function ansi2ansi(n) {\n  return n;\n};\n\nvar rgb2rgb = function rgb2rgb(r, g, b) {\n  return [r, g, b];\n};\n\nvar setLazyProperty = function setLazyProperty(object, property, _get) {\n  Object.defineProperty(object, property, {\n    get: function get() {\n      var value = _get();\n\n      Object.defineProperty(object, property, {\n        value: value,\n        enumerable: true,\n        configurable: true\n      });\n      return value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n};\n/** @type {typeof import('color-convert')} */\n\n\nvar colorConvert;\n\nvar makeDynamicStyles = function makeDynamicStyles(wrap, targetSpace, identity, isBackground) {\n  if (colorConvert === undefined) {\n    colorConvert = require('color-convert');\n  }\n\n  var offset = isBackground ? 10 : 0;\n  var styles = {};\n\n  for (var _i = 0, _Object$entries = Object.entries(colorConvert); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n        sourceSpace = _Object$entries$_i[0],\n        suite = _Object$entries$_i[1];\n\n    var name = sourceSpace === 'ansi16' ? 'ansi' : sourceSpace;\n\n    if (sourceSpace === targetSpace) {\n      styles[name] = wrap(identity, offset);\n    } else if (typeof suite === 'object') {\n      styles[name] = wrap(suite[targetSpace], offset);\n    }\n  }\n\n  return styles;\n};\n\nfunction assembleStyles() {\n  var codes = new Map();\n  var styles = {\n    modifier: {\n      reset: [0, 0],\n      // 21 isn't widely supported and 22 does the same thing\n      bold: [1, 22],\n      dim: [2, 22],\n      italic: [3, 23],\n      underline: [4, 24],\n      inverse: [7, 27],\n      hidden: [8, 28],\n      strikethrough: [9, 29]\n    },\n    color: {\n      black: [30, 39],\n      red: [31, 39],\n      green: [32, 39],\n      yellow: [33, 39],\n      blue: [34, 39],\n      magenta: [35, 39],\n      cyan: [36, 39],\n      white: [37, 39],\n      // Bright color\n      blackBright: [90, 39],\n      redBright: [91, 39],\n      greenBright: [92, 39],\n      yellowBright: [93, 39],\n      blueBright: [94, 39],\n      magentaBright: [95, 39],\n      cyanBright: [96, 39],\n      whiteBright: [97, 39]\n    },\n    bgColor: {\n      bgBlack: [40, 49],\n      bgRed: [41, 49],\n      bgGreen: [42, 49],\n      bgYellow: [43, 49],\n      bgBlue: [44, 49],\n      bgMagenta: [45, 49],\n      bgCyan: [46, 49],\n      bgWhite: [47, 49],\n      // Bright color\n      bgBlackBright: [100, 49],\n      bgRedBright: [101, 49],\n      bgGreenBright: [102, 49],\n      bgYellowBright: [103, 49],\n      bgBlueBright: [104, 49],\n      bgMagentaBright: [105, 49],\n      bgCyanBright: [106, 49],\n      bgWhiteBright: [107, 49]\n    }\n  }; // Alias bright black as gray (and grey)\n\n  styles.color.gray = styles.color.blackBright;\n  styles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n  styles.color.grey = styles.color.blackBright;\n  styles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n  for (var _i2 = 0, _Object$entries2 = Object.entries(styles); _i2 < _Object$entries2.length; _i2++) {\n    var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2),\n        groupName = _Object$entries2$_i[0],\n        group = _Object$entries2$_i[1];\n\n    for (var _i3 = 0, _Object$entries3 = Object.entries(group); _i3 < _Object$entries3.length; _i3++) {\n      var _Object$entries3$_i = _slicedToArray(_Object$entries3[_i3], 2),\n          styleName = _Object$entries3$_i[0],\n          style = _Object$entries3$_i[1];\n\n      styles[styleName] = {\n        open: \"\\x1B[\".concat(style[0], \"m\"),\n        close: \"\\x1B[\".concat(style[1], \"m\")\n      };\n      group[styleName] = styles[styleName];\n      codes.set(style[0], style[1]);\n    }\n\n    Object.defineProperty(styles, groupName, {\n      value: group,\n      enumerable: false\n    });\n  }\n\n  Object.defineProperty(styles, 'codes', {\n    value: codes,\n    enumerable: false\n  });\n  styles.color.close = \"\\x1B[39m\";\n  styles.bgColor.close = \"\\x1B[49m\";\n  setLazyProperty(styles.color, 'ansi', function () {\n    return makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, false);\n  });\n  setLazyProperty(styles.color, 'ansi256', function () {\n    return makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, false);\n  });\n  setLazyProperty(styles.color, 'ansi16m', function () {\n    return makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, false);\n  });\n  setLazyProperty(styles.bgColor, 'ansi', function () {\n    return makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, true);\n  });\n  setLazyProperty(styles.bgColor, 'ansi256', function () {\n    return makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, true);\n  });\n  setLazyProperty(styles.bgColor, 'ansi16m', function () {\n    return makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, true);\n  });\n  return styles;\n} // Make the export immutable\n\n\nObject.defineProperty(module, 'exports', {\n  enumerable: true,\n  get: assembleStyles\n});","map":{"version":3,"sources":["/home/al/Desktop/koi/narcissus/content/node_modules/ansi-styles/index.js"],"names":["wrapAnsi16","fn","offset","code","wrapAnsi256","wrapAnsi16m","rgb","ansi2ansi","n","rgb2rgb","r","g","b","setLazyProperty","object","property","get","Object","defineProperty","value","enumerable","configurable","colorConvert","makeDynamicStyles","wrap","targetSpace","identity","isBackground","undefined","require","styles","entries","sourceSpace","suite","name","assembleStyles","codes","Map","modifier","reset","bold","dim","italic","underline","inverse","hidden","strikethrough","color","black","red","green","yellow","blue","magenta","cyan","white","blackBright","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgColor","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","bgBlackBright","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright","gray","bgGray","grey","bgGrey","groupName","group","styleName","style","open","close","set","module"],"mappings":"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","sourcesContent":["'use strict';\n\nconst wrapAnsi16 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => (...args) => {\n\tconst rgb = fn(...args);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nconst ansi2ansi = n => n;\nconst rgb2rgb = (r, g, b) => [r, g, b];\n\nconst setLazyProperty = (object, property, get) => {\n\tObject.defineProperty(object, property, {\n\t\tget: () => {\n\t\t\tconst value = get();\n\n\t\t\tObject.defineProperty(object, property, {\n\t\t\t\tvalue,\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true\n\t\t\t});\n\n\t\t\treturn value;\n\t\t},\n\t\tenumerable: true,\n\t\tconfigurable: true\n\t});\n};\n\n/** @type {typeof import('color-convert')} */\nlet colorConvert;\nconst makeDynamicStyles = (wrap, targetSpace, identity, isBackground) => {\n\tif (colorConvert === undefined) {\n\t\tcolorConvert = require('color-convert');\n\t}\n\n\tconst offset = isBackground ? 10 : 0;\n\tconst styles = {};\n\n\tfor (const [sourceSpace, suite] of Object.entries(colorConvert)) {\n\t\tconst name = sourceSpace === 'ansi16' ? 'ansi' : sourceSpace;\n\t\tif (sourceSpace === targetSpace) {\n\t\t\tstyles[name] = wrap(identity, offset);\n\t\t} else if (typeof suite === 'object') {\n\t\t\tstyles[name] = wrap(suite[targetSpace], offset);\n\t\t}\n\t}\n\n\treturn styles;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tsetLazyProperty(styles.color, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, false));\n\tsetLazyProperty(styles.bgColor, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, true));\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n"]},"metadata":{},"sourceType":"script"}