{"ast":null,"code":"'use strict';\n\nvar paethPredictor = require('./paeth-predictor');\n\nfunction filterNone(pxData, pxPos, byteWidth, rawData, rawPos) {\n  pxData.copy(rawData, rawPos, pxPos, pxPos + byteWidth);\n}\n\nfunction filterSumNone(pxData, pxPos, byteWidth) {\n  var sum = 0;\n  var length = pxPos + byteWidth;\n\n  for (var i = pxPos; i < length; i++) {\n    sum += Math.abs(pxData[i]);\n  }\n\n  return sum;\n}\n\nfunction filterSub(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n  for (var x = 0; x < byteWidth; x++) {\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var val = pxData[pxPos + x] - left;\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumSub(pxData, pxPos, byteWidth, bpp) {\n  var sum = 0;\n\n  for (var x = 0; x < byteWidth; x++) {\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var val = pxData[pxPos + x] - left;\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nfunction filterUp(pxData, pxPos, byteWidth, rawData, rawPos) {\n  for (var x = 0; x < byteWidth; x++) {\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var val = pxData[pxPos + x] - up;\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumUp(pxData, pxPos, byteWidth) {\n  var sum = 0;\n  var length = pxPos + byteWidth;\n\n  for (var x = pxPos; x < length; x++) {\n    var up = pxPos > 0 ? pxData[x - byteWidth] : 0;\n    var val = pxData[x] - up;\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nfunction filterAvg(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n  for (var x = 0; x < byteWidth; x++) {\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var val = pxData[pxPos + x] - (left + up >> 1);\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumAvg(pxData, pxPos, byteWidth, bpp) {\n  var sum = 0;\n\n  for (var x = 0; x < byteWidth; x++) {\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var val = pxData[pxPos + x] - (left + up >> 1);\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nfunction filterPaeth(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n  for (var x = 0; x < byteWidth; x++) {\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var upleft = pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;\n    var val = pxData[pxPos + x] - paethPredictor(left, up, upleft);\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumPaeth(pxData, pxPos, byteWidth, bpp) {\n  var sum = 0;\n\n  for (var x = 0; x < byteWidth; x++) {\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var upleft = pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;\n    var val = pxData[pxPos + x] - paethPredictor(left, up, upleft);\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nvar filters = {\n  0: filterNone,\n  1: filterSub,\n  2: filterUp,\n  3: filterAvg,\n  4: filterPaeth\n};\nvar filterSums = {\n  0: filterSumNone,\n  1: filterSumSub,\n  2: filterSumUp,\n  3: filterSumAvg,\n  4: filterSumPaeth\n};\n\nmodule.exports = function (pxData, width, height, options, bpp) {\n  var filterTypes;\n\n  if (!('filterType' in options) || options.filterType === -1) {\n    filterTypes = [0, 1, 2, 3, 4];\n  } else if (typeof options.filterType === 'number') {\n    filterTypes = [options.filterType];\n  } else {\n    throw new Error('unrecognised filter types');\n  }\n\n  var byteWidth = width * bpp;\n  var rawPos = 0;\n  var pxPos = 0;\n  var rawData = new Buffer((byteWidth + 1) * height);\n  var sel = filterTypes[0];\n\n  for (var y = 0; y < height; y++) {\n    if (filterTypes.length > 1) {\n      // find best filter for this line (with lowest sum of values)\n      var min = Infinity;\n\n      for (var i = 0; i < filterTypes.length; i++) {\n        var sum = filterSums[filterTypes[i]](pxData, pxPos, byteWidth, bpp);\n\n        if (sum < min) {\n          sel = filterTypes[i];\n          min = sum;\n        }\n      }\n    }\n\n    rawData[rawPos] = sel;\n    rawPos++;\n    filters[sel](pxData, pxPos, byteWidth, rawData, rawPos, bpp);\n    rawPos += byteWidth;\n    pxPos += byteWidth;\n  }\n\n  return rawData;\n};","map":{"version":3,"sources":["/home/al/Desktop/koi/narcissus/content/node_modules/pngjs-nozlib/lib/filter-pack.js"],"names":["paethPredictor","require","filterNone","pxData","pxPos","byteWidth","rawData","rawPos","copy","filterSumNone","sum","length","i","Math","abs","filterSub","bpp","x","left","val","filterSumSub","filterUp","up","filterSumUp","filterAvg","filterSumAvg","filterPaeth","upleft","filterSumPaeth","filters","filterSums","module","exports","width","height","options","filterTypes","filterType","Error","Buffer","sel","y","min","Infinity"],"mappings":"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","sourcesContent":["'use strict';\n\nvar paethPredictor = require('./paeth-predictor');\n\nfunction filterNone(pxData, pxPos, byteWidth, rawData, rawPos) {\n  pxData.copy(rawData, rawPos, pxPos, pxPos + byteWidth);\n}\n\nfunction filterSumNone(pxData, pxPos, byteWidth) {\n\n  var sum = 0;\n  var length = pxPos + byteWidth;\n\n  for (var i = pxPos; i < length; i++) {\n    sum += Math.abs(pxData[i]);\n  }\n  return sum;\n}\n\nfunction filterSub(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n\n  for (var x = 0; x < byteWidth; x++) {\n\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var val = pxData[pxPos + x] - left;\n\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumSub(pxData, pxPos, byteWidth, bpp) {\n\n  var sum = 0;\n  for (var x = 0; x < byteWidth; x++) {\n\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var val = pxData[pxPos + x] - left;\n\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nfunction filterUp(pxData, pxPos, byteWidth, rawData, rawPos) {\n\n  for (var x = 0; x < byteWidth; x++) {\n\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var val = pxData[pxPos + x] - up;\n\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumUp(pxData, pxPos, byteWidth) {\n\n  var sum = 0;\n  var length = pxPos + byteWidth;\n  for (var x = pxPos; x < length; x++) {\n\n    var up = pxPos > 0 ? pxData[x - byteWidth] : 0;\n    var val = pxData[x] - up;\n\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nfunction filterAvg(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n\n  for (var x = 0; x < byteWidth; x++) {\n\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var val = pxData[pxPos + x] - ((left + up) >> 1);\n\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumAvg(pxData, pxPos, byteWidth, bpp) {\n\n  var sum = 0;\n  for (var x = 0; x < byteWidth; x++) {\n\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var val = pxData[pxPos + x] - ((left + up) >> 1);\n\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nfunction filterPaeth(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n\n  for (var x = 0; x < byteWidth; x++) {\n\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var upleft = pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;\n    var val = pxData[pxPos + x] - paethPredictor(left, up, upleft);\n\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumPaeth(pxData, pxPos, byteWidth, bpp) {\n  var sum = 0;\n  for (var x = 0; x < byteWidth; x++) {\n\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var upleft = pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;\n    var val = pxData[pxPos + x] - paethPredictor(left, up, upleft);\n\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nvar filters = {\n  0: filterNone,\n  1: filterSub,\n  2: filterUp,\n  3: filterAvg,\n  4: filterPaeth\n};\n\nvar filterSums = {\n  0: filterSumNone,\n  1: filterSumSub,\n  2: filterSumUp,\n  3: filterSumAvg,\n  4: filterSumPaeth\n};\n\nmodule.exports = function(pxData, width, height, options, bpp) {\n\n  var filterTypes;\n  if (!('filterType' in options) || options.filterType === -1) {\n    filterTypes = [0, 1, 2, 3, 4];\n  }\n  else if (typeof options.filterType === 'number') {\n    filterTypes = [options.filterType];\n  }\n  else {\n    throw new Error('unrecognised filter types');\n  }\n\n  var byteWidth = width * bpp;\n  var rawPos = 0;\n  var pxPos = 0;\n  var rawData = new Buffer((byteWidth + 1) * height);\n  var sel = filterTypes[0];\n\n  for (var y = 0; y < height; y++) {\n\n    if (filterTypes.length > 1) {\n      // find best filter for this line (with lowest sum of values)\n      var min = Infinity;\n\n      for (var i = 0; i < filterTypes.length; i++) {\n        var sum = filterSums[filterTypes[i]](pxData, pxPos, byteWidth, bpp);\n        if (sum < min) {\n          sel = filterTypes[i];\n          min = sum;\n        }\n      }\n    }\n\n    rawData[rawPos] = sel;\n    rawPos++;\n    filters[sel](pxData, pxPos, byteWidth, rawData, rawPos, bpp);\n    rawPos += byteWidth;\n    pxPos += byteWidth;\n  }\n  return rawData;\n};\n"]},"metadata":{},"sourceType":"script"}