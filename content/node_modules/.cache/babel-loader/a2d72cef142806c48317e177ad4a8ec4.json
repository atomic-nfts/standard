{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bundleData = exports.unbundleData = void 0;\n\nconst ar_data_verify_1 = require(\"./ar-data-verify\");\n/**\r\n * Unbundles a transaction into an Array of DataItems.\r\n *\r\n * Takes either a json string or object. Will throw if given an invalid json\r\n * string but otherwise, it will return an empty array if\r\n *\r\n * a) the json object is the wrong format\r\n * b) the object contains no valid DataItems.\r\n *\r\n * It will verify all DataItems and discard ones that don't pass verification.\r\n *\r\n * @param deps\r\n * @param txData\r\n */\n\n\nfunction unbundleData(deps, txData) {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (typeof txData === \"string\") {\n      txData = JSON.parse(txData);\n    }\n\n    if (typeof txData !== \"object\" || !txData || !txData.items || !Array.isArray(txData.items)) {\n      console.warn(`Invalid bundle, should be a json string or object with an items Array`);\n      return [];\n    }\n\n    const itemsArray = txData.items;\n    const verifications = yield Promise.all(itemsArray.map(d => ar_data_verify_1.verify(deps, d)));\n    const failed = verifications.filter(v => !v).length;\n\n    if (failed > 0) {\n      console.warn(`${failed} pieces of Data failed verification and will be discarded`);\n      return itemsArray.filter((x, idx) => verifications[idx]);\n    }\n\n    return itemsArray;\n  });\n}\n\nexports.unbundleData = unbundleData;\n/**\r\n * Verifies all datas and returns a json object with an items array.\r\n * Throws if any of the data items fail verification.\r\n *\r\n * @param deps\r\n * @param datas\r\n */\n\nfunction bundleData(deps, datas) {\n  return __awaiter(this, void 0, void 0, function* () {\n    yield Promise.all(datas.map(d => __awaiter(this, void 0, void 0, function* () {\n      if (!(yield ar_data_verify_1.verify(deps, d))) {\n        throw new Error(\"Invalid Data\");\n      }\n    })));\n    return {\n      items: datas\n    };\n  });\n}\n\nexports.bundleData = bundleData;","map":{"version":3,"sources":["/home/al/Desktop/koi/narcissus/content/node_modules/arweave-bundles/lib/ar-data-bundle.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","bundleData","unbundleData","ar_data_verify_1","require","deps","txData","JSON","parse","items","Array","isArray","console","warn","itemsArray","verifications","all","map","d","verify","failed","filter","v","length","x","idx","datas","Error"],"mappings":"AAAA;;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACrF,WAASC,KAAT,CAAeC,KAAf,EAAsB;AAAE,WAAOA,KAAK,YAAYH,CAAjB,GAAqBG,KAArB,GAA6B,IAAIH,CAAJ,CAAM,UAAUI,OAAV,EAAmB;AAAEA,MAAAA,OAAO,CAACD,KAAD,CAAP;AAAiB,KAA5C,CAApC;AAAoF;;AAC5G,SAAO,KAAKH,CAAC,KAAKA,CAAC,GAAGK,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;AACvD,aAASC,SAAT,CAAmBJ,KAAnB,EAA0B;AAAE,UAAI;AAAEK,QAAAA,IAAI,CAACP,SAAS,CAACQ,IAAV,CAAeN,KAAf,CAAD,CAAJ;AAA8B,OAApC,CAAqC,OAAOO,CAAP,EAAU;AAAEJ,QAAAA,MAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC3F,aAASC,QAAT,CAAkBR,KAAlB,EAAyB;AAAE,UAAI;AAAEK,QAAAA,IAAI,CAACP,SAAS,CAAC,OAAD,CAAT,CAAmBE,KAAnB,CAAD,CAAJ;AAAkC,OAAxC,CAAyC,OAAOO,CAAP,EAAU;AAAEJ,QAAAA,MAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC9F,aAASF,IAAT,CAAcI,MAAd,EAAsB;AAAEA,MAAAA,MAAM,CAACC,IAAP,GAAcT,OAAO,CAACQ,MAAM,CAACT,KAAR,CAArB,GAAsCD,KAAK,CAACU,MAAM,CAACT,KAAR,CAAL,CAAoBW,IAApB,CAAyBP,SAAzB,EAAoCI,QAApC,CAAtC;AAAsF;;AAC9GH,IAAAA,IAAI,CAAC,CAACP,SAAS,GAAGA,SAAS,CAACc,KAAV,CAAgBjB,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDU,IAAzD,EAAD,CAAJ;AACH,GALM,CAAP;AAMH,CARD;;AASAO,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEf,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAe,OAAO,CAACC,UAAR,GAAqBD,OAAO,CAACE,YAAR,GAAuB,KAAK,CAAjD;;AACA,MAAMC,gBAAgB,GAAGC,OAAO,CAAC,kBAAD,CAAhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,YAAT,CAAsBG,IAAtB,EAA4BC,MAA5B,EAAoC;AAChC,SAAO3B,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAChD,QAAI,OAAO2B,MAAP,KAAkB,QAAtB,EAAgC;AAC5BA,MAAAA,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWF,MAAX,CAAT;AACH;;AACD,QAAI,OAAOA,MAAP,KAAkB,QAAlB,IACA,CAACA,MADD,IAEA,CAACA,MAAM,CAACG,KAFR,IAGA,CAACC,KAAK,CAACC,OAAN,CAAcL,MAAM,CAACG,KAArB,CAHL,EAGkC;AAC9BG,MAAAA,OAAO,CAACC,IAAR,CAAc,uEAAd;AACA,aAAO,EAAP;AACH;;AACD,UAAMC,UAAU,GAAGR,MAAM,CAACG,KAA1B;AACA,UAAMM,aAAa,GAAG,MAAM5B,OAAO,CAAC6B,GAAR,CAAYF,UAAU,CAACG,GAAX,CAAgBC,CAAD,IAAOf,gBAAgB,CAACgB,MAAjB,CAAwBd,IAAxB,EAA8Ba,CAA9B,CAAtB,CAAZ,CAA5B;AACA,UAAME,MAAM,GAAGL,aAAa,CAACM,MAAd,CAAsBC,CAAD,IAAO,CAACA,CAA7B,EAAgCC,MAA/C;;AACA,QAAIH,MAAM,GAAG,CAAb,EAAgB;AACZR,MAAAA,OAAO,CAACC,IAAR,CAAc,GAAEO,MAAO,2DAAvB;AACA,aAAON,UAAU,CAACO,MAAX,CAAkB,CAACG,CAAD,EAAIC,GAAJ,KAAYV,aAAa,CAACU,GAAD,CAA3C,CAAP;AACH;;AACD,WAAOX,UAAP;AACH,GAnBe,CAAhB;AAoBH;;AACDd,OAAO,CAACE,YAAR,GAAuBA,YAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,UAAT,CAAoBI,IAApB,EAA0BqB,KAA1B,EAAiC;AAC7B,SAAO/C,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAChD,UAAMQ,OAAO,CAAC6B,GAAR,CAAYU,KAAK,CAACT,GAAN,CAAWC,CAAD,IAAOvC,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAC5E,UAAI,EAAE,MAAMwB,gBAAgB,CAACgB,MAAjB,CAAwBd,IAAxB,EAA8Ba,CAA9B,CAAR,CAAJ,EAA+C;AAC3C,cAAM,IAAIS,KAAJ,CAAU,cAAV,CAAN;AACH;AACJ,KAJ2C,CAA1B,CAAZ,CAAN;AAKA,WAAO;AAAElB,MAAAA,KAAK,EAAEiB;AAAT,KAAP;AACH,GAPe,CAAhB;AAQH;;AACD1B,OAAO,CAACC,UAAR,GAAqBA,UAArB","sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.bundleData = exports.unbundleData = void 0;\r\nconst ar_data_verify_1 = require(\"./ar-data-verify\");\r\n/**\r\n * Unbundles a transaction into an Array of DataItems.\r\n *\r\n * Takes either a json string or object. Will throw if given an invalid json\r\n * string but otherwise, it will return an empty array if\r\n *\r\n * a) the json object is the wrong format\r\n * b) the object contains no valid DataItems.\r\n *\r\n * It will verify all DataItems and discard ones that don't pass verification.\r\n *\r\n * @param deps\r\n * @param txData\r\n */\r\nfunction unbundleData(deps, txData) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (typeof txData === \"string\") {\r\n            txData = JSON.parse(txData);\r\n        }\r\n        if (typeof txData !== \"object\" ||\r\n            !txData ||\r\n            !txData.items ||\r\n            !Array.isArray(txData.items)) {\r\n            console.warn(`Invalid bundle, should be a json string or object with an items Array`);\r\n            return [];\r\n        }\r\n        const itemsArray = txData.items;\r\n        const verifications = yield Promise.all(itemsArray.map((d) => ar_data_verify_1.verify(deps, d)));\r\n        const failed = verifications.filter((v) => !v).length;\r\n        if (failed > 0) {\r\n            console.warn(`${failed} pieces of Data failed verification and will be discarded`);\r\n            return itemsArray.filter((x, idx) => verifications[idx]);\r\n        }\r\n        return itemsArray;\r\n    });\r\n}\r\nexports.unbundleData = unbundleData;\r\n/**\r\n * Verifies all datas and returns a json object with an items array.\r\n * Throws if any of the data items fail verification.\r\n *\r\n * @param deps\r\n * @param datas\r\n */\r\nfunction bundleData(deps, datas) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        yield Promise.all(datas.map((d) => __awaiter(this, void 0, void 0, function* () {\r\n            if (!(yield ar_data_verify_1.verify(deps, d))) {\r\n                throw new Error(\"Invalid Data\");\r\n            }\r\n        })));\r\n        return { items: datas };\r\n    });\r\n}\r\nexports.bundleData = bundleData;\r\n"]},"metadata":{},"sourceType":"script"}