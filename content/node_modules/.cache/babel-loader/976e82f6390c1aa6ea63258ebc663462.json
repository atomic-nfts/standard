{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function map(project, thisArg) {\n  return function mapOperation(source) {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nvar MapOperator = /*@__PURE__*/function () {\n  function MapOperator(project, thisArg) {\n    this.project = project;\n    this.thisArg = thisArg;\n  }\n\n  MapOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  };\n\n  return MapOperator;\n}();\n\nexport { MapOperator };\n\nvar MapSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(MapSubscriber, _super);\n\n  function MapSubscriber(destination, project, thisArg) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.project = project;\n    _this.count = 0;\n    _this.thisArg = thisArg || _this;\n    return _this;\n  }\n\n  MapSubscriber.prototype._next = function (value) {\n    var result;\n\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    this.destination.next(result);\n  };\n\n  return MapSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/map.ts"],"names":[],"mappings":";AACA,OAAO,KAAE,OAAT,MAAqB,OAArB;AA2CA,SAAM,UAAN,QAAiE,eAAjE;AACE,OAAA,SAAO,GAAP,CAAgB,OAAhB,EAAgB,OAAhB,EAA6B;AAC3B,SAAA,SAAW,YAAX,CAAuB,MAAvB,EAAiC;QAC/B,OAAM,OAAN,KAAmB,U,EAAC;AACrB,YAAA,IAAA,SAAA,CAAA,4DAAA,CAAA;AACD;;AACA,WAAA,MAAA,CAAA,IAAA,CAAA,IAAA,WAAA,CAAA,OAAA,EAAA,OAAA,CAAA,CAAA;AACH,GALG;AAOJ;;IACE,WAAA,GAAA,aAA2D,YAAsB;AAA7D,WAAA,WAAA,CAAA,OAAA,EAAuC,OAAvC,EAAuC;AAAU,SAAA,OAAA,GAAA,OAAA;AACpE,SAAA,OAAA,GAAA,OAAA;AAED;;AACE,EAAA,WAAO,CAAA,SAAP,CAAc,IAAd,GAAwB,UAAI,UAAJ,EAAkB,MAAlB,EAA8B;AACvD,WAAA,MAAA,CAAA,SAAA,CAAA,IAAA,aAAA,CAAA,UAAA,EAAA,KAAA,OAAA,EAAA,KAAA,OAAA,CAAA,CAAA;AACH,GAFI;;AAEH,SAAA,WAAA;CAN4D,E;;AAa7D,SAAA,WAAA;;IAAkC,aAAA,GAAA,aAAA,UAAa,MAAb,EAAa;AAI7C,EAAA,OAAA,CAAA,SAAA,CAAA,aAAA,EAAY,MAAZ;;AAAA,WAAA,aAAA,CAGE,WAHF,EAGQ,OAHR,EAGmB,OAHnB,EAGoB;AAFA,QAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAuC,IAAvC,EAAuC,WAAvC,KAAuC,IAAvC;;AAJpB,IAAA,KAAA,CAAA,OAAA,GAAkB,OAAlB;AAOE,IAAA,KAAI,CAAC,KAAL,GAAY,CAAZ;;AACD,WAAA,KAAA;AAID;;AACE,EAAA,aAAI,CAAS,SAAb,CAAc,KAAd,GAAc,UAAA,KAAA,EAAA;AACd,QAAI,MAAJ;;QACE;AACD,MAAA,MAAA,GAAA,KAAA,OAAA,CAAA,IAAA,CAAA,KAAA,OAAA,EAAA,KAAA,EAAA,KAAA,KAAA,EAAA,CAAA;AAAC,K,CACA,OAAA,GAAA,EAAK;AACL,WAAA,WAAA,CAAO,KAAP,CAAO,GAAP;AACD;AACD;;AACD,SAAA,WAAA,CAAA,IAAA,CAAA,MAAA;AACH,GATI;;AAd8B,SAAA,aAAA;CAAA,C,UAAA,C","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nvar MapOperator = /*@__PURE__*/ (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexport { MapOperator };\nvar MapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.count = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber));\n//# sourceMappingURL=map.js.map\n"]},"metadata":{},"sourceType":"module"}