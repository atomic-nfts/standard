{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst error_1 = require(\"./lib/error\");\n\nrequire(\"arconnect\");\n\nclass Blocks {\n  constructor(api, network) {\n    this.api = api;\n    this.network = network;\n  }\n  /**\n   * Gets a block by its \"indep_hash\"\n   */\n\n\n  async get(indepHash) {\n    const response = await this.api.get(`${Blocks.ENDPOINT}${indepHash}`);\n\n    if (response.status === 200) {\n      return response.data;\n    } else {\n      if (response.status === 404) {\n        throw new error_1.default(\"BLOCK_NOT_FOUND\"\n        /* BLOCK_NOT_FOUND */\n        );\n      } else {\n        throw new Error(`Error while loading block data: ${response}`);\n      }\n    }\n  }\n  /**\n   * Gets current block data (ie. block with indep_hash = Network.getInfo().current)\n   */\n\n\n  async getCurrent() {\n    const {\n      current\n    } = await this.network.getInfo();\n    return await this.get(current);\n  }\n\n}\n\nexports.default = Blocks;\nBlocks.ENDPOINT = \"block/hash/\";","map":{"version":3,"sources":["../../../src/common/blocks.ts"],"names":[],"mappings":";;;;;;AACA,MAAA,OAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AAEA,OAAA,CAAA,WAAA,CAAA;;AAwBA,MAAqB,MAArB,CAA2B;AAGzB,EAAA,WAAA,CAA6B,GAA7B,EAAwD,OAAxD,EAAwE;AAA3C,SAAA,GAAA,GAAA,GAAA;AAA2B,SAAA,OAAA,GAAA,OAAA;AAAoB;AAE5E;;AAEG;;;AACa,QAAH,GAAG,CAAC,SAAD,EAAkB;AAChC,UAAM,QAAQ,GAAG,MAAM,KAAK,GAAL,CAAS,GAAT,CACrB,GAAG,MAAM,CAAC,QAAQ,GAAG,SAAS,EADT,CAAvB;;AAGA,QAAI,QAAQ,CAAC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,aAAO,QAAQ,CAAC,IAAhB;AACD,KAFD,MAEO;AACL,UAAI,QAAQ,CAAC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,cAAM,IAAI,OAAA,CAAA,OAAJ,CAAgB;AAAA;AAAhB,SAAN;AACD,OAFD,MAEO;AACL,cAAM,IAAI,KAAJ,CAAU,mCAAmC,QAAQ,EAArD,CAAN;AACD;AACF;AACF;AAED;;AAEG;;;AACoB,QAAV,UAAU,GAAA;AACrB,UAAM;AAAE,MAAA;AAAF,QAAc,MAAM,KAAK,OAAL,CAAa,OAAb,EAA1B;AACA,WAAO,MAAM,KAAK,GAAL,CAAS,OAAT,CAAb;AACD;;AA7BwB;;AAA3B,OAAA,CAAA,OAAA,GAAA,MAAA;AAC0B,MAAA,CAAA,QAAA,GAAW,aAAX","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst error_1 = require(\"./lib/error\");\nrequire(\"arconnect\");\nclass Blocks {\n    constructor(api, network) {\n        this.api = api;\n        this.network = network;\n    }\n    /**\n     * Gets a block by its \"indep_hash\"\n     */\n    async get(indepHash) {\n        const response = await this.api.get(`${Blocks.ENDPOINT}${indepHash}`);\n        if (response.status === 200) {\n            return response.data;\n        }\n        else {\n            if (response.status === 404) {\n                throw new error_1.default(\"BLOCK_NOT_FOUND\" /* BLOCK_NOT_FOUND */);\n            }\n            else {\n                throw new Error(`Error while loading block data: ${response}`);\n            }\n        }\n    }\n    /**\n     * Gets current block data (ie. block with indep_hash = Network.getInfo().current)\n     */\n    async getCurrent() {\n        const { current } = await this.network.getInfo();\n        return await this.get(current);\n    }\n}\nexports.default = Blocks;\nBlocks.ENDPOINT = \"block/hash/\";\n//# sourceMappingURL=blocks.js.map"]},"metadata":{},"sourceType":"script"}