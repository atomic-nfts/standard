{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Arweave as a database.\n * To easily interact with Arweave's graphql endpoint.\n */\n\nclass ArDB {\n  /**\n   *\n   * @param arweave An arweave instance\n   * @param logs Show logs. 0 = false, 1 = true, 2 = if arweave instance has log enabled.\n   */\n  constructor(arweave, logs = 2) {\n    this.reqType = 'transactions';\n    this.options = {};\n    this.logs = 2;\n    this.after = '';\n    this.afterRegex = /after: *\"([^\"]*)\"/gi;\n    this.emptyLinesRegex = /^\\s*[\\r\\n]/gm;\n    this.fields = ['id', 'anchor', 'signature', 'recipient', 'owner', 'owner.address', 'owner.key', 'fee', 'fee.winston', 'fee.ar', 'quantity', 'quantity.winston', 'quantity.ar', 'data', 'data.size', 'data.type', 'tags', 'tags.name', 'tags.value', 'block', 'block.id', 'block.timestamp', 'block.height', 'block.previous', 'parent', 'parent.id'];\n    this.includes = new Set();\n    this.arweave = arweave;\n    this.logs = logs;\n    this.includes = new Set(this.fields);\n  }\n  /**\n   * Search is the first function called before doing a find.\n   * @param type What type of search are we going to do.\n   */\n\n\n  search(type = 'transactions') {\n    this.reqType = type;\n    this.options = {};\n    this.after = '';\n    return this;\n  }\n\n  id(id) {\n    this.checkSearchType();\n    this.options.id = id;\n    this.options.ids = [id];\n    return this;\n  }\n\n  ids(ids) {\n    this.checkSearchType();\n    this.options.ids = ids;\n    this.options.id = ids[0];\n    return this;\n  }\n\n  appName(name) {\n    this.checkSearchType();\n    this.tag('App-Name', [name]);\n    return this;\n  }\n\n  type(type) {\n    this.checkSearchType();\n    this.tag('Content-Type', [type]);\n    return this;\n  }\n\n  tags(tags) {\n    this.checkSearchType();\n    this.options.tags = tags;\n    return this;\n  }\n\n  tag(name, values) {\n    this.checkSearchType();\n\n    if (!this.options.tags) {\n      this.options.tags = [];\n    }\n\n    if (typeof values === 'string') {\n      values = [values];\n    }\n\n    this.options.tags.push({\n      name,\n      values\n    });\n    return this;\n  }\n\n  from(owners) {\n    this.checkSearchType();\n\n    if (typeof owners === 'string') {\n      owners = [owners];\n    }\n\n    this.options.owners = owners;\n    return this;\n  }\n\n  to(recipients) {\n    this.checkSearchType();\n\n    if (typeof recipients === 'string') {\n      recipients = [recipients];\n    }\n\n    this.options.recipients = recipients;\n    return this;\n  }\n\n  min(min) {\n    this.checkSearchType();\n\n    if (!this.options.block) {\n      this.options.block = {};\n    }\n\n    this.options.block.min = min;\n    return this;\n  }\n\n  max(max) {\n    this.checkSearchType();\n\n    if (!this.options.block) {\n      this.options.block = {};\n    }\n\n    this.options.block.max = max;\n    return this;\n  }\n\n  limit(limit) {\n    this.checkSearchType();\n\n    if (limit < 1) {\n      console.warn('Limit cannot be less than 1, setting it to 1.');\n      limit = 1;\n    } else if (limit > 100) {\n      console.warn(\"Arweave GQL won't return more than 100 entries at once.\");\n    }\n\n    this.options.first = limit;\n    return this;\n  }\n\n  sort(sort) {\n    this.options.sort = sort;\n    return this;\n  }\n\n  cursor(after) {\n    this.checkSearchType();\n    this.options.after = after;\n    return this;\n  }\n\n  only(fields) {\n    // Empty the included fields.\n    this.includes = new Set();\n\n    if (typeof fields === 'string' && this.fields.indexOf(fields) !== -1) {\n      this.includes.add(fields);\n      return this;\n    }\n\n    const toInclude = [];\n\n    for (const field of fields) {\n      // @ts-ignore\n      if (this.fields.indexOf(field) !== -1) {\n        // @ts-ignore\n        toInclude.push(field);\n      }\n    }\n\n    if (toInclude.length) {\n      this.includes = new Set(toInclude);\n    }\n\n    this.validateIncludes();\n    return this;\n  }\n\n  exclude(fields) {\n    // To make only() and exclude() work the same, re-add all fields to includes.\n    this.includes = new Set(this.fields);\n\n    if (typeof fields === 'string') {\n      this.includes.delete(fields);\n      return this;\n    }\n\n    for (const field of fields) {\n      this.includes.delete(field);\n    }\n\n    this.validateIncludes();\n    return this;\n  } // Ready to run\n\n\n  find(filters = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.checkSearchType();\n\n      for (const filter of Object.keys(filters)) {\n        this.options[filter] = filters[filter];\n      }\n\n      if (!this.options.first) {\n        this.options.first = 10;\n      }\n\n      const query = this.construct();\n      return this.run(query);\n    });\n  }\n\n  findOne(filters = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.checkSearchType();\n\n      for (const filter of Object.keys(filters)) {\n        this.options[filter] = filters[filter];\n      }\n\n      this.options.first = 1;\n      const query = this.construct();\n      return this.run(query);\n    });\n  }\n\n  findAll(filters = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.checkSearchType();\n\n      for (const filter of Object.keys(filters)) {\n        this.options[filter] = filters[filter];\n      }\n\n      this.options.first = 100;\n      const query = this.construct();\n      return this.runAll(query);\n    });\n  }\n  /**\n   * To run with the cursor\n   */\n\n\n  next() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.after || !this.after.length) {\n        console.warn('next(): Nothing more to search.');\n        return;\n      }\n\n      const query = this.construct().replace(this.afterRegex, `after: \"${this.after}\"`);\n      return this.run(query);\n    });\n  }\n\n  run(query) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.log('Running query:');\n      this.log(query);\n      const res = yield this.get(query);\n\n      if (res.transaction) {\n        return res.transaction;\n      } else if (res.block) {\n        return res.block;\n      } else if (res.transactions) {\n        const edges = res.transactions.edges;\n\n        if (edges && edges.length) {\n          this.after = edges[edges.length - 1].cursor;\n        } else {\n          this.after = '';\n        }\n\n        return edges;\n      } else if (res.blocks) {\n        const edges = res.blocks.edges;\n\n        if (edges && edges.length) {\n          this.after = edges[edges.length - 1].cursor;\n        } else {\n          this.after = '';\n        }\n\n        return edges;\n      }\n    });\n  }\n\n  runAll(query) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let hasNextPage = true;\n      let edges = [];\n      let cursor = this.options.after || '';\n\n      while (hasNextPage) {\n        this.log('Running query:');\n        this.log(query);\n        const res = yield this.get(query);\n\n        if (res.transaction) {\n          return res.transaction;\n        } else if (res.block) {\n          return res.block;\n        } else if (res.transactions) {\n          const r = res.transactions;\n\n          if (r.edges && r.edges.length) {\n            edges = edges.concat(r.edges);\n            cursor = r.edges[r.edges.length - 1].cursor;\n            query = query.replace(this.afterRegex, `after: \"${cursor}\"`);\n          }\n\n          hasNextPage = r.pageInfo.hasNextPage;\n        } else if (res.blocks) {\n          const r = res.blocks;\n\n          if (r.edges && r.edges.length) {\n            edges = edges.concat(r.edges);\n            cursor = r.edges[r.edges.length - 1].cursor;\n            query = query.replace(this.afterRegex, `after: \"${cursor}\"`);\n          }\n\n          hasNextPage = r.pageInfo.hasNextPage;\n        }\n      }\n\n      return edges;\n    });\n  }\n  /** Helpers */\n\n\n  checkSearchType() {\n    if (!this.reqType || this.reqType !== 'transaction' && this.reqType !== 'block' && this.reqType !== 'transactions' && this.reqType !== 'blocks') {\n      throw new Error('Invalid search type. Must provide one and it must be either \"transaction\", \"transactions\", \"block\" or \"blocks\"');\n    }\n  }\n\n  get(query) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const res = yield this.arweave.api.post('graphql', {\n        query\n      }, {\n        headers: {\n          'content-type': 'application/json'\n        }\n      });\n      this.log('Returned result: ');\n      this.log(res.data.data);\n      return res.data.data;\n    });\n  }\n\n  construct() {\n    if (this.reqType === 'transactions' || this.reqType === 'blocks') {\n      delete this.options.id;\n\n      if (this.reqType === 'transactions') {\n        delete this.options.height;\n      } else {\n        delete this.options.owners;\n        delete this.options.recipients;\n        delete this.options.tags;\n        delete this.options.block;\n      }\n\n      if (!this.options.after) {\n        this.options.after = '';\n      }\n    } else {\n      this.options = {\n        id: this.options.id\n      };\n    }\n\n    let params = JSON.stringify(this.options, null, 2).replace(/\"([^\"]+)\":/gm, '$1: ').replace('\"HEIGHT_DESC\"', 'HEIGHT_DESC').replace('\"HEIGHT_ASC\"', 'HEIGHT_ASC');\n    params = params.substring(1, params.length - 1);\n    let fields = '';\n\n    if (this.reqType === 'transaction' || this.reqType === 'transactions') {\n      let owner = '';\n\n      if (this.includes.has('owner')) {\n        owner = `owner {\n          ${this.includes.has('owner.address') ? 'address' : ''}\n          ${this.includes.has('owner.key') ? 'key' : ''}\n        }`;\n      }\n\n      let fee = '';\n\n      if (this.includes.has('fee')) {\n        fee = `fee {\n          ${this.includes.has('fee.winston') ? 'winston' : ''}\n          ${this.includes.has('fee.ar') ? 'ar' : ''}\n        }`;\n      }\n\n      let quantity = '';\n\n      if (this.includes.has('quantity')) {\n        quantity = `quantity {\n          ${this.includes.has('quantity.winston') ? 'winston' : ''}\n          ${this.includes.has('quantity.ar') ? 'ar' : ''}\n        }`;\n      }\n\n      let data = '';\n\n      if (this.includes.has('data')) {\n        data = `data {\n          ${this.includes.has('data.size') ? 'size' : ''}\n          ${this.includes.has('data.type') ? 'type' : ''}\n        }`;\n      }\n\n      let tags = '';\n\n      if (this.includes.has('tags')) {\n        tags = `tags {\n          ${this.includes.has('tags.name') ? 'name' : ''}\n          ${this.includes.has('tags.value') ? 'value' : ''}\n        }`;\n      }\n\n      let block = '';\n\n      if (this.includes.has('block')) {\n        block = `block {\n          ${this.includes.has('block.id') ? 'id' : ''}\n          ${this.includes.has('block.timestamp') ? 'timestamp' : ''}\n          ${this.includes.has('block.height') ? 'height' : ''}\n          ${this.includes.has('block.previous') ? 'previous' : ''}\n        }`;\n      }\n\n      let parent = '';\n\n      if (this.includes.has('parent') || this.includes.has('parent.id')) {\n        // Parent only has an ID, so if one of them is included, add both.\n        parent = `parent {\n          id\n        }`;\n      }\n\n      fields = `\n      ${this.includes.has('id') ? 'id' : ''}\n      ${this.includes.has('anchor') ? 'anchor' : ''}\n      ${this.includes.has('signature') ? 'signature' : ''}\n      ${this.includes.has('recipient') ? 'recipient' : ''}\n      ${owner}\n      ${fee}\n      ${quantity}\n      ${data}\n      ${tags}\n      ${block}\n      ${parent}\n      `;\n      fields = fields.replace(this.emptyLinesRegex, '').trim();\n\n      if (!fields.length) {\n        fields = `\n        id\n        anchor\n        signature\n        recipient\n        owner {\n          address\n          key\n        }\n        fee {\n          winston\n          ar\n        }\n        quantity {\n          winston\n          ar\n        }\n        data {\n          size\n          type\n        }\n        tags {\n          name\n          value\n        }\n        block {\n          id\n          timestamp\n          height\n          previous\n        }\n        parent {\n          id\n        }`;\n      }\n    } else {\n      fields = `\n      ${this.includes.has('block.id') ? 'id' : ''}\n      ${this.includes.has('block.timestamp') ? 'timestamp' : ''}\n      ${this.includes.has('block.height') ? 'height' : ''}\n      ${this.includes.has('block.previous') ? 'previous' : ''}\n      `;\n      fields = fields.replace(this.emptyLinesRegex, '').trim();\n\n      if (!fields.length) {\n        fields = `\n        id\n        timestamp\n        height\n        previous`;\n      }\n    }\n\n    if (this.reqType === 'transactions' || this.reqType === 'blocks') {\n      fields = `\n      pageInfo {\n        hasNextPage\n      }\n      edges { \n        cursor\n        node { \n          ${fields}\n        } \n      }`;\n    }\n\n    if (!this.reqType || !params) {\n      throw new Error('Invalid options. You need to first set your options!');\n    }\n\n    return `query {\n      ${this.reqType}(\n        ${params}\n      ){\n        ${fields}\n      }\n    }`;\n  }\n\n  log(str) {\n    if (this.logs === 1 || this.logs === 2 && this.arweave.getConfig().api.logging) {\n      console.log(str);\n    }\n  }\n\n  validateIncludes() {\n    // Add all children if all of them are missing but a parent is present.\n    if (this.includes.has('owner') && !this.includes.has('owner.address') && !this.includes.has('owner.key')) {\n      this.includes.add('owner.address');\n      this.includes.add('owner.key');\n    } else if (this.includes.has('fee') && !this.includes.has('fee.winston') && !this.includes.has('fee.ar')) {\n      this.includes.add('fee.winston');\n      this.includes.add('fee.ar');\n    } else if (this.includes.has('quantity') && !this.includes.has('quantity.winston') && !this.includes.has('quantity.ar')) {\n      this.includes.add('quantity.winston');\n      this.includes.add('quantity.ar');\n    } else if (this.includes.has('data') && !this.includes.has('data.size') && !this.includes.has('data.type')) {\n      this.includes.add('data.size');\n      this.includes.add('data.type');\n    } else if (this.includes.has('tags') && !this.includes.has('tags.name') && !this.includes.has('tags.value')) {\n      this.includes.add('tags.name');\n      this.includes.add('tags.value');\n    } else if (this.includes.has('block') && !this.includes.has('block.timestamp') && !this.includes.has('block.height') && !this.includes.has('block.previous')) {\n      this.includes.add('block.id');\n      this.includes.add('block.timestamp');\n      this.includes.add('block.height');\n      this.includes.add('block.previous');\n    } // Add a parent if one of the children is present but the parent is not\n\n\n    if (!this.includes.has('owner') && (this.includes.has('owner.address') || this.includes.has('owner.key'))) {\n      this.includes.add('owner');\n    } else if (!this.includes.has('fee') && (this.includes.has('fee.winston') || this.includes.has('fee.ar'))) {\n      this.includes.add('fee');\n    } else if (!this.includes.has('quantity') && (this.includes.has('quantity.winston') || this.includes.has('quantity.ar'))) {\n      this.includes.add('quantity');\n    } else if (!this.includes.has('data') && (this.includes.has('data.size') || this.includes.has('data.type'))) {\n      this.includes.add('data');\n    } else if (!this.includes.has('tags') && (this.includes.has('tags.name') || this.includes.has('tags.value'))) {\n      this.includes.add('tags');\n    } else if (!this.includes.has('block') && (this.includes.has('block.timestamp') || this.includes.has('block.height') || this.includes.has('block.previous'))) {\n      this.includes.add('block');\n    }\n  }\n\n}\n\nexports.default = ArDB;","map":{"version":3,"sources":["/home/al/Desktop/koi/narcissus/content/node_modules/ardb/lib/ardb.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","ArDB","constructor","arweave","logs","reqType","options","after","afterRegex","emptyLinesRegex","fields","includes","Set","search","type","id","checkSearchType","ids","appName","name","tag","tags","values","push","from","owners","to","recipients","min","block","max","limit","console","warn","first","sort","cursor","only","indexOf","add","toInclude","field","length","validateIncludes","exclude","delete","find","filters","filter","keys","query","construct","run","findOne","findAll","runAll","replace","log","res","get","transaction","transactions","edges","blocks","hasNextPage","r","concat","pageInfo","Error","api","post","headers","data","height","params","JSON","stringify","substring","owner","has","fee","quantity","parent","trim","str","getConfig","logging","default"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Arweave as a database.\n * To easily interact with Arweave's graphql endpoint.\n */\nclass ArDB {\n    /**\n     *\n     * @param arweave An arweave instance\n     * @param logs Show logs. 0 = false, 1 = true, 2 = if arweave instance has log enabled.\n     */\n    constructor(arweave, logs = 2) {\n        this.reqType = 'transactions';\n        this.options = {};\n        this.logs = 2;\n        this.after = '';\n        this.afterRegex = /after: *\"([^\"]*)\"/gi;\n        this.emptyLinesRegex = /^\\s*[\\r\\n]/gm;\n        this.fields = [\n            'id',\n            'anchor',\n            'signature',\n            'recipient',\n            'owner',\n            'owner.address',\n            'owner.key',\n            'fee',\n            'fee.winston',\n            'fee.ar',\n            'quantity',\n            'quantity.winston',\n            'quantity.ar',\n            'data',\n            'data.size',\n            'data.type',\n            'tags',\n            'tags.name',\n            'tags.value',\n            'block',\n            'block.id',\n            'block.timestamp',\n            'block.height',\n            'block.previous',\n            'parent',\n            'parent.id',\n        ];\n        this.includes = new Set();\n        this.arweave = arweave;\n        this.logs = logs;\n        this.includes = new Set(this.fields);\n    }\n    /**\n     * Search is the first function called before doing a find.\n     * @param type What type of search are we going to do.\n     */\n    search(type = 'transactions') {\n        this.reqType = type;\n        this.options = {};\n        this.after = '';\n        return this;\n    }\n    id(id) {\n        this.checkSearchType();\n        this.options.id = id;\n        this.options.ids = [id];\n        return this;\n    }\n    ids(ids) {\n        this.checkSearchType();\n        this.options.ids = ids;\n        this.options.id = ids[0];\n        return this;\n    }\n    appName(name) {\n        this.checkSearchType();\n        this.tag('App-Name', [name]);\n        return this;\n    }\n    type(type) {\n        this.checkSearchType();\n        this.tag('Content-Type', [type]);\n        return this;\n    }\n    tags(tags) {\n        this.checkSearchType();\n        this.options.tags = tags;\n        return this;\n    }\n    tag(name, values) {\n        this.checkSearchType();\n        if (!this.options.tags) {\n            this.options.tags = [];\n        }\n        if (typeof values === 'string') {\n            values = [values];\n        }\n        this.options.tags.push({ name, values });\n        return this;\n    }\n    from(owners) {\n        this.checkSearchType();\n        if (typeof owners === 'string') {\n            owners = [owners];\n        }\n        this.options.owners = owners;\n        return this;\n    }\n    to(recipients) {\n        this.checkSearchType();\n        if (typeof recipients === 'string') {\n            recipients = [recipients];\n        }\n        this.options.recipients = recipients;\n        return this;\n    }\n    min(min) {\n        this.checkSearchType();\n        if (!this.options.block) {\n            this.options.block = {};\n        }\n        this.options.block.min = min;\n        return this;\n    }\n    max(max) {\n        this.checkSearchType();\n        if (!this.options.block) {\n            this.options.block = {};\n        }\n        this.options.block.max = max;\n        return this;\n    }\n    limit(limit) {\n        this.checkSearchType();\n        if (limit < 1) {\n            console.warn('Limit cannot be less than 1, setting it to 1.');\n            limit = 1;\n        }\n        else if (limit > 100) {\n            console.warn(\"Arweave GQL won't return more than 100 entries at once.\");\n        }\n        this.options.first = limit;\n        return this;\n    }\n    sort(sort) {\n        this.options.sort = sort;\n        return this;\n    }\n    cursor(after) {\n        this.checkSearchType();\n        this.options.after = after;\n        return this;\n    }\n    only(fields) {\n        // Empty the included fields.\n        this.includes = new Set();\n        if (typeof fields === 'string' && this.fields.indexOf(fields) !== -1) {\n            this.includes.add(fields);\n            return this;\n        }\n        const toInclude = [];\n        for (const field of fields) {\n            // @ts-ignore\n            if (this.fields.indexOf(field) !== -1) {\n                // @ts-ignore\n                toInclude.push(field);\n            }\n        }\n        if (toInclude.length) {\n            this.includes = new Set(toInclude);\n        }\n        this.validateIncludes();\n        return this;\n    }\n    exclude(fields) {\n        // To make only() and exclude() work the same, re-add all fields to includes.\n        this.includes = new Set(this.fields);\n        if (typeof fields === 'string') {\n            this.includes.delete(fields);\n            return this;\n        }\n        for (const field of fields) {\n            this.includes.delete(field);\n        }\n        this.validateIncludes();\n        return this;\n    }\n    // Ready to run\n    find(filters = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.checkSearchType();\n            for (const filter of Object.keys(filters)) {\n                this.options[filter] = filters[filter];\n            }\n            if (!this.options.first) {\n                this.options.first = 10;\n            }\n            const query = this.construct();\n            return this.run(query);\n        });\n    }\n    findOne(filters = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.checkSearchType();\n            for (const filter of Object.keys(filters)) {\n                this.options[filter] = filters[filter];\n            }\n            this.options.first = 1;\n            const query = this.construct();\n            return this.run(query);\n        });\n    }\n    findAll(filters = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.checkSearchType();\n            for (const filter of Object.keys(filters)) {\n                this.options[filter] = filters[filter];\n            }\n            this.options.first = 100;\n            const query = this.construct();\n            return this.runAll(query);\n        });\n    }\n    /**\n     * To run with the cursor\n     */\n    next() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.after || !this.after.length) {\n                console.warn('next(): Nothing more to search.');\n                return;\n            }\n            const query = this.construct().replace(this.afterRegex, `after: \"${this.after}\"`);\n            return this.run(query);\n        });\n    }\n    run(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.log('Running query:');\n            this.log(query);\n            const res = yield this.get(query);\n            if (res.transaction) {\n                return res.transaction;\n            }\n            else if (res.block) {\n                return res.block;\n            }\n            else if (res.transactions) {\n                const edges = res.transactions.edges;\n                if (edges && edges.length) {\n                    this.after = edges[edges.length - 1].cursor;\n                }\n                else {\n                    this.after = '';\n                }\n                return edges;\n            }\n            else if (res.blocks) {\n                const edges = res.blocks.edges;\n                if (edges && edges.length) {\n                    this.after = edges[edges.length - 1].cursor;\n                }\n                else {\n                    this.after = '';\n                }\n                return edges;\n            }\n        });\n    }\n    runAll(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let hasNextPage = true;\n            let edges = [];\n            let cursor = this.options.after || '';\n            while (hasNextPage) {\n                this.log('Running query:');\n                this.log(query);\n                const res = yield this.get(query);\n                if (res.transaction) {\n                    return res.transaction;\n                }\n                else if (res.block) {\n                    return res.block;\n                }\n                else if (res.transactions) {\n                    const r = res.transactions;\n                    if (r.edges && r.edges.length) {\n                        edges = edges.concat(r.edges);\n                        cursor = r.edges[r.edges.length - 1].cursor;\n                        query = query.replace(this.afterRegex, `after: \"${cursor}\"`);\n                    }\n                    hasNextPage = r.pageInfo.hasNextPage;\n                }\n                else if (res.blocks) {\n                    const r = res.blocks;\n                    if (r.edges && r.edges.length) {\n                        edges = edges.concat(r.edges);\n                        cursor = r.edges[r.edges.length - 1].cursor;\n                        query = query.replace(this.afterRegex, `after: \"${cursor}\"`);\n                    }\n                    hasNextPage = r.pageInfo.hasNextPage;\n                }\n            }\n            return edges;\n        });\n    }\n    /** Helpers */\n    checkSearchType() {\n        if (!this.reqType ||\n            (this.reqType !== 'transaction' &&\n                this.reqType !== 'block' &&\n                this.reqType !== 'transactions' &&\n                this.reqType !== 'blocks')) {\n            throw new Error('Invalid search type. Must provide one and it must be either \"transaction\", \"transactions\", \"block\" or \"blocks\"');\n        }\n    }\n    get(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.arweave.api.post('graphql', { query }, { headers: { 'content-type': 'application/json' } });\n            this.log('Returned result: ');\n            this.log(res.data.data);\n            return res.data.data;\n        });\n    }\n    construct() {\n        if (this.reqType === 'transactions' || this.reqType === 'blocks') {\n            delete this.options.id;\n            if (this.reqType === 'transactions') {\n                delete this.options.height;\n            }\n            else {\n                delete this.options.owners;\n                delete this.options.recipients;\n                delete this.options.tags;\n                delete this.options.block;\n            }\n            if (!this.options.after) {\n                this.options.after = '';\n            }\n        }\n        else {\n            this.options = { id: this.options.id };\n        }\n        let params = JSON.stringify(this.options, null, 2)\n            .replace(/\"([^\"]+)\":/gm, '$1: ')\n            .replace('\"HEIGHT_DESC\"', 'HEIGHT_DESC')\n            .replace('\"HEIGHT_ASC\"', 'HEIGHT_ASC');\n        params = params.substring(1, params.length - 1);\n        let fields = '';\n        if (this.reqType === 'transaction' || this.reqType === 'transactions') {\n            let owner = '';\n            if (this.includes.has('owner')) {\n                owner = `owner {\n          ${this.includes.has('owner.address') ? 'address' : ''}\n          ${this.includes.has('owner.key') ? 'key' : ''}\n        }`;\n            }\n            let fee = '';\n            if (this.includes.has('fee')) {\n                fee = `fee {\n          ${this.includes.has('fee.winston') ? 'winston' : ''}\n          ${this.includes.has('fee.ar') ? 'ar' : ''}\n        }`;\n            }\n            let quantity = '';\n            if (this.includes.has('quantity')) {\n                quantity = `quantity {\n          ${this.includes.has('quantity.winston') ? 'winston' : ''}\n          ${this.includes.has('quantity.ar') ? 'ar' : ''}\n        }`;\n            }\n            let data = '';\n            if (this.includes.has('data')) {\n                data = `data {\n          ${this.includes.has('data.size') ? 'size' : ''}\n          ${this.includes.has('data.type') ? 'type' : ''}\n        }`;\n            }\n            let tags = '';\n            if (this.includes.has('tags')) {\n                tags = `tags {\n          ${this.includes.has('tags.name') ? 'name' : ''}\n          ${this.includes.has('tags.value') ? 'value' : ''}\n        }`;\n            }\n            let block = '';\n            if (this.includes.has('block')) {\n                block = `block {\n          ${this.includes.has('block.id') ? 'id' : ''}\n          ${this.includes.has('block.timestamp') ? 'timestamp' : ''}\n          ${this.includes.has('block.height') ? 'height' : ''}\n          ${this.includes.has('block.previous') ? 'previous' : ''}\n        }`;\n            }\n            let parent = '';\n            if (this.includes.has('parent') || this.includes.has('parent.id')) {\n                // Parent only has an ID, so if one of them is included, add both.\n                parent = `parent {\n          id\n        }`;\n            }\n            fields = `\n      ${this.includes.has('id') ? 'id' : ''}\n      ${this.includes.has('anchor') ? 'anchor' : ''}\n      ${this.includes.has('signature') ? 'signature' : ''}\n      ${this.includes.has('recipient') ? 'recipient' : ''}\n      ${owner}\n      ${fee}\n      ${quantity}\n      ${data}\n      ${tags}\n      ${block}\n      ${parent}\n      `;\n            fields = fields.replace(this.emptyLinesRegex, '').trim();\n            if (!fields.length) {\n                fields = `\n        id\n        anchor\n        signature\n        recipient\n        owner {\n          address\n          key\n        }\n        fee {\n          winston\n          ar\n        }\n        quantity {\n          winston\n          ar\n        }\n        data {\n          size\n          type\n        }\n        tags {\n          name\n          value\n        }\n        block {\n          id\n          timestamp\n          height\n          previous\n        }\n        parent {\n          id\n        }`;\n            }\n        }\n        else {\n            fields = `\n      ${this.includes.has('block.id') ? 'id' : ''}\n      ${this.includes.has('block.timestamp') ? 'timestamp' : ''}\n      ${this.includes.has('block.height') ? 'height' : ''}\n      ${this.includes.has('block.previous') ? 'previous' : ''}\n      `;\n            fields = fields.replace(this.emptyLinesRegex, '').trim();\n            if (!fields.length) {\n                fields = `\n        id\n        timestamp\n        height\n        previous`;\n            }\n        }\n        if (this.reqType === 'transactions' || this.reqType === 'blocks') {\n            fields = `\n      pageInfo {\n        hasNextPage\n      }\n      edges { \n        cursor\n        node { \n          ${fields}\n        } \n      }`;\n        }\n        if (!this.reqType || !params) {\n            throw new Error('Invalid options. You need to first set your options!');\n        }\n        return `query {\n      ${this.reqType}(\n        ${params}\n      ){\n        ${fields}\n      }\n    }`;\n    }\n    log(str) {\n        if (this.logs === 1 || (this.logs === 2 && this.arweave.getConfig().api.logging)) {\n            console.log(str);\n        }\n    }\n    validateIncludes() {\n        // Add all children if all of them are missing but a parent is present.\n        if (this.includes.has('owner') && !this.includes.has('owner.address') && !this.includes.has('owner.key')) {\n            this.includes.add('owner.address');\n            this.includes.add('owner.key');\n        }\n        else if (this.includes.has('fee') && !this.includes.has('fee.winston') && !this.includes.has('fee.ar')) {\n            this.includes.add('fee.winston');\n            this.includes.add('fee.ar');\n        }\n        else if (this.includes.has('quantity') &&\n            !this.includes.has('quantity.winston') &&\n            !this.includes.has('quantity.ar')) {\n            this.includes.add('quantity.winston');\n            this.includes.add('quantity.ar');\n        }\n        else if (this.includes.has('data') && !this.includes.has('data.size') && !this.includes.has('data.type')) {\n            this.includes.add('data.size');\n            this.includes.add('data.type');\n        }\n        else if (this.includes.has('tags') && !this.includes.has('tags.name') && !this.includes.has('tags.value')) {\n            this.includes.add('tags.name');\n            this.includes.add('tags.value');\n        }\n        else if (this.includes.has('block') &&\n            !this.includes.has('block.timestamp') &&\n            !this.includes.has('block.height') &&\n            !this.includes.has('block.previous')) {\n            this.includes.add('block.id');\n            this.includes.add('block.timestamp');\n            this.includes.add('block.height');\n            this.includes.add('block.previous');\n        }\n        // Add a parent if one of the children is present but the parent is not\n        if (!this.includes.has('owner') && (this.includes.has('owner.address') || this.includes.has('owner.key'))) {\n            this.includes.add('owner');\n        }\n        else if (!this.includes.has('fee') && (this.includes.has('fee.winston') || this.includes.has('fee.ar'))) {\n            this.includes.add('fee');\n        }\n        else if (!this.includes.has('quantity') &&\n            (this.includes.has('quantity.winston') || this.includes.has('quantity.ar'))) {\n            this.includes.add('quantity');\n        }\n        else if (!this.includes.has('data') && (this.includes.has('data.size') || this.includes.has('data.type'))) {\n            this.includes.add('data');\n        }\n        else if (!this.includes.has('tags') && (this.includes.has('tags.name') || this.includes.has('tags.value'))) {\n            this.includes.add('tags');\n        }\n        else if (!this.includes.has('block') &&\n            (this.includes.has('block.timestamp') || this.includes.has('block.height') || this.includes.has('block.previous'))) {\n            this.includes.add('block');\n        }\n    }\n}\nexports.default = ArDB;\n"]},"metadata":{},"sourceType":"script"}