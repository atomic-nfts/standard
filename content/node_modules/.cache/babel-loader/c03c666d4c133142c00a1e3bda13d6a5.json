{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/al/Desktop/koi/narcissus/content/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/al/Desktop/koi/narcissus/content/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _assertThisInitialized = require(\"/home/al/Desktop/koi/narcissus/content/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"/home/al/Desktop/koi/narcissus/content/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/al/Desktop/koi/narcissus/content/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _classCallCheck = require(\"/home/al/Desktop/koi/narcissus/content/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/al/Desktop/koi/narcissus/content/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Tag = void 0;\n\nvar ArweaveUtils = __importStar(require(\"./utils\"));\n\nvar deepHash_1 = __importDefault(require(\"./deepHash\"));\n\nvar merkle_1 = require(\"./merkle\");\n\nvar BaseObject = /*#__PURE__*/function () {\n  function BaseObject() {\n    _classCallCheck(this, BaseObject);\n  }\n\n  _createClass(BaseObject, [{\n    key: \"get\",\n    value: function get(field, options) {\n      if (!Object.getOwnPropertyNames(this).includes(field)) {\n        throw new Error(\"Field \\\"\".concat(field, \"\\\" is not a property of the Arweave Transaction class.\"));\n      } // Handle fields that are Uint8Arrays.\n      // To maintain compat we encode them to b64url\n      // if decode option is not specificed.\n\n\n      if (this[field] instanceof Uint8Array) {\n        if (options && options.decode && options.string) {\n          return ArweaveUtils.bufferToString(this[field]);\n        }\n\n        if (options && options.decode && !options.string) {\n          return this[field];\n        }\n\n        return ArweaveUtils.bufferTob64Url(this[field]);\n      }\n\n      if (options && options.decode == true) {\n        if (options && options.string) {\n          return ArweaveUtils.b64UrlToString(this[field]);\n        }\n\n        return ArweaveUtils.b64UrlToBuffer(this[field]);\n      }\n\n      return this[field];\n    }\n  }]);\n\n  return BaseObject;\n}();\n\nvar Tag = /*#__PURE__*/function (_BaseObject) {\n  _inherits(Tag, _BaseObject);\n\n  var _super = _createSuper(Tag);\n\n  function Tag(name, value) {\n    var _this;\n\n    var decode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    _classCallCheck(this, Tag);\n\n    _this = _super.call(this);\n    _this.name = name;\n    _this.value = value;\n    return _this;\n  }\n\n  return Tag;\n}(BaseObject);\n\nexports.Tag = Tag;\n\nvar Transaction = /*#__PURE__*/function (_BaseObject2) {\n  _inherits(Transaction, _BaseObject2);\n\n  var _super2 = _createSuper(Transaction);\n\n  function Transaction() {\n    var _this2;\n\n    var attributes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Transaction);\n\n    _this2 = _super2.call(this);\n    _this2.format = 2;\n    _this2.id = \"\";\n    _this2.last_tx = \"\";\n    _this2.owner = \"\";\n    _this2.tags = [];\n    _this2.target = \"\";\n    _this2.quantity = \"0\";\n    _this2.data_size = \"0\";\n    _this2.data = new Uint8Array();\n    _this2.data_root = \"\";\n    _this2.reward = \"0\";\n    _this2.signature = \"\";\n    Object.assign(_assertThisInitialized(_this2), attributes); // If something passes in a Tx that has been toJSON'ed and back,\n    // or where the data was filled in from /tx/data endpoint.\n    // data will be b64url encoded, so decode it.\n\n    if (typeof _this2.data === \"string\") {\n      _this2.data = ArweaveUtils.b64UrlToBuffer(_this2.data);\n    }\n\n    if (attributes.tags) {\n      _this2.tags = attributes.tags.map(function (tag) {\n        return new Tag(tag.name, tag.value);\n      });\n    }\n\n    return _this2;\n  }\n\n  _createClass(Transaction, [{\n    key: \"addTag\",\n    value: function addTag(name, value) {\n      this.tags.push(new Tag(ArweaveUtils.stringToB64Url(name), ArweaveUtils.stringToB64Url(value)));\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        format: this.format,\n        id: this.id,\n        last_tx: this.last_tx,\n        owner: this.owner,\n        tags: this.tags,\n        target: this.target,\n        quantity: this.quantity,\n        data: ArweaveUtils.bufferTob64Url(this.data),\n        data_size: this.data_size,\n        data_root: this.data_root,\n        data_tree: this.data_tree,\n        reward: this.reward,\n        signature: this.signature\n      };\n    }\n  }, {\n    key: \"setOwner\",\n    value: function setOwner(owner) {\n      this.owner = owner;\n    }\n  }, {\n    key: \"setSignature\",\n    value: function setSignature(_ref) {\n      var id = _ref.id,\n          owner = _ref.owner,\n          tags = _ref.tags,\n          signature = _ref.signature;\n      this.id = id;\n      this.owner = owner;\n      if (tags) this.tags = tags;\n      this.signature = signature;\n    }\n  }, {\n    key: \"prepareChunks\",\n    value: function () {\n      var _prepareChunks = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(!this.chunks && data.byteLength > 0)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 3;\n                return merkle_1.generateTransactionChunks(data);\n\n              case 3:\n                this.chunks = _context.sent;\n                this.data_root = ArweaveUtils.bufferTob64Url(this.chunks.data_root);\n\n              case 5:\n                if (!this.chunks && data.byteLength === 0) {\n                  this.chunks = {\n                    chunks: [],\n                    data_root: new Uint8Array(),\n                    proofs: []\n                  };\n                  this.data_root = \"\";\n                }\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function prepareChunks(_x) {\n        return _prepareChunks.apply(this, arguments);\n      }\n\n      return prepareChunks;\n    }() // Returns a chunk in a format suitable for posting to /chunk.\n    // Similar to `prepareChunks()` this does not operate `this.data`,\n    // instead using the data passed in.\n\n  }, {\n    key: \"getChunk\",\n    value: function getChunk(idx, data) {\n      if (!this.chunks) {\n        throw new Error(\"Chunks have not been prepared\");\n      }\n\n      var proof = this.chunks.proofs[idx];\n      var chunk = this.chunks.chunks[idx];\n      return {\n        data_root: this.data_root,\n        data_size: this.data_size,\n        data_path: ArweaveUtils.bufferTob64Url(proof.proof),\n        offset: proof.offset.toString(),\n        chunk: ArweaveUtils.bufferTob64Url(data.slice(chunk.minByteRange, chunk.maxByteRange))\n      };\n    }\n  }, {\n    key: \"getSignatureData\",\n    value: function () {\n      var _getSignatureData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var tags, tagList;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.t0 = this.format;\n                _context2.next = _context2.t0 === 1 ? 3 : _context2.t0 === 2 ? 5 : 11;\n                break;\n\n              case 3:\n                tags = this.tags.reduce(function (accumulator, tag) {\n                  return ArweaveUtils.concatBuffers([accumulator, tag.get(\"name\", {\n                    decode: true,\n                    string: false\n                  }), tag.get(\"value\", {\n                    decode: true,\n                    string: false\n                  })]);\n                }, new Uint8Array());\n                return _context2.abrupt(\"return\", ArweaveUtils.concatBuffers([this.get(\"owner\", {\n                  decode: true,\n                  string: false\n                }), this.get(\"target\", {\n                  decode: true,\n                  string: false\n                }), this.get(\"data\", {\n                  decode: true,\n                  string: false\n                }), ArweaveUtils.stringToBuffer(this.quantity), ArweaveUtils.stringToBuffer(this.reward), this.get(\"last_tx\", {\n                  decode: true,\n                  string: false\n                }), tags]));\n\n              case 5:\n                _context2.next = 7;\n                return this.prepareChunks(this.data);\n\n              case 7:\n                tagList = this.tags.map(function (tag) {\n                  return [tag.get(\"name\", {\n                    decode: true,\n                    string: false\n                  }), tag.get(\"value\", {\n                    decode: true,\n                    string: false\n                  })];\n                });\n                _context2.next = 10;\n                return deepHash_1.default([ArweaveUtils.stringToBuffer(this.format.toString()), this.get(\"owner\", {\n                  decode: true,\n                  string: false\n                }), this.get(\"target\", {\n                  decode: true,\n                  string: false\n                }), ArweaveUtils.stringToBuffer(this.quantity), ArweaveUtils.stringToBuffer(this.reward), this.get(\"last_tx\", {\n                  decode: true,\n                  string: false\n                }), tagList, ArweaveUtils.stringToBuffer(this.data_size), this.get(\"data_root\", {\n                  decode: true,\n                  string: false\n                })]);\n\n              case 10:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 11:\n                throw new Error(\"Unexpected transaction format: \".concat(this.format));\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getSignatureData() {\n        return _getSignatureData.apply(this, arguments);\n      }\n\n      return getSignatureData;\n    }()\n  }]);\n\n  return Transaction;\n}(BaseObject);\n\nexports.default = Transaction;","map":{"version":3,"sources":["../../../../src/common/lib/transaction.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tag = void 0;\nconst ArweaveUtils = __importStar(require(\"./utils\"));\nconst deepHash_1 = __importDefault(require(\"./deepHash\"));\nconst merkle_1 = require(\"./merkle\");\nclass BaseObject {\n    get(field, options) {\n        if (!Object.getOwnPropertyNames(this).includes(field)) {\n            throw new Error(`Field \"${field}\" is not a property of the Arweave Transaction class.`);\n        }\n        // Handle fields that are Uint8Arrays.\n        // To maintain compat we encode them to b64url\n        // if decode option is not specificed.\n        if (this[field] instanceof Uint8Array) {\n            if (options && options.decode && options.string) {\n                return ArweaveUtils.bufferToString(this[field]);\n            }\n            if (options && options.decode && !options.string) {\n                return this[field];\n            }\n            return ArweaveUtils.bufferTob64Url(this[field]);\n        }\n        if (options && options.decode == true) {\n            if (options && options.string) {\n                return ArweaveUtils.b64UrlToString(this[field]);\n            }\n            return ArweaveUtils.b64UrlToBuffer(this[field]);\n        }\n        return this[field];\n    }\n}\nclass Tag extends BaseObject {\n    constructor(name, value, decode = false) {\n        super();\n        this.name = name;\n        this.value = value;\n    }\n}\nexports.Tag = Tag;\nclass Transaction extends BaseObject {\n    constructor(attributes = {}) {\n        super();\n        this.format = 2;\n        this.id = \"\";\n        this.last_tx = \"\";\n        this.owner = \"\";\n        this.tags = [];\n        this.target = \"\";\n        this.quantity = \"0\";\n        this.data_size = \"0\";\n        this.data = new Uint8Array();\n        this.data_root = \"\";\n        this.reward = \"0\";\n        this.signature = \"\";\n        Object.assign(this, attributes);\n        // If something passes in a Tx that has been toJSON'ed and back,\n        // or where the data was filled in from /tx/data endpoint.\n        // data will be b64url encoded, so decode it.\n        if (typeof this.data === \"string\") {\n            this.data = ArweaveUtils.b64UrlToBuffer(this.data);\n        }\n        if (attributes.tags) {\n            this.tags = attributes.tags.map((tag) => {\n                return new Tag(tag.name, tag.value);\n            });\n        }\n    }\n    addTag(name, value) {\n        this.tags.push(new Tag(ArweaveUtils.stringToB64Url(name), ArweaveUtils.stringToB64Url(value)));\n    }\n    toJSON() {\n        return {\n            format: this.format,\n            id: this.id,\n            last_tx: this.last_tx,\n            owner: this.owner,\n            tags: this.tags,\n            target: this.target,\n            quantity: this.quantity,\n            data: ArweaveUtils.bufferTob64Url(this.data),\n            data_size: this.data_size,\n            data_root: this.data_root,\n            data_tree: this.data_tree,\n            reward: this.reward,\n            signature: this.signature,\n        };\n    }\n    setOwner(owner) {\n        this.owner = owner;\n    }\n    setSignature({ id, owner, tags, signature, }) {\n        this.id = id;\n        this.owner = owner;\n        if (tags)\n            this.tags = tags;\n        this.signature = signature;\n    }\n    async prepareChunks(data) {\n        // Note: we *do not* use `this.data`, the caller may be\n        // operating on a transaction with an zero length data field.\n        // This function computes the chunks for the data passed in and\n        // assigns the result to this transaction. It should not read the\n        // data *from* this transaction.\n        if (!this.chunks && data.byteLength > 0) {\n            this.chunks = await merkle_1.generateTransactionChunks(data);\n            this.data_root = ArweaveUtils.bufferTob64Url(this.chunks.data_root);\n        }\n        if (!this.chunks && data.byteLength === 0) {\n            this.chunks = {\n                chunks: [],\n                data_root: new Uint8Array(),\n                proofs: [],\n            };\n            this.data_root = \"\";\n        }\n    }\n    // Returns a chunk in a format suitable for posting to /chunk.\n    // Similar to `prepareChunks()` this does not operate `this.data`,\n    // instead using the data passed in.\n    getChunk(idx, data) {\n        if (!this.chunks) {\n            throw new Error(`Chunks have not been prepared`);\n        }\n        const proof = this.chunks.proofs[idx];\n        const chunk = this.chunks.chunks[idx];\n        return {\n            data_root: this.data_root,\n            data_size: this.data_size,\n            data_path: ArweaveUtils.bufferTob64Url(proof.proof),\n            offset: proof.offset.toString(),\n            chunk: ArweaveUtils.bufferTob64Url(data.slice(chunk.minByteRange, chunk.maxByteRange)),\n        };\n    }\n    async getSignatureData() {\n        switch (this.format) {\n            case 1:\n                let tags = this.tags.reduce((accumulator, tag) => {\n                    return ArweaveUtils.concatBuffers([\n                        accumulator,\n                        tag.get(\"name\", { decode: true, string: false }),\n                        tag.get(\"value\", { decode: true, string: false }),\n                    ]);\n                }, new Uint8Array());\n                return ArweaveUtils.concatBuffers([\n                    this.get(\"owner\", { decode: true, string: false }),\n                    this.get(\"target\", { decode: true, string: false }),\n                    this.get(\"data\", { decode: true, string: false }),\n                    ArweaveUtils.stringToBuffer(this.quantity),\n                    ArweaveUtils.stringToBuffer(this.reward),\n                    this.get(\"last_tx\", { decode: true, string: false }),\n                    tags,\n                ]);\n            case 2:\n                await this.prepareChunks(this.data);\n                const tagList = this.tags.map((tag) => [\n                    tag.get(\"name\", { decode: true, string: false }),\n                    tag.get(\"value\", { decode: true, string: false }),\n                ]);\n                return await deepHash_1.default([\n                    ArweaveUtils.stringToBuffer(this.format.toString()),\n                    this.get(\"owner\", { decode: true, string: false }),\n                    this.get(\"target\", { decode: true, string: false }),\n                    ArweaveUtils.stringToBuffer(this.quantity),\n                    ArweaveUtils.stringToBuffer(this.reward),\n                    this.get(\"last_tx\", { decode: true, string: false }),\n                    tagList,\n                    ArweaveUtils.stringToBuffer(this.data_size),\n                    this.get(\"data_root\", { decode: true, string: false }),\n                ]);\n            default:\n                throw new Error(`Unexpected transaction format: ${this.format}`);\n        }\n    }\n}\nexports.default = Transaction;\n//# sourceMappingURL=transaction.js.map"]},"metadata":{},"sourceType":"script"}