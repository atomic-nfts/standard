{"ast":null,"code":"var _jsxFileName = \"/home/al/Desktop/koi/narcissus/content/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useLayoutEffect, useRef } from \"react\";\nimport * as kweb from \"@_koi/sdk/web\";\nimport gifFrames from \"gif-frames\";\nimport ndjsonStream from 'can-ndjson-stream'; // import SmartWeave from \"smartweave\";\n\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ktools = new kweb.Web();\nconsole.log(\"ktools\", ktools);\nlet state;\nlet id;\nlet koii;\nlet totalFrames = 225;\n\nfunction App() {\n  _s();\n\n  const [narcissus, setNarcissus] = useState( /*#__PURE__*/_jsxDEV(\"canvas\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 46\n  }, this));\n  const [loading, setLoading] = useState(true);\n  const [score, setScore] = useState(0); // const [canvas, setCanvas] = useState(<canvas></canvas>);\n\n  const mainRef = useRef(null);\n  useEffect(() => {\n    init();\n  }, []);\n\n  const updateScore = () => {\n    // for ( let child of mainRef.current.children ) {\n    //   child.delete()\n    // }\n    console.log(\"useEffect score\", mainRef, 'score is', score);\n\n    if (!mainRef.current) {\n      console.log('not updating score because', mainRef.current); // updateScore(); // hacky - should be removed\n\n      return;\n    } else {\n      let scoreSpan = document.createElement('span');\n      scoreSpan.innerText = score;\n      scoreSpan.className = \"scoreSpan\";\n      mainRef.current.appendChild(scoreSpan);\n    }\n  };\n\n  useLayoutEffect(() => {\n    updateScore(); // Clean up\n\n    return () => {\n      var spans = document.getElementsByClassName('scoreSpan');\n\n      for (let span of spans) {\n        span.remove();\n      }\n    };\n  }, [score]);\n  useLayoutEffect(() => {\n    // for ( let child of mainRef.current.children ) {\n    //   child.delete()\n    // }\n    console.log(\"useEffect\", mainRef);\n\n    if (!mainRef.current) {\n      console.log('not updating narcissus because', mainRef.current);\n      init(); // hacky - should be removed\n\n      return;\n    } else {\n      console.log('about to append because main is', mainRef.current, narcissus);\n      let scoreSpan = document.createElement('span');\n      scoreSpan.innerText = score;\n      scoreSpan.className = \"scoreSpan\";\n      narcissus.className = 'narcissus';\n      mainRef.current.appendChild(narcissus);\n      mainRef.current.appendChild(scoreSpan);\n    } // Clean up\n\n\n    return () => {\n      console.log(\"clean up\"); // mainRef.current.innerHTML = null\n\n      let narci = document.getElementsByClassName('narcissus');\n\n      for (let n of narci) {\n        n.remove();\n      }\n    };\n  }, [narcissus]);\n  /* -- Functions -- */\n\n  const init = async () => {\n    // should add the following flower to the view, replacing the loading icon\n    let correctFreezeFrame = await getCorrectFreezeFrame();\n    console.log('setting frame', correctFreezeFrame);\n    await setGif(correctFreezeFrame);\n    return {\n      state,\n      id\n    };\n  };\n\n  async function getData(url) {\n    const response = await fetch(url);\n    const exampleReader = ndjsonStream(response.body).getReader();\n    let result;\n\n    while (!result || !result.done) {\n      result = await exampleReader.read();\n      console.log(result.done, result.value); //result.value is one line of your NDJSON data\n    }\n\n    return result;\n  }\n\n  async function getCorrectFreezeFrame() {\n    try {\n      var oid = window.location.pathname.split('/')[1] || '1ZjIecqKGYdGTFMWR9kdGrmi77lMmZnA6dxEzWulyjo'; // console.log('got oid', oid)\n      // var nft_state = await ktools.readNftState(oid);\n\n      var nft_state = await getData('https://arweave.net/1ZjIecqKGYdGTFMWR9kdGrmi77lMmZnA6dxEzWulyjo'); // var koii_state = await ktools.getContractState();\n      // var koii_state = await getData('https://arweave.net/cETTyJQYxJLVQ6nC3VxzsZf1x2-6TW2LFkGZa91gUWc');\n\n      console.log('got state', nft_state); // console.log('got koi', koii_state)\n      // contract state\n\n      let current = nft_state.decay.lockState || 0;\n      let lockBlock = nft_state.decay.lastLock;\n      let list = koii_state.stateUpdate.trafficLogs.rewardReport;\n      let newScore; // this will contain the output\n      // looping variables\n\n      let change = 0;\n      let max = nft_state.decay.lastMax || 1;\n      let scalar = 1;\n      let last = 0;\n      let lastMax = 0;\n      let i = 0;\n\n      for (var item of list) {\n        // console.log('checking', i, 'change is ', change)\n        if (item.dailyTrafficBlock > lockBlock) {\n          if (typeof item.logsSummary && Object.keys(item.logsSummary).includes(oid)) {\n            let aScore = item.logsSummary[oid];\n\n            if (aScore < max) {\n              if (last === i - 1) {\n                // if we are on a streak, incremement the scalar\n                scalar = scalar + scalar;\n              }\n\n              if (i - 10 < lastMax) {\n                // we are in a recovery slump, so the scalar is negative now\n                scalar = -1 * scalar;\n              } // increment the adjustment \n\n\n              change = change + aScore * (1 + scalar / 100);\n            } else {\n              // if we have a new max we get a major boost\n              max = aScore;\n              lastMax = i;\n              change = change + 10000;\n            }\n\n            last = i;\n          }\n        }\n\n        i = i + 1;\n      }\n\n      if (change < 1) {\n        // return current;\n        console.log('returning current', current);\n        newScore = current; // return 200;\n      } else {\n        // return current + change;\n        let remainder = totalFrames - current; // the maximum score adjustment we can give (total frames less current score)\n\n        newScore = remainder * (10001 - change);\n\n        if (newScore > totalFrames) {\n          newScore = totalFrames;\n        } else if (newScore < 0) {\n          newScore = 0;\n        }\n      } // newScore = 200; // enable to check gif scrolling locally\n\n\n      console.log('newScore is', newScore);\n      setScore(newScore);\n      return newScore;\n    } catch (err) {\n      console.log('error loading nft data', err);\n      setScore(1);\n      return 1;\n    }\n  }\n\n  async function setGif(frameToSet) {\n    return new Promise(function (resolve, reject) {\n      try {\n        gifFrames({\n          url: \"./img/narcissus.gif\",\n          frames: \"0-1000\",\n          outputType: \"canvas\"\n        }).then(function (frameData) {\n          // console.log('setting frame', frameToSet, frameData[frameToSet])\n          let obj = frameData[frameToSet].getImage();\n          setNarcissus(obj);\n          setLoading(false);\n          resolve(frameData);\n        }).catch(console.error.bind(console));\n      } catch (err) {\n        console.log(\"err\", err);\n        reject(err);\n      }\n    });\n  } // const renderImage = () => {\n  //   // console.log(canvas, typeof(canvas), JSON.stringify(canvas))\n  //   // for ( let child of mainRef.current.children ) {\n  //   //   child.delete()\n  //   // }\n  //   console.log('CANVAAS', canvas, typeof(canvas))\n  //   let copy = canvas.cloneNode(true)\n  //   mainRef.current.insertAdjacentElement('afterbegin', copy)\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [loading && /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"this is the loading icon\",\n      src: window.location.origin + \"/img/narcissus.gif\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }, this), !loading && /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        ref: mainRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./img/narcissus.gif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9SH5RQV0qwhnUVgXPz4AtiiNEOk=\");\n\n_c = App;\nexport default App; // need to fetch the attention logs from koi state\n// then, iterate over the logs and sum the total attention\n// then, check the last time the nft was updated\n// then, check the nft's decay from it's state.decay\n// then, increment counters based on the difference of current block height and the block height at last adjustment\n// then, adjust the 'durability' score\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/al/Desktop/koi/narcissus/content/src/App.js"],"names":["React","useState","useEffect","useLayoutEffect","useRef","kweb","gifFrames","ndjsonStream","ktools","Web","console","log","state","id","koii","totalFrames","App","narcissus","setNarcissus","loading","setLoading","score","setScore","mainRef","init","updateScore","current","scoreSpan","document","createElement","innerText","className","appendChild","spans","getElementsByClassName","span","remove","narci","n","correctFreezeFrame","getCorrectFreezeFrame","setGif","getData","url","response","fetch","exampleReader","body","getReader","result","done","read","value","oid","window","location","pathname","split","nft_state","decay","lockState","lockBlock","lastLock","list","koii_state","stateUpdate","trafficLogs","rewardReport","newScore","change","max","lastMax","scalar","last","i","item","dailyTrafficBlock","logsSummary","Object","keys","includes","aScore","remainder","err","frameToSet","Promise","resolve","reject","frames","outputType","then","frameData","obj","getImage","catch","error","bind","origin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useLayoutEffect, useRef } from \"react\";\n\nimport * as kweb from \"@_koi/sdk/web\";\nimport gifFrames from \"gif-frames\";\nimport ndjsonStream from 'can-ndjson-stream';\n\n\n// import SmartWeave from \"smartweave\";\n\nimport \"./App.css\";\n\nconst ktools = new kweb.Web();\n\nconsole.log(\"ktools\", ktools);\n\nlet state;\nlet id;\nlet koii;\nlet totalFrames = 225;\n\nfunction App() {\n  const [narcissus, setNarcissus] = useState(<canvas></canvas>);\n  const [loading, setLoading] = useState(true);\n  const [score, setScore] = useState(0);\n  // const [canvas, setCanvas] = useState(<canvas></canvas>);\n  const mainRef = useRef(null);\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  const updateScore = () => {\n      // for ( let child of mainRef.current.children ) {\n    //   child.delete()\n    // }\n    console.log(\"useEffect score\", mainRef, 'score is', score);\n    if (!mainRef.current) {\n      console.log('not updating score because', mainRef.current)\n      // updateScore(); // hacky - should be removed\n      return;\n    } else {\n      let scoreSpan = document.createElement('span')\n          scoreSpan.innerText = score;\n          scoreSpan.className = \"scoreSpan\"\n        \n      mainRef.current.appendChild(scoreSpan);\n    }\n  }\n\n  useLayoutEffect(() => {\n    updateScore();\n\n    // Clean up\n    return () => {\n      var spans = document.getElementsByClassName('scoreSpan')\n      for ( let span of spans ) {\n        span.remove()\n      }\n    };\n  }, [score]);\n\n  useLayoutEffect(() => {\n    // for ( let child of mainRef.current.children ) {\n    //   child.delete()\n    // }\n    console.log(\"useEffect\", mainRef);\n    if (!mainRef.current) {\n      console.log('not updating narcissus because', mainRef.current)\n      init(); // hacky - should be removed\n      return;\n    } else {\n      console.log('about to append because main is', mainRef.current, narcissus)\n      let scoreSpan = document.createElement('span')\n          scoreSpan.innerText = score;\n          scoreSpan.className = \"scoreSpan\"\n      narcissus.className = 'narcissus'\n      mainRef.current.appendChild(narcissus);\n      mainRef.current.appendChild(scoreSpan);\n    }\n\n    // Clean up\n    return () => {\n      console.log(\"clean up\");\n      // mainRef.current.innerHTML = null\n      let narci = document.getElementsByClassName('narcissus')\n      for ( let n of narci ) {\n        n.remove()\n      }\n\n    };\n  }, [narcissus]);\n\n  /* -- Functions -- */\n\n  const init = async () => {\n    // should add the following flower to the view, replacing the loading icon\n    let correctFreezeFrame = await getCorrectFreezeFrame()\n    console.log('setting frame', correctFreezeFrame)\n    await setGif(correctFreezeFrame);\n\n    return { state, id };\n  };\n\n  async function getData (url) {\n    const response = await fetch(url);\n    const exampleReader = ndjsonStream(response.body).getReader();\n  \n    let result;\n    while (!result || !result.done) {\n      result = await exampleReader.read();\n      console.log(result.done, result.value); //result.value is one line of your NDJSON data\n    } \n    return result;\n  }\n\n  async function getCorrectFreezeFrame() {\n    try {\n      var oid = (window.location.pathname).split('/')[1] || '1ZjIecqKGYdGTFMWR9kdGrmi77lMmZnA6dxEzWulyjo';\n      // console.log('got oid', oid)\n      // var nft_state = await ktools.readNftState(oid);\n      var nft_state = await getData('https://arweave.net/1ZjIecqKGYdGTFMWR9kdGrmi77lMmZnA6dxEzWulyjo')\n      \n      // var koii_state = await ktools.getContractState();\n      // var koii_state = await getData('https://arweave.net/cETTyJQYxJLVQ6nC3VxzsZf1x2-6TW2LFkGZa91gUWc');\n\n      console.log('got state', nft_state)\n      // console.log('got koi', koii_state)\n      \n      // contract state\n      let current = nft_state.decay.lockState || 0;\n      let lockBlock = nft_state.decay.lastLock;\n      let list = koii_state.stateUpdate.trafficLogs.rewardReport;\n      let newScore; // this will contain the output\n\n      // looping variables\n      let change = 0;\n      let max = nft_state.decay.lastMax || 1;\n      let scalar = 1;\n      let last = 0;\n      let lastMax = 0;\n      let i = 0;\n\n      for ( var item of list ) {\n        // console.log('checking', i, 'change is ', change)\n        if ( item.dailyTrafficBlock > lockBlock ) { \n            if ( typeof(item.logsSummary) && Object.keys(item.logsSummary).includes(oid) ) {\n              let aScore = item.logsSummary[oid];\n              if ( aScore < max ) {\n                \n                if ( last === i - 1 ) {\n                  // if we are on a streak, incremement the scalar\n                  scalar = scalar + scalar;\n                }\n                \n                if ( ( i - 10 ) < lastMax ) {\n                  // we are in a recovery slump, so the scalar is negative now\n                  scalar = ( -1 ) * scalar;\n                }\n                \n                // increment the adjustment \n                change = change + aScore * ( 1 + scalar / 100 )\n\n              } else {\n                // if we have a new max we get a major boost\n                max = aScore;\n                lastMax = i;\n                change = change + 10000;\n              }\n              last = i;\n            }\n        }\n        i = i + 1;\n      }\n      \n      if (change < 1) {\n        // return current;\n        console.log('returning current', current)\n        newScore = current;\n        // return 200;\n      } else {\n        // return current + change;\n        let remainder = totalFrames - current; // the maximum score adjustment we can give (total frames less current score)\n        newScore = remainder * ( 10001 - change );\n        if ( newScore > totalFrames ) {\n          newScore = totalFrames;\n        } else if ( newScore < 0 ) {\n          newScore = 0;\n        }\n      }\n      // newScore = 200; // enable to check gif scrolling locally\n      console.log('newScore is', newScore)\n      setScore(newScore);\n      return newScore;\n    } catch (err) {\n      console.log('error loading nft data', err)\n      setScore(1)\n      return 1;\n    }\n  }\n\n  async function setGif(frameToSet) {\n    return new Promise(function (resolve, reject) {\n      try {\n        gifFrames({ url: \"./img/narcissus.gif\", frames: \"0-1000\", outputType: \"canvas\" })\n          .then(function (frameData) {\n            // console.log('setting frame', frameToSet, frameData[frameToSet])\n            let obj = frameData[frameToSet].getImage();\n            setNarcissus(obj);\n            setLoading(false);\n            resolve(frameData);\n          })\n          .catch(console.error.bind(console));\n      } catch (err) {\n        console.log(\"err\", err);\n        reject(err);\n      }\n    });\n  }\n\n  // const renderImage = () => {\n\n  //   // console.log(canvas, typeof(canvas), JSON.stringify(canvas))\n\n  //   // for ( let child of mainRef.current.children ) {\n  //   //   child.delete()\n  //   // }\n\n  //   console.log('CANVAAS', canvas, typeof(canvas))\n\n  //   let copy = canvas.cloneNode(true)\n\n  //   mainRef.current.insertAdjacentElement('afterbegin', copy)\n  // }\n\n  return (\n    <div className=\"App\">\n      {loading && (\n        <img alt=\"this is the loading icon\" src={window.location.origin + \"/img/narcissus.gif\"} />\n      )}\n      {!loading && (\n        <React.Fragment>\n          <header></header>\n          <main ref={mainRef}></main>\n          <img src=\"./img/narcissus.gif\"></img>\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n// need to fetch the attention logs from koi state\n// then, iterate over the logs and sum the total attention\n// then, check the last time the nft was updated\n// then, check the nft's decay from it's state.decay\n// then, increment counters based on the difference of current block height and the block height at last adjustment\n// then, adjust the 'durability' score\n"]},"metadata":{},"sourceType":"module"}