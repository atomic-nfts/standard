{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/al/Desktop/koi/narcissus/content/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _createForOfIteratorHelper = require(\"/home/al/Desktop/koi/narcissus/content/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/home/al/Desktop/koi/narcissus/content/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/al/Desktop/koi/narcissus/content/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Arweave as a database.\n * To easily interact with Arweave's graphql endpoint.\n */\n\nvar ArDB = /*#__PURE__*/function () {\n  /**\n   *\n   * @param arweave An arweave instance\n   * @param logs Show logs. 0 = false, 1 = true, 2 = if arweave instance has log enabled.\n   */\n  function ArDB(arweave) {\n    var logs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n\n    _classCallCheck(this, ArDB);\n\n    this.reqType = 'transactions';\n    this.options = {};\n    this.logs = 2;\n    this.after = '';\n    this.afterRegex = /after: *\"([^\"]*)\"/gi;\n    this.emptyLinesRegex = /^\\s*[\\r\\n]/gm;\n    this.fields = ['id', 'anchor', 'signature', 'recipient', 'owner', 'owner.address', 'owner.key', 'fee', 'fee.winston', 'fee.ar', 'quantity', 'quantity.winston', 'quantity.ar', 'data', 'data.size', 'data.type', 'tags', 'tags.name', 'tags.value', 'block', 'block.id', 'block.timestamp', 'block.height', 'block.previous', 'parent', 'parent.id'];\n    this.includes = new Set();\n    this.arweave = arweave;\n    this.logs = logs;\n    this.includes = new Set(this.fields);\n  }\n  /**\n   * Search is the first function called before doing a find.\n   * @param type What type of search are we going to do.\n   */\n\n\n  _createClass(ArDB, [{\n    key: \"search\",\n    value: function search() {\n      var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transactions';\n      this.reqType = type;\n      this.options = {};\n      this.after = '';\n      return this;\n    }\n  }, {\n    key: \"id\",\n    value: function id(_id) {\n      this.checkSearchType();\n      this.options.id = _id;\n      this.options.ids = [_id];\n      return this;\n    }\n  }, {\n    key: \"ids\",\n    value: function ids(_ids) {\n      this.checkSearchType();\n      this.options.ids = _ids;\n      this.options.id = _ids[0];\n      return this;\n    }\n  }, {\n    key: \"appName\",\n    value: function appName(name) {\n      this.checkSearchType();\n      this.tag('App-Name', [name]);\n      return this;\n    }\n  }, {\n    key: \"type\",\n    value: function type(_type) {\n      this.checkSearchType();\n      this.tag('Content-Type', [_type]);\n      return this;\n    }\n  }, {\n    key: \"tags\",\n    value: function tags(_tags) {\n      this.checkSearchType();\n      this.options.tags = _tags;\n      return this;\n    }\n  }, {\n    key: \"tag\",\n    value: function tag(name, values) {\n      this.checkSearchType();\n\n      if (!this.options.tags) {\n        this.options.tags = [];\n      }\n\n      if (typeof values === 'string') {\n        values = [values];\n      }\n\n      this.options.tags.push({\n        name: name,\n        values: values\n      });\n      return this;\n    }\n  }, {\n    key: \"from\",\n    value: function from(owners) {\n      this.checkSearchType();\n\n      if (typeof owners === 'string') {\n        owners = [owners];\n      }\n\n      this.options.owners = owners;\n      return this;\n    }\n  }, {\n    key: \"to\",\n    value: function to(recipients) {\n      this.checkSearchType();\n\n      if (typeof recipients === 'string') {\n        recipients = [recipients];\n      }\n\n      this.options.recipients = recipients;\n      return this;\n    }\n  }, {\n    key: \"min\",\n    value: function min(_min) {\n      this.checkSearchType();\n\n      if (!this.options.block) {\n        this.options.block = {};\n      }\n\n      this.options.block.min = _min;\n      return this;\n    }\n  }, {\n    key: \"max\",\n    value: function max(_max) {\n      this.checkSearchType();\n\n      if (!this.options.block) {\n        this.options.block = {};\n      }\n\n      this.options.block.max = _max;\n      return this;\n    }\n  }, {\n    key: \"limit\",\n    value: function limit(_limit) {\n      this.checkSearchType();\n\n      if (_limit < 1) {\n        console.warn('Limit cannot be less than 1, setting it to 1.');\n        _limit = 1;\n      } else if (_limit > 100) {\n        console.warn(\"Arweave GQL won't return more than 100 entries at once.\");\n      }\n\n      this.options.first = _limit;\n      return this;\n    }\n  }, {\n    key: \"sort\",\n    value: function sort(_sort) {\n      this.options.sort = _sort;\n      return this;\n    }\n  }, {\n    key: \"cursor\",\n    value: function cursor(after) {\n      this.checkSearchType();\n      this.options.after = after;\n      return this;\n    }\n  }, {\n    key: \"only\",\n    value: function only(fields) {\n      // Empty the included fields.\n      this.includes = new Set();\n\n      if (typeof fields === 'string' && this.fields.indexOf(fields) !== -1) {\n        this.includes.add(fields);\n        return this;\n      }\n\n      var toInclude = [];\n\n      var _iterator = _createForOfIteratorHelper(fields),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var field = _step.value;\n\n          // @ts-ignore\n          if (this.fields.indexOf(field) !== -1) {\n            // @ts-ignore\n            toInclude.push(field);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (toInclude.length) {\n        this.includes = new Set(toInclude);\n      }\n\n      this.validateIncludes();\n      return this;\n    }\n  }, {\n    key: \"exclude\",\n    value: function exclude(fields) {\n      // To make only() and exclude() work the same, re-add all fields to includes.\n      this.includes = new Set(this.fields);\n\n      if (typeof fields === 'string') {\n        this.includes.delete(fields);\n        return this;\n      }\n\n      var _iterator2 = _createForOfIteratorHelper(fields),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var field = _step2.value;\n          this.includes.delete(field);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      this.validateIncludes();\n      return this;\n    } // Ready to run\n\n  }, {\n    key: \"find\",\n    value: function find() {\n      var filters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _i, _Object$keys, filter, query;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.checkSearchType();\n\n                for (_i = 0, _Object$keys = Object.keys(filters); _i < _Object$keys.length; _i++) {\n                  filter = _Object$keys[_i];\n                  this.options[filter] = filters[filter];\n                }\n\n                if (!this.options.first) {\n                  this.options.first = 10;\n                }\n\n                query = this.construct();\n                return _context.abrupt(\"return\", this.run(query));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"findOne\",\n    value: function findOne() {\n      var filters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _i2, _Object$keys2, filter, query;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.checkSearchType();\n\n                for (_i2 = 0, _Object$keys2 = Object.keys(filters); _i2 < _Object$keys2.length; _i2++) {\n                  filter = _Object$keys2[_i2];\n                  this.options[filter] = filters[filter];\n                }\n\n                this.options.first = 1;\n                query = this.construct();\n                return _context2.abrupt(\"return\", this.run(query));\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"findAll\",\n    value: function findAll() {\n      var filters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _i3, _Object$keys3, filter, query;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.checkSearchType();\n\n                for (_i3 = 0, _Object$keys3 = Object.keys(filters); _i3 < _Object$keys3.length; _i3++) {\n                  filter = _Object$keys3[_i3];\n                  this.options[filter] = filters[filter];\n                }\n\n                this.options.first = 100;\n                query = this.construct();\n                return _context3.abrupt(\"return\", this.runAll(query));\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    }\n    /**\n     * To run with the cursor\n     */\n\n  }, {\n    key: \"next\",\n    value: function next() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var query;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(!this.after || !this.after.length)) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                console.warn('next(): Nothing more to search.');\n                return _context4.abrupt(\"return\");\n\n              case 3:\n                query = this.construct().replace(this.afterRegex, \"after: \\\"\".concat(this.after, \"\\\"\"));\n                return _context4.abrupt(\"return\", this.run(query));\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    }\n  }, {\n    key: \"run\",\n    value: function run(query) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var res, edges, _edges;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.log('Running query:');\n                this.log(query);\n                _context5.next = 4;\n                return this.get(query);\n\n              case 4:\n                res = _context5.sent;\n\n                if (!res.transaction) {\n                  _context5.next = 9;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", res.transaction);\n\n              case 9:\n                if (!res.block) {\n                  _context5.next = 13;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", res.block);\n\n              case 13:\n                if (!res.transactions) {\n                  _context5.next = 19;\n                  break;\n                }\n\n                edges = res.transactions.edges;\n\n                if (edges && edges.length) {\n                  this.after = edges[edges.length - 1].cursor;\n                } else {\n                  this.after = '';\n                }\n\n                return _context5.abrupt(\"return\", edges);\n\n              case 19:\n                if (!res.blocks) {\n                  _context5.next = 23;\n                  break;\n                }\n\n                _edges = res.blocks.edges;\n\n                if (_edges && _edges.length) {\n                  this.after = _edges[_edges.length - 1].cursor;\n                } else {\n                  this.after = '';\n                }\n\n                return _context5.abrupt(\"return\", _edges);\n\n              case 23:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n    }\n  }, {\n    key: \"runAll\",\n    value: function runAll(query) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var hasNextPage, edges, cursor, res, r, _r;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                hasNextPage = true;\n                edges = [];\n                cursor = this.options.after || '';\n\n              case 3:\n                if (!hasNextPage) {\n                  _context6.next = 20;\n                  break;\n                }\n\n                this.log('Running query:');\n                this.log(query);\n                _context6.next = 8;\n                return this.get(query);\n\n              case 8:\n                res = _context6.sent;\n\n                if (!res.transaction) {\n                  _context6.next = 13;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", res.transaction);\n\n              case 13:\n                if (!res.block) {\n                  _context6.next = 17;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", res.block);\n\n              case 17:\n                if (res.transactions) {\n                  r = res.transactions;\n\n                  if (r.edges && r.edges.length) {\n                    edges = edges.concat(r.edges);\n                    cursor = r.edges[r.edges.length - 1].cursor;\n                    query = query.replace(this.afterRegex, \"after: \\\"\".concat(cursor, \"\\\"\"));\n                  }\n\n                  hasNextPage = r.pageInfo.hasNextPage;\n                } else if (res.blocks) {\n                  _r = res.blocks;\n\n                  if (_r.edges && _r.edges.length) {\n                    edges = edges.concat(_r.edges);\n                    cursor = _r.edges[_r.edges.length - 1].cursor;\n                    query = query.replace(this.afterRegex, \"after: \\\"\".concat(cursor, \"\\\"\"));\n                  }\n\n                  hasNextPage = _r.pageInfo.hasNextPage;\n                }\n\n              case 18:\n                _context6.next = 3;\n                break;\n\n              case 20:\n                return _context6.abrupt(\"return\", edges);\n\n              case 21:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n    }\n    /** Helpers */\n\n  }, {\n    key: \"checkSearchType\",\n    value: function checkSearchType() {\n      if (!this.reqType || this.reqType !== 'transaction' && this.reqType !== 'block' && this.reqType !== 'transactions' && this.reqType !== 'blocks') {\n        throw new Error('Invalid search type. Must provide one and it must be either \"transaction\", \"transactions\", \"block\" or \"blocks\"');\n      }\n    }\n  }, {\n    key: \"get\",\n    value: function get(query) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.arweave.api.post('graphql', {\n                  query: query\n                }, {\n                  headers: {\n                    'content-type': 'application/json'\n                  }\n                });\n\n              case 2:\n                res = _context7.sent;\n                this.log('Returned result: ');\n                this.log(res.data.data);\n                return _context7.abrupt(\"return\", res.data.data);\n\n              case 6:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n    }\n  }, {\n    key: \"construct\",\n    value: function construct() {\n      if (this.reqType === 'transactions' || this.reqType === 'blocks') {\n        delete this.options.id;\n\n        if (this.reqType === 'transactions') {\n          delete this.options.height;\n        } else {\n          delete this.options.owners;\n          delete this.options.recipients;\n          delete this.options.tags;\n          delete this.options.block;\n        }\n\n        if (!this.options.after) {\n          this.options.after = '';\n        }\n      } else {\n        this.options = {\n          id: this.options.id\n        };\n      }\n\n      var params = JSON.stringify(this.options, null, 2).replace(/\"([^\"]+)\":/gm, '$1: ').replace('\"HEIGHT_DESC\"', 'HEIGHT_DESC').replace('\"HEIGHT_ASC\"', 'HEIGHT_ASC');\n      params = params.substring(1, params.length - 1);\n      var fields = '';\n\n      if (this.reqType === 'transaction' || this.reqType === 'transactions') {\n        var owner = '';\n\n        if (this.includes.has('owner')) {\n          owner = \"owner {\\n          \".concat(this.includes.has('owner.address') ? 'address' : '', \"\\n          \").concat(this.includes.has('owner.key') ? 'key' : '', \"\\n        }\");\n        }\n\n        var fee = '';\n\n        if (this.includes.has('fee')) {\n          fee = \"fee {\\n          \".concat(this.includes.has('fee.winston') ? 'winston' : '', \"\\n          \").concat(this.includes.has('fee.ar') ? 'ar' : '', \"\\n        }\");\n        }\n\n        var quantity = '';\n\n        if (this.includes.has('quantity')) {\n          quantity = \"quantity {\\n          \".concat(this.includes.has('quantity.winston') ? 'winston' : '', \"\\n          \").concat(this.includes.has('quantity.ar') ? 'ar' : '', \"\\n        }\");\n        }\n\n        var data = '';\n\n        if (this.includes.has('data')) {\n          data = \"data {\\n          \".concat(this.includes.has('data.size') ? 'size' : '', \"\\n          \").concat(this.includes.has('data.type') ? 'type' : '', \"\\n        }\");\n        }\n\n        var tags = '';\n\n        if (this.includes.has('tags')) {\n          tags = \"tags {\\n          \".concat(this.includes.has('tags.name') ? 'name' : '', \"\\n          \").concat(this.includes.has('tags.value') ? 'value' : '', \"\\n        }\");\n        }\n\n        var block = '';\n\n        if (this.includes.has('block')) {\n          block = \"block {\\n          \".concat(this.includes.has('block.id') ? 'id' : '', \"\\n          \").concat(this.includes.has('block.timestamp') ? 'timestamp' : '', \"\\n          \").concat(this.includes.has('block.height') ? 'height' : '', \"\\n          \").concat(this.includes.has('block.previous') ? 'previous' : '', \"\\n        }\");\n        }\n\n        var parent = '';\n\n        if (this.includes.has('parent') || this.includes.has('parent.id')) {\n          // Parent only has an ID, so if one of them is included, add both.\n          parent = \"parent {\\n          id\\n        }\";\n        }\n\n        fields = \"\\n      \".concat(this.includes.has('id') ? 'id' : '', \"\\n      \").concat(this.includes.has('anchor') ? 'anchor' : '', \"\\n      \").concat(this.includes.has('signature') ? 'signature' : '', \"\\n      \").concat(this.includes.has('recipient') ? 'recipient' : '', \"\\n      \").concat(owner, \"\\n      \").concat(fee, \"\\n      \").concat(quantity, \"\\n      \").concat(data, \"\\n      \").concat(tags, \"\\n      \").concat(block, \"\\n      \").concat(parent, \"\\n      \");\n        fields = fields.replace(this.emptyLinesRegex, '').trim();\n\n        if (!fields.length) {\n          fields = \"\\n        id\\n        anchor\\n        signature\\n        recipient\\n        owner {\\n          address\\n          key\\n        }\\n        fee {\\n          winston\\n          ar\\n        }\\n        quantity {\\n          winston\\n          ar\\n        }\\n        data {\\n          size\\n          type\\n        }\\n        tags {\\n          name\\n          value\\n        }\\n        block {\\n          id\\n          timestamp\\n          height\\n          previous\\n        }\\n        parent {\\n          id\\n        }\";\n        }\n      } else {\n        fields = \"\\n      \".concat(this.includes.has('block.id') ? 'id' : '', \"\\n      \").concat(this.includes.has('block.timestamp') ? 'timestamp' : '', \"\\n      \").concat(this.includes.has('block.height') ? 'height' : '', \"\\n      \").concat(this.includes.has('block.previous') ? 'previous' : '', \"\\n      \");\n        fields = fields.replace(this.emptyLinesRegex, '').trim();\n\n        if (!fields.length) {\n          fields = \"\\n        id\\n        timestamp\\n        height\\n        previous\";\n        }\n      }\n\n      if (this.reqType === 'transactions' || this.reqType === 'blocks') {\n        fields = \"\\n      pageInfo {\\n        hasNextPage\\n      }\\n      edges { \\n        cursor\\n        node { \\n          \".concat(fields, \"\\n        } \\n      }\");\n      }\n\n      if (!this.reqType || !params) {\n        throw new Error('Invalid options. You need to first set your options!');\n      }\n\n      return \"query {\\n      \".concat(this.reqType, \"(\\n        \").concat(params, \"\\n      ){\\n        \").concat(fields, \"\\n      }\\n    }\");\n    }\n  }, {\n    key: \"log\",\n    value: function log(str) {\n      if (this.logs === 1 || this.logs === 2 && this.arweave.getConfig().api.logging) {\n        console.log(str);\n      }\n    }\n  }, {\n    key: \"validateIncludes\",\n    value: function validateIncludes() {\n      // Add all children if all of them are missing but a parent is present.\n      if (this.includes.has('owner') && !this.includes.has('owner.address') && !this.includes.has('owner.key')) {\n        this.includes.add('owner.address');\n        this.includes.add('owner.key');\n      } else if (this.includes.has('fee') && !this.includes.has('fee.winston') && !this.includes.has('fee.ar')) {\n        this.includes.add('fee.winston');\n        this.includes.add('fee.ar');\n      } else if (this.includes.has('quantity') && !this.includes.has('quantity.winston') && !this.includes.has('quantity.ar')) {\n        this.includes.add('quantity.winston');\n        this.includes.add('quantity.ar');\n      } else if (this.includes.has('data') && !this.includes.has('data.size') && !this.includes.has('data.type')) {\n        this.includes.add('data.size');\n        this.includes.add('data.type');\n      } else if (this.includes.has('tags') && !this.includes.has('tags.name') && !this.includes.has('tags.value')) {\n        this.includes.add('tags.name');\n        this.includes.add('tags.value');\n      } else if (this.includes.has('block') && !this.includes.has('block.timestamp') && !this.includes.has('block.height') && !this.includes.has('block.previous')) {\n        this.includes.add('block.id');\n        this.includes.add('block.timestamp');\n        this.includes.add('block.height');\n        this.includes.add('block.previous');\n      } // Add a parent if one of the children is present but the parent is not\n\n\n      if (!this.includes.has('owner') && (this.includes.has('owner.address') || this.includes.has('owner.key'))) {\n        this.includes.add('owner');\n      } else if (!this.includes.has('fee') && (this.includes.has('fee.winston') || this.includes.has('fee.ar'))) {\n        this.includes.add('fee');\n      } else if (!this.includes.has('quantity') && (this.includes.has('quantity.winston') || this.includes.has('quantity.ar'))) {\n        this.includes.add('quantity');\n      } else if (!this.includes.has('data') && (this.includes.has('data.size') || this.includes.has('data.type'))) {\n        this.includes.add('data');\n      } else if (!this.includes.has('tags') && (this.includes.has('tags.name') || this.includes.has('tags.value'))) {\n        this.includes.add('tags');\n      } else if (!this.includes.has('block') && (this.includes.has('block.timestamp') || this.includes.has('block.height') || this.includes.has('block.previous'))) {\n        this.includes.add('block');\n      }\n    }\n  }]);\n\n  return ArDB;\n}();\n\nexports.default = ArDB;","map":{"version":3,"sources":["/home/al/Desktop/koi/narcissus/content/node_modules/ardb/lib/ardb.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","ArDB","arweave","logs","reqType","options","after","afterRegex","emptyLinesRegex","fields","includes","Set","type","id","checkSearchType","ids","name","tag","tags","values","push","owners","recipients","min","block","max","limit","console","warn","first","sort","indexOf","add","toInclude","field","length","validateIncludes","delete","filters","keys","filter","query","construct","run","runAll","replace","log","get","res","transaction","transactions","edges","cursor","blocks","hasNextPage","r","concat","pageInfo","Error","api","post","headers","data","height","params","JSON","stringify","substring","owner","has","fee","quantity","parent","trim","str","getConfig","logging","default"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Arweave as a database.\n * To easily interact with Arweave's graphql endpoint.\n */\nclass ArDB {\n    /**\n     *\n     * @param arweave An arweave instance\n     * @param logs Show logs. 0 = false, 1 = true, 2 = if arweave instance has log enabled.\n     */\n    constructor(arweave, logs = 2) {\n        this.reqType = 'transactions';\n        this.options = {};\n        this.logs = 2;\n        this.after = '';\n        this.afterRegex = /after: *\"([^\"]*)\"/gi;\n        this.emptyLinesRegex = /^\\s*[\\r\\n]/gm;\n        this.fields = [\n            'id',\n            'anchor',\n            'signature',\n            'recipient',\n            'owner',\n            'owner.address',\n            'owner.key',\n            'fee',\n            'fee.winston',\n            'fee.ar',\n            'quantity',\n            'quantity.winston',\n            'quantity.ar',\n            'data',\n            'data.size',\n            'data.type',\n            'tags',\n            'tags.name',\n            'tags.value',\n            'block',\n            'block.id',\n            'block.timestamp',\n            'block.height',\n            'block.previous',\n            'parent',\n            'parent.id',\n        ];\n        this.includes = new Set();\n        this.arweave = arweave;\n        this.logs = logs;\n        this.includes = new Set(this.fields);\n    }\n    /**\n     * Search is the first function called before doing a find.\n     * @param type What type of search are we going to do.\n     */\n    search(type = 'transactions') {\n        this.reqType = type;\n        this.options = {};\n        this.after = '';\n        return this;\n    }\n    id(id) {\n        this.checkSearchType();\n        this.options.id = id;\n        this.options.ids = [id];\n        return this;\n    }\n    ids(ids) {\n        this.checkSearchType();\n        this.options.ids = ids;\n        this.options.id = ids[0];\n        return this;\n    }\n    appName(name) {\n        this.checkSearchType();\n        this.tag('App-Name', [name]);\n        return this;\n    }\n    type(type) {\n        this.checkSearchType();\n        this.tag('Content-Type', [type]);\n        return this;\n    }\n    tags(tags) {\n        this.checkSearchType();\n        this.options.tags = tags;\n        return this;\n    }\n    tag(name, values) {\n        this.checkSearchType();\n        if (!this.options.tags) {\n            this.options.tags = [];\n        }\n        if (typeof values === 'string') {\n            values = [values];\n        }\n        this.options.tags.push({ name, values });\n        return this;\n    }\n    from(owners) {\n        this.checkSearchType();\n        if (typeof owners === 'string') {\n            owners = [owners];\n        }\n        this.options.owners = owners;\n        return this;\n    }\n    to(recipients) {\n        this.checkSearchType();\n        if (typeof recipients === 'string') {\n            recipients = [recipients];\n        }\n        this.options.recipients = recipients;\n        return this;\n    }\n    min(min) {\n        this.checkSearchType();\n        if (!this.options.block) {\n            this.options.block = {};\n        }\n        this.options.block.min = min;\n        return this;\n    }\n    max(max) {\n        this.checkSearchType();\n        if (!this.options.block) {\n            this.options.block = {};\n        }\n        this.options.block.max = max;\n        return this;\n    }\n    limit(limit) {\n        this.checkSearchType();\n        if (limit < 1) {\n            console.warn('Limit cannot be less than 1, setting it to 1.');\n            limit = 1;\n        }\n        else if (limit > 100) {\n            console.warn(\"Arweave GQL won't return more than 100 entries at once.\");\n        }\n        this.options.first = limit;\n        return this;\n    }\n    sort(sort) {\n        this.options.sort = sort;\n        return this;\n    }\n    cursor(after) {\n        this.checkSearchType();\n        this.options.after = after;\n        return this;\n    }\n    only(fields) {\n        // Empty the included fields.\n        this.includes = new Set();\n        if (typeof fields === 'string' && this.fields.indexOf(fields) !== -1) {\n            this.includes.add(fields);\n            return this;\n        }\n        const toInclude = [];\n        for (const field of fields) {\n            // @ts-ignore\n            if (this.fields.indexOf(field) !== -1) {\n                // @ts-ignore\n                toInclude.push(field);\n            }\n        }\n        if (toInclude.length) {\n            this.includes = new Set(toInclude);\n        }\n        this.validateIncludes();\n        return this;\n    }\n    exclude(fields) {\n        // To make only() and exclude() work the same, re-add all fields to includes.\n        this.includes = new Set(this.fields);\n        if (typeof fields === 'string') {\n            this.includes.delete(fields);\n            return this;\n        }\n        for (const field of fields) {\n            this.includes.delete(field);\n        }\n        this.validateIncludes();\n        return this;\n    }\n    // Ready to run\n    find(filters = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.checkSearchType();\n            for (const filter of Object.keys(filters)) {\n                this.options[filter] = filters[filter];\n            }\n            if (!this.options.first) {\n                this.options.first = 10;\n            }\n            const query = this.construct();\n            return this.run(query);\n        });\n    }\n    findOne(filters = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.checkSearchType();\n            for (const filter of Object.keys(filters)) {\n                this.options[filter] = filters[filter];\n            }\n            this.options.first = 1;\n            const query = this.construct();\n            return this.run(query);\n        });\n    }\n    findAll(filters = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.checkSearchType();\n            for (const filter of Object.keys(filters)) {\n                this.options[filter] = filters[filter];\n            }\n            this.options.first = 100;\n            const query = this.construct();\n            return this.runAll(query);\n        });\n    }\n    /**\n     * To run with the cursor\n     */\n    next() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.after || !this.after.length) {\n                console.warn('next(): Nothing more to search.');\n                return;\n            }\n            const query = this.construct().replace(this.afterRegex, `after: \"${this.after}\"`);\n            return this.run(query);\n        });\n    }\n    run(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.log('Running query:');\n            this.log(query);\n            const res = yield this.get(query);\n            if (res.transaction) {\n                return res.transaction;\n            }\n            else if (res.block) {\n                return res.block;\n            }\n            else if (res.transactions) {\n                const edges = res.transactions.edges;\n                if (edges && edges.length) {\n                    this.after = edges[edges.length - 1].cursor;\n                }\n                else {\n                    this.after = '';\n                }\n                return edges;\n            }\n            else if (res.blocks) {\n                const edges = res.blocks.edges;\n                if (edges && edges.length) {\n                    this.after = edges[edges.length - 1].cursor;\n                }\n                else {\n                    this.after = '';\n                }\n                return edges;\n            }\n        });\n    }\n    runAll(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let hasNextPage = true;\n            let edges = [];\n            let cursor = this.options.after || '';\n            while (hasNextPage) {\n                this.log('Running query:');\n                this.log(query);\n                const res = yield this.get(query);\n                if (res.transaction) {\n                    return res.transaction;\n                }\n                else if (res.block) {\n                    return res.block;\n                }\n                else if (res.transactions) {\n                    const r = res.transactions;\n                    if (r.edges && r.edges.length) {\n                        edges = edges.concat(r.edges);\n                        cursor = r.edges[r.edges.length - 1].cursor;\n                        query = query.replace(this.afterRegex, `after: \"${cursor}\"`);\n                    }\n                    hasNextPage = r.pageInfo.hasNextPage;\n                }\n                else if (res.blocks) {\n                    const r = res.blocks;\n                    if (r.edges && r.edges.length) {\n                        edges = edges.concat(r.edges);\n                        cursor = r.edges[r.edges.length - 1].cursor;\n                        query = query.replace(this.afterRegex, `after: \"${cursor}\"`);\n                    }\n                    hasNextPage = r.pageInfo.hasNextPage;\n                }\n            }\n            return edges;\n        });\n    }\n    /** Helpers */\n    checkSearchType() {\n        if (!this.reqType ||\n            (this.reqType !== 'transaction' &&\n                this.reqType !== 'block' &&\n                this.reqType !== 'transactions' &&\n                this.reqType !== 'blocks')) {\n            throw new Error('Invalid search type. Must provide one and it must be either \"transaction\", \"transactions\", \"block\" or \"blocks\"');\n        }\n    }\n    get(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.arweave.api.post('graphql', { query }, { headers: { 'content-type': 'application/json' } });\n            this.log('Returned result: ');\n            this.log(res.data.data);\n            return res.data.data;\n        });\n    }\n    construct() {\n        if (this.reqType === 'transactions' || this.reqType === 'blocks') {\n            delete this.options.id;\n            if (this.reqType === 'transactions') {\n                delete this.options.height;\n            }\n            else {\n                delete this.options.owners;\n                delete this.options.recipients;\n                delete this.options.tags;\n                delete this.options.block;\n            }\n            if (!this.options.after) {\n                this.options.after = '';\n            }\n        }\n        else {\n            this.options = { id: this.options.id };\n        }\n        let params = JSON.stringify(this.options, null, 2)\n            .replace(/\"([^\"]+)\":/gm, '$1: ')\n            .replace('\"HEIGHT_DESC\"', 'HEIGHT_DESC')\n            .replace('\"HEIGHT_ASC\"', 'HEIGHT_ASC');\n        params = params.substring(1, params.length - 1);\n        let fields = '';\n        if (this.reqType === 'transaction' || this.reqType === 'transactions') {\n            let owner = '';\n            if (this.includes.has('owner')) {\n                owner = `owner {\n          ${this.includes.has('owner.address') ? 'address' : ''}\n          ${this.includes.has('owner.key') ? 'key' : ''}\n        }`;\n            }\n            let fee = '';\n            if (this.includes.has('fee')) {\n                fee = `fee {\n          ${this.includes.has('fee.winston') ? 'winston' : ''}\n          ${this.includes.has('fee.ar') ? 'ar' : ''}\n        }`;\n            }\n            let quantity = '';\n            if (this.includes.has('quantity')) {\n                quantity = `quantity {\n          ${this.includes.has('quantity.winston') ? 'winston' : ''}\n          ${this.includes.has('quantity.ar') ? 'ar' : ''}\n        }`;\n            }\n            let data = '';\n            if (this.includes.has('data')) {\n                data = `data {\n          ${this.includes.has('data.size') ? 'size' : ''}\n          ${this.includes.has('data.type') ? 'type' : ''}\n        }`;\n            }\n            let tags = '';\n            if (this.includes.has('tags')) {\n                tags = `tags {\n          ${this.includes.has('tags.name') ? 'name' : ''}\n          ${this.includes.has('tags.value') ? 'value' : ''}\n        }`;\n            }\n            let block = '';\n            if (this.includes.has('block')) {\n                block = `block {\n          ${this.includes.has('block.id') ? 'id' : ''}\n          ${this.includes.has('block.timestamp') ? 'timestamp' : ''}\n          ${this.includes.has('block.height') ? 'height' : ''}\n          ${this.includes.has('block.previous') ? 'previous' : ''}\n        }`;\n            }\n            let parent = '';\n            if (this.includes.has('parent') || this.includes.has('parent.id')) {\n                // Parent only has an ID, so if one of them is included, add both.\n                parent = `parent {\n          id\n        }`;\n            }\n            fields = `\n      ${this.includes.has('id') ? 'id' : ''}\n      ${this.includes.has('anchor') ? 'anchor' : ''}\n      ${this.includes.has('signature') ? 'signature' : ''}\n      ${this.includes.has('recipient') ? 'recipient' : ''}\n      ${owner}\n      ${fee}\n      ${quantity}\n      ${data}\n      ${tags}\n      ${block}\n      ${parent}\n      `;\n            fields = fields.replace(this.emptyLinesRegex, '').trim();\n            if (!fields.length) {\n                fields = `\n        id\n        anchor\n        signature\n        recipient\n        owner {\n          address\n          key\n        }\n        fee {\n          winston\n          ar\n        }\n        quantity {\n          winston\n          ar\n        }\n        data {\n          size\n          type\n        }\n        tags {\n          name\n          value\n        }\n        block {\n          id\n          timestamp\n          height\n          previous\n        }\n        parent {\n          id\n        }`;\n            }\n        }\n        else {\n            fields = `\n      ${this.includes.has('block.id') ? 'id' : ''}\n      ${this.includes.has('block.timestamp') ? 'timestamp' : ''}\n      ${this.includes.has('block.height') ? 'height' : ''}\n      ${this.includes.has('block.previous') ? 'previous' : ''}\n      `;\n            fields = fields.replace(this.emptyLinesRegex, '').trim();\n            if (!fields.length) {\n                fields = `\n        id\n        timestamp\n        height\n        previous`;\n            }\n        }\n        if (this.reqType === 'transactions' || this.reqType === 'blocks') {\n            fields = `\n      pageInfo {\n        hasNextPage\n      }\n      edges { \n        cursor\n        node { \n          ${fields}\n        } \n      }`;\n        }\n        if (!this.reqType || !params) {\n            throw new Error('Invalid options. You need to first set your options!');\n        }\n        return `query {\n      ${this.reqType}(\n        ${params}\n      ){\n        ${fields}\n      }\n    }`;\n    }\n    log(str) {\n        if (this.logs === 1 || (this.logs === 2 && this.arweave.getConfig().api.logging)) {\n            console.log(str);\n        }\n    }\n    validateIncludes() {\n        // Add all children if all of them are missing but a parent is present.\n        if (this.includes.has('owner') && !this.includes.has('owner.address') && !this.includes.has('owner.key')) {\n            this.includes.add('owner.address');\n            this.includes.add('owner.key');\n        }\n        else if (this.includes.has('fee') && !this.includes.has('fee.winston') && !this.includes.has('fee.ar')) {\n            this.includes.add('fee.winston');\n            this.includes.add('fee.ar');\n        }\n        else if (this.includes.has('quantity') &&\n            !this.includes.has('quantity.winston') &&\n            !this.includes.has('quantity.ar')) {\n            this.includes.add('quantity.winston');\n            this.includes.add('quantity.ar');\n        }\n        else if (this.includes.has('data') && !this.includes.has('data.size') && !this.includes.has('data.type')) {\n            this.includes.add('data.size');\n            this.includes.add('data.type');\n        }\n        else if (this.includes.has('tags') && !this.includes.has('tags.name') && !this.includes.has('tags.value')) {\n            this.includes.add('tags.name');\n            this.includes.add('tags.value');\n        }\n        else if (this.includes.has('block') &&\n            !this.includes.has('block.timestamp') &&\n            !this.includes.has('block.height') &&\n            !this.includes.has('block.previous')) {\n            this.includes.add('block.id');\n            this.includes.add('block.timestamp');\n            this.includes.add('block.height');\n            this.includes.add('block.previous');\n        }\n        // Add a parent if one of the children is present but the parent is not\n        if (!this.includes.has('owner') && (this.includes.has('owner.address') || this.includes.has('owner.key'))) {\n            this.includes.add('owner');\n        }\n        else if (!this.includes.has('fee') && (this.includes.has('fee.winston') || this.includes.has('fee.ar'))) {\n            this.includes.add('fee');\n        }\n        else if (!this.includes.has('quantity') &&\n            (this.includes.has('quantity.winston') || this.includes.has('quantity.ar'))) {\n            this.includes.add('quantity');\n        }\n        else if (!this.includes.has('data') && (this.includes.has('data.size') || this.includes.has('data.type'))) {\n            this.includes.add('data');\n        }\n        else if (!this.includes.has('tags') && (this.includes.has('tags.name') || this.includes.has('tags.value'))) {\n            this.includes.add('tags');\n        }\n        else if (!this.includes.has('block') &&\n            (this.includes.has('block.timestamp') || this.includes.has('block.height') || this.includes.has('block.previous'))) {\n            this.includes.add('block');\n        }\n    }\n}\nexports.default = ArDB;\n"]},"metadata":{},"sourceType":"script"}