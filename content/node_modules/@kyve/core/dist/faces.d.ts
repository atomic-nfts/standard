import { Subscriber, Observable } from "rxjs";
import { GQLTransactionInterface } from "ardb/lib/faces/gql";
import { JWKInterface } from "arweave/node/lib/wallet";
import Arweave from "arweave";
export interface UploadFunctionReturn {
    data: any;
    tags?: {
        name: string;
        value: string;
    }[];
}
export declare type UploadFunctionSubscriber = Subscriber<UploadFunctionReturn>;
export declare type UploadFunction = (subscriber: UploadFunctionSubscriber, config: any) => void;
export interface ListenFunctionReturn {
    id: string;
    data: any;
    transaction: GQLTransactionInterface;
    block: number;
}
export declare type ListenFunctionObservable = Observable<ListenFunctionReturn>;
export interface ValidateFunctionReturn {
    valid: boolean;
    id: string;
}
export declare type ValidateFunctionSubscriber = Subscriber<ValidateFunctionReturn>;
export declare type ValidateFunction = (listener: ListenFunctionObservable, subscriber: ValidateFunctionSubscriber, config: any) => void;
export interface Options {
    pool: string;
    stake: number;
    jwk: JWKInterface;
    arweave?: Arweave;
    refetchInterval?: number;
}
