import Arweave from "arweave";
import ArDB from "ardb";
import { Options, UploadFunction, ValidateFunction } from "./faces";
import { JWKInterface } from "arweave/node/lib/wallet";
import { Pool, Governance } from "@kyve/contract-lib";
export declare const APP_NAME = "KYVE - DEV";
export default class KYVE {
    arweave: Arweave;
    ardb: ArDB;
    pool: Pool;
    governance: Governance;
    APP_NAME: string;
    uploadFunc: UploadFunction;
    validateFunc: ValidateFunction;
    private uploaderBuffer;
    private validatorBuffer;
    private readonly refetchInterval;
    poolID: string;
    stake: number;
    protected keyfile: JWKInterface;
    protected dryRun: boolean;
    constructor(options: Options, uploadFunc: UploadFunction, validateFunc: ValidateFunction);
    run(): Promise<void>;
    private listener;
    protected uploader(dryRun?: boolean): void;
    private bundleAndUpload;
    protected validator(): void;
    private bundleAndSubmit;
}
export declare const getData: (id: string, arweave?: Arweave) => Promise<string>;
