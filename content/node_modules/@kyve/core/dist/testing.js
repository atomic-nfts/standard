"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
exports.__esModule = true;
var index_1 = __importStar(require("./index"));
var rxjs_1 = require("rxjs");
var TestInstance = /** @class */ (function (_super) {
    __extends(TestInstance, _super);
    function TestInstance(options, uploadFunc, validateFunc) {
        var _this = _super.call(this, {
            pool: "abc",
            stake: 0,
            jwk: {},
            arweave: options.arweave
        }, uploadFunc, validateFunc) || this;
        _this.poolID = options.pool.id;
        _this.dryRun = true;
        _this.APP_NAME = "KYVE - TEST";
        _this.isUploader = options.uploader;
        console.log("DRY RUNNING!");
        return _this;
    }
    TestInstance.prototype.run = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _a, address;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = this;
                        return [4 /*yield*/, this.arweave.wallets.generate()];
                    case 1:
                        _a.keyfile = _b.sent();
                        return [4 /*yield*/, this.arweave.wallets.getAddress(this.keyfile)];
                    case 2:
                        address = _b.sent();
                        console.log("Address:", address);
                        if (this.isUploader) {
                            console.log("\nRunning as an uploader ...");
                            this.uploader();
                        }
                        else {
                            console.log("\nRunning as a validator ...");
                            this.validator();
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    TestInstance.prototype.validateTx = function (id) {
        return __awaiter(this, void 0, void 0, function () {
            var listener, node;
            var _this = this;
            return __generator(this, function (_a) {
                listener = new rxjs_1.Observable(function (subscriber) {
                    (function () { return __awaiter(_this, void 0, void 0, function () {
                        var res, node_1, data, _a, _b;
                        return __generator(this, function (_c) {
                            switch (_c.label) {
                                case 0: return [4 /*yield*/, this.ardb
                                        .search()
                                        .id(id)
                                        .findOne()];
                                case 1:
                                    res = (_c.sent());
                                    if (!res.length) return [3 /*break*/, 3];
                                    node_1 = res[0].node;
                                    _b = (_a = JSON).parse;
                                    return [4 /*yield*/, index_1.getData(node_1.id)];
                                case 2:
                                    data = _b.apply(_a, [_c.sent()]);
                                    subscriber.next({
                                        id: node_1.id,
                                        data: data,
                                        transaction: node_1,
                                        block: node_1.block.height
                                    });
                                    _c.label = 3;
                                case 3: return [2 /*return*/];
                            }
                        });
                    }); })();
                });
                node = new rxjs_1.Observable(function (subscriber) {
                    var _a;
                    _this.validateFunc(listener, subscriber, (_a = _this.pool.state) === null || _a === void 0 ? void 0 : _a.config);
                });
                node.subscribe(function (res) {
                    if (res.id === id) {
                        console.log("Valid");
                        return res.valid;
                    }
                    else {
                        console.log("Invalid");
                        process.exit(1);
                    }
                });
                return [2 /*return*/];
            });
        });
    };
    return TestInstance;
}(index_1["default"]));
exports["default"] = TestInstance;
