"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
exports.Withdraw = void 0;
var Withdraw = function (state, action) {
    var credit = state.credit;
    var foreignCalls = state.foreignCalls;
    var settings = state.settings;
    var caller = action.caller;
    var input = action.input;
    var qty = input.qty;
    ContractAssert(caller in credit, "Caller is not in the pool.");
    ContractAssert(qty, "Invalid quantity specified.");
    ContractAssert(credit[caller].amount >= qty, "Caller does not have enough balance.");
    foreignCalls.push({
        txID: SmartWeave.transaction.id,
        contract: settings.foriegnContracts.governance,
        input: {
            "function": "transfer",
            target: caller,
            qty: qty
        }
    });
    credit[caller].amount -= qty;
    return __assign(__assign({}, state), { credit: credit, foreignCalls: foreignCalls });
};
exports.Withdraw = Withdraw;
