"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
exports.UpdateContracts = void 0;
var UpdateContracts = function (state, action) {
    var contracts = state.settings.foriegnContracts;
    var caller = action.caller;
    var input = action.input;
    var governance = input.governance;
    var treasury = input.treasury;
    ContractAssert(caller === contracts.governance, "Only the governance can invoke this function.");
    if (governance)
        contracts.governance = governance;
    if (treasury)
        contracts.treasury = treasury;
    return __assign(__assign({}, state), { settings: __assign(__assign({}, state.settings), { foriegnContracts: contracts }) });
};
exports.UpdateContracts = UpdateContracts;
